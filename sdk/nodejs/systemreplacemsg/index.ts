// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AdminArgs, AdminState } from "./admin";
export type Admin = import("./admin").Admin;
export const Admin: typeof import("./admin").Admin = null as any;
utilities.lazyLoad(exports, ["Admin"], () => require("./admin"));

export { AlertmailArgs, AlertmailState } from "./alertmail";
export type Alertmail = import("./alertmail").Alertmail;
export const Alertmail: typeof import("./alertmail").Alertmail = null as any;
utilities.lazyLoad(exports, ["Alertmail"], () => require("./alertmail"));

export { AuthArgs, AuthState } from "./auth";
export type Auth = import("./auth").Auth;
export const Auth: typeof import("./auth").Auth = null as any;
utilities.lazyLoad(exports, ["Auth"], () => require("./auth"));

export { AutomationArgs, AutomationState } from "./automation";
export type Automation = import("./automation").Automation;
export const Automation: typeof import("./automation").Automation = null as any;
utilities.lazyLoad(exports, ["Automation"], () => require("./automation"));

export { DevicedetectionportalArgs, DevicedetectionportalState } from "./devicedetectionportal";
export type Devicedetectionportal = import("./devicedetectionportal").Devicedetectionportal;
export const Devicedetectionportal: typeof import("./devicedetectionportal").Devicedetectionportal = null as any;
utilities.lazyLoad(exports, ["Devicedetectionportal"], () => require("./devicedetectionportal"));

export { EcArgs, EcState } from "./ec";
export type Ec = import("./ec").Ec;
export const Ec: typeof import("./ec").Ec = null as any;
utilities.lazyLoad(exports, ["Ec"], () => require("./ec"));

export { FortiguardwfArgs, FortiguardwfState } from "./fortiguardwf";
export type Fortiguardwf = import("./fortiguardwf").Fortiguardwf;
export const Fortiguardwf: typeof import("./fortiguardwf").Fortiguardwf = null as any;
utilities.lazyLoad(exports, ["Fortiguardwf"], () => require("./fortiguardwf"));

export { FtpArgs, FtpState } from "./ftp";
export type Ftp = import("./ftp").Ftp;
export const Ftp: typeof import("./ftp").Ftp = null as any;
utilities.lazyLoad(exports, ["Ftp"], () => require("./ftp"));

export { HttpArgs, HttpState } from "./http";
export type Http = import("./http").Http;
export const Http: typeof import("./http").Http = null as any;
utilities.lazyLoad(exports, ["Http"], () => require("./http"));

export { IcapArgs, IcapState } from "./icap";
export type Icap = import("./icap").Icap;
export const Icap: typeof import("./icap").Icap = null as any;
utilities.lazyLoad(exports, ["Icap"], () => require("./icap"));

export { MailArgs, MailState } from "./mail";
export type Mail = import("./mail").Mail;
export const Mail: typeof import("./mail").Mail = null as any;
utilities.lazyLoad(exports, ["Mail"], () => require("./mail"));

export { NacquarArgs, NacquarState } from "./nacquar";
export type Nacquar = import("./nacquar").Nacquar;
export const Nacquar: typeof import("./nacquar").Nacquar = null as any;
utilities.lazyLoad(exports, ["Nacquar"], () => require("./nacquar"));

export { NntpArgs, NntpState } from "./nntp";
export type Nntp = import("./nntp").Nntp;
export const Nntp: typeof import("./nntp").Nntp = null as any;
utilities.lazyLoad(exports, ["Nntp"], () => require("./nntp"));

export { SpamArgs, SpamState } from "./spam";
export type Spam = import("./spam").Spam;
export const Spam: typeof import("./spam").Spam = null as any;
utilities.lazyLoad(exports, ["Spam"], () => require("./spam"));

export { SslvpnArgs, SslvpnState } from "./sslvpn";
export type Sslvpn = import("./sslvpn").Sslvpn;
export const Sslvpn: typeof import("./sslvpn").Sslvpn = null as any;
utilities.lazyLoad(exports, ["Sslvpn"], () => require("./sslvpn"));

export { TrafficquotaArgs, TrafficquotaState } from "./trafficquota";
export type Trafficquota = import("./trafficquota").Trafficquota;
export const Trafficquota: typeof import("./trafficquota").Trafficquota = null as any;
utilities.lazyLoad(exports, ["Trafficquota"], () => require("./trafficquota"));

export { UtmArgs, UtmState } from "./utm";
export type Utm = import("./utm").Utm;
export const Utm: typeof import("./utm").Utm = null as any;
utilities.lazyLoad(exports, ["Utm"], () => require("./utm"));

export { WebproxyArgs, WebproxyState } from "./webproxy";
export type Webproxy = import("./webproxy").Webproxy;
export const Webproxy: typeof import("./webproxy").Webproxy = null as any;
utilities.lazyLoad(exports, ["Webproxy"], () => require("./webproxy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:systemreplacemsg/admin:Admin":
                return new Admin(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/alertmail:Alertmail":
                return new Alertmail(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/auth:Auth":
                return new Auth(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/automation:Automation":
                return new Automation(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/devicedetectionportal:Devicedetectionportal":
                return new Devicedetectionportal(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/ec:Ec":
                return new Ec(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/fortiguardwf:Fortiguardwf":
                return new Fortiguardwf(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/ftp:Ftp":
                return new Ftp(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/http:Http":
                return new Http(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/icap:Icap":
                return new Icap(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/mail:Mail":
                return new Mail(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/nacquar:Nacquar":
                return new Nacquar(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/nntp:Nntp":
                return new Nntp(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/spam:Spam":
                return new Spam(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/sslvpn:Sslvpn":
                return new Sslvpn(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/trafficquota:Trafficquota":
                return new Trafficquota(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/utm:Utm":
                return new Utm(name, <any>undefined, { urn })
            case "fortios:systemreplacemsg/webproxy:Webproxy":
                return new Webproxy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/admin", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/alertmail", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/auth", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/automation", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/devicedetectionportal", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/ec", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/fortiguardwf", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/ftp", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/http", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/icap", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/mail", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/nacquar", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/nntp", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/spam", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/sslvpn", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/trafficquota", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/utm", _module)
pulumi.runtime.registerResourceModule("fortios", "systemreplacemsg/webproxy", _module)
