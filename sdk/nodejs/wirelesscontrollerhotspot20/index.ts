// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { Anqp3gppcellularArgs, Anqp3gppcellularState } from "./anqp3gppcellular";
export type Anqp3gppcellular = import("./anqp3gppcellular").Anqp3gppcellular;
export const Anqp3gppcellular: typeof import("./anqp3gppcellular").Anqp3gppcellular = null as any;
utilities.lazyLoad(exports, ["Anqp3gppcellular"], () => require("./anqp3gppcellular"));

export { AnqpipaddresstypeArgs, AnqpipaddresstypeState } from "./anqpipaddresstype";
export type Anqpipaddresstype = import("./anqpipaddresstype").Anqpipaddresstype;
export const Anqpipaddresstype: typeof import("./anqpipaddresstype").Anqpipaddresstype = null as any;
utilities.lazyLoad(exports, ["Anqpipaddresstype"], () => require("./anqpipaddresstype"));

export { AnqpnairealmArgs, AnqpnairealmState } from "./anqpnairealm";
export type Anqpnairealm = import("./anqpnairealm").Anqpnairealm;
export const Anqpnairealm: typeof import("./anqpnairealm").Anqpnairealm = null as any;
utilities.lazyLoad(exports, ["Anqpnairealm"], () => require("./anqpnairealm"));

export { AnqpnetworkauthtypeArgs, AnqpnetworkauthtypeState } from "./anqpnetworkauthtype";
export type Anqpnetworkauthtype = import("./anqpnetworkauthtype").Anqpnetworkauthtype;
export const Anqpnetworkauthtype: typeof import("./anqpnetworkauthtype").Anqpnetworkauthtype = null as any;
utilities.lazyLoad(exports, ["Anqpnetworkauthtype"], () => require("./anqpnetworkauthtype"));

export { AnqproamingconsortiumArgs, AnqproamingconsortiumState } from "./anqproamingconsortium";
export type Anqproamingconsortium = import("./anqproamingconsortium").Anqproamingconsortium;
export const Anqproamingconsortium: typeof import("./anqproamingconsortium").Anqproamingconsortium = null as any;
utilities.lazyLoad(exports, ["Anqproamingconsortium"], () => require("./anqproamingconsortium"));

export { AnqpvenuenameArgs, AnqpvenuenameState } from "./anqpvenuename";
export type Anqpvenuename = import("./anqpvenuename").Anqpvenuename;
export const Anqpvenuename: typeof import("./anqpvenuename").Anqpvenuename = null as any;
utilities.lazyLoad(exports, ["Anqpvenuename"], () => require("./anqpvenuename"));

export { AnqpvenueurlArgs, AnqpvenueurlState } from "./anqpvenueurl";
export type Anqpvenueurl = import("./anqpvenueurl").Anqpvenueurl;
export const Anqpvenueurl: typeof import("./anqpvenueurl").Anqpvenueurl = null as any;
utilities.lazyLoad(exports, ["Anqpvenueurl"], () => require("./anqpvenueurl"));

export { H2qpadviceofchargeArgs, H2qpadviceofchargeState } from "./h2qpadviceofcharge";
export type H2qpadviceofcharge = import("./h2qpadviceofcharge").H2qpadviceofcharge;
export const H2qpadviceofcharge: typeof import("./h2qpadviceofcharge").H2qpadviceofcharge = null as any;
utilities.lazyLoad(exports, ["H2qpadviceofcharge"], () => require("./h2qpadviceofcharge"));

export { H2qpconncapabilityArgs, H2qpconncapabilityState } from "./h2qpconncapability";
export type H2qpconncapability = import("./h2qpconncapability").H2qpconncapability;
export const H2qpconncapability: typeof import("./h2qpconncapability").H2qpconncapability = null as any;
utilities.lazyLoad(exports, ["H2qpconncapability"], () => require("./h2qpconncapability"));

export { H2qpoperatornameArgs, H2qpoperatornameState } from "./h2qpoperatorname";
export type H2qpoperatorname = import("./h2qpoperatorname").H2qpoperatorname;
export const H2qpoperatorname: typeof import("./h2qpoperatorname").H2qpoperatorname = null as any;
utilities.lazyLoad(exports, ["H2qpoperatorname"], () => require("./h2qpoperatorname"));

export { H2qposuproviderArgs, H2qposuproviderState } from "./h2qposuprovider";
export type H2qposuprovider = import("./h2qposuprovider").H2qposuprovider;
export const H2qposuprovider: typeof import("./h2qposuprovider").H2qposuprovider = null as any;
utilities.lazyLoad(exports, ["H2qposuprovider"], () => require("./h2qposuprovider"));

export { H2qposuprovidernaiArgs, H2qposuprovidernaiState } from "./h2qposuprovidernai";
export type H2qposuprovidernai = import("./h2qposuprovidernai").H2qposuprovidernai;
export const H2qposuprovidernai: typeof import("./h2qposuprovidernai").H2qposuprovidernai = null as any;
utilities.lazyLoad(exports, ["H2qposuprovidernai"], () => require("./h2qposuprovidernai"));

export { H2qptermsandconditionsArgs, H2qptermsandconditionsState } from "./h2qptermsandconditions";
export type H2qptermsandconditions = import("./h2qptermsandconditions").H2qptermsandconditions;
export const H2qptermsandconditions: typeof import("./h2qptermsandconditions").H2qptermsandconditions = null as any;
utilities.lazyLoad(exports, ["H2qptermsandconditions"], () => require("./h2qptermsandconditions"));

export { H2qpwanmetricArgs, H2qpwanmetricState } from "./h2qpwanmetric";
export type H2qpwanmetric = import("./h2qpwanmetric").H2qpwanmetric;
export const H2qpwanmetric: typeof import("./h2qpwanmetric").H2qpwanmetric = null as any;
utilities.lazyLoad(exports, ["H2qpwanmetric"], () => require("./h2qpwanmetric"));

export { HsprofileArgs, HsprofileState } from "./hsprofile";
export type Hsprofile = import("./hsprofile").Hsprofile;
export const Hsprofile: typeof import("./hsprofile").Hsprofile = null as any;
utilities.lazyLoad(exports, ["Hsprofile"], () => require("./hsprofile"));

export { IconArgs, IconState } from "./icon";
export type Icon = import("./icon").Icon;
export const Icon: typeof import("./icon").Icon = null as any;
utilities.lazyLoad(exports, ["Icon"], () => require("./icon"));

export { QosmapArgs, QosmapState } from "./qosmap";
export type Qosmap = import("./qosmap").Qosmap;
export const Qosmap: typeof import("./qosmap").Qosmap = null as any;
utilities.lazyLoad(exports, ["Qosmap"], () => require("./qosmap"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:wirelesscontrollerhotspot20/anqp3gppcellular:Anqp3gppcellular":
                return new Anqp3gppcellular(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/anqpipaddresstype:Anqpipaddresstype":
                return new Anqpipaddresstype(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/anqpnairealm:Anqpnairealm":
                return new Anqpnairealm(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/anqpnetworkauthtype:Anqpnetworkauthtype":
                return new Anqpnetworkauthtype(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/anqproamingconsortium:Anqproamingconsortium":
                return new Anqproamingconsortium(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/anqpvenuename:Anqpvenuename":
                return new Anqpvenuename(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/anqpvenueurl:Anqpvenueurl":
                return new Anqpvenueurl(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/h2qpadviceofcharge:H2qpadviceofcharge":
                return new H2qpadviceofcharge(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/h2qpconncapability:H2qpconncapability":
                return new H2qpconncapability(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/h2qpoperatorname:H2qpoperatorname":
                return new H2qpoperatorname(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/h2qposuprovider:H2qposuprovider":
                return new H2qposuprovider(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/h2qposuprovidernai:H2qposuprovidernai":
                return new H2qposuprovidernai(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/h2qptermsandconditions:H2qptermsandconditions":
                return new H2qptermsandconditions(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/h2qpwanmetric:H2qpwanmetric":
                return new H2qpwanmetric(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/hsprofile:Hsprofile":
                return new Hsprofile(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/icon:Icon":
                return new Icon(name, <any>undefined, { urn })
            case "fortios:wirelesscontrollerhotspot20/qosmap:Qosmap":
                return new Qosmap(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/anqp3gppcellular", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/anqpipaddresstype", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/anqpnairealm", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/anqpnetworkauthtype", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/anqproamingconsortium", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/anqpvenuename", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/anqpvenueurl", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/h2qpadviceofcharge", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/h2qpconncapability", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/h2qpoperatorname", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/h2qposuprovider", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/h2qposuprovidernai", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/h2qptermsandconditions", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/h2qpwanmetric", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/hsprofile", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/icon", _module)
pulumi.runtime.registerResourceModule("fortios", "wirelesscontrollerhotspot20/qosmap", _module)
