// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get information on an fortios firewall profileprotocoloptions
 */
export function getProfileprotocoloptions(args: GetProfileprotocoloptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetProfileprotocoloptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:firewall/getProfileprotocoloptions:getProfileprotocoloptions", {
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking getProfileprotocoloptions.
 */
export interface GetProfileprotocoloptionsArgs {
    /**
     * Specify the name of the desired firewall profileprotocoloptions.
     */
    name: string;
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: string;
}

/**
 * A collection of values returned by getProfileprotocoloptions.
 */
export interface GetProfileprotocoloptionsResult {
    /**
     * Configure CIFS protocol options. The structure of `cifs` block is documented below.
     */
    readonly cifs: outputs.firewall.GetProfileprotocoloptionsCif[];
    /**
     * Optional comments.
     */
    readonly comment: string;
    /**
     * Configure DNS protocol options. The structure of `dns` block is documented below.
     */
    readonly dns: outputs.firewall.GetProfileprotocoloptionsDn[];
    /**
     * Flow/proxy feature set.
     */
    readonly featureSet: string;
    /**
     * Configure FTP protocol options. The structure of `ftp` block is documented below.
     */
    readonly ftps: outputs.firewall.GetProfileprotocoloptionsFtp[];
    /**
     * Configure HTTP protocol options. The structure of `http` block is documented below.
     */
    readonly https: outputs.firewall.GetProfileprotocoloptionsHttp[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Configure IMAP protocol options. The structure of `imap` block is documented below.
     */
    readonly imaps: outputs.firewall.GetProfileprotocoloptionsImap[];
    /**
     * Configure Mail signature. The structure of `mailSignature` block is documented below.
     */
    readonly mailSignatures: outputs.firewall.GetProfileprotocoloptionsMailSignature[];
    /**
     * Configure MAPI protocol options. The structure of `mapi` block is documented below.
     */
    readonly mapis: outputs.firewall.GetProfileprotocoloptionsMapi[];
    /**
     * Name.
     */
    readonly name: string;
    /**
     * Configure NNTP protocol options. The structure of `nntp` block is documented below.
     */
    readonly nntps: outputs.firewall.GetProfileprotocoloptionsNntp[];
    /**
     * Enable/disable logging for antivirus oversize file blocking.
     */
    readonly oversizeLog: string;
    /**
     * Configure POP3 protocol options. The structure of `pop3` block is documented below.
     */
    readonly pop3s: outputs.firewall.GetProfileprotocoloptionsPop3[];
    /**
     * Name of the replacement message group to be used
     */
    readonly replacemsgGroup: string;
    /**
     * Enable/disable inspection of RPC over HTTP.
     */
    readonly rpcOverHttp: string;
    /**
     * Configure SMTP protocol options. The structure of `smtp` block is documented below.
     */
    readonly smtps: outputs.firewall.GetProfileprotocoloptionsSmtp[];
    /**
     * Configure SFTP and SCP protocol options. The structure of `ssh` block is documented below.
     */
    readonly sshes: outputs.firewall.GetProfileprotocoloptionsSsh[];
    /**
     * Enable/disable logging for HTTP/HTTPS switching protocols.
     */
    readonly switchingProtocolsLog: string;
    readonly vdomparam?: string;
}
/**
 * Use this data source to get information on an fortios firewall profileprotocoloptions
 */
export function getProfileprotocoloptionsOutput(args: GetProfileprotocoloptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProfileprotocoloptionsResult> {
    return pulumi.output(args).apply((a: any) => getProfileprotocoloptions(a, opts))
}

/**
 * A collection of arguments for invoking getProfileprotocoloptions.
 */
export interface GetProfileprotocoloptionsOutputArgs {
    /**
     * Specify the name of the desired firewall profileprotocoloptions.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
