// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get information on an fortios system linkmonitor
 */
export function getLinkmonitor(args: GetLinkmonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetLinkmonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:sys/getLinkmonitor:getLinkmonitor", {
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking getLinkmonitor.
 */
export interface GetLinkmonitorArgs {
    /**
     * Specify the name of the desired system linkmonitor.
     */
    name: string;
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: string;
}

/**
 * A collection of values returned by getLinkmonitor.
 */
export interface GetLinkmonitorResult {
    /**
     * Address mode (IPv4 or IPv6).
     */
    readonly addrMode: string;
    /**
     * Traffic class ID.
     */
    readonly classId: number;
    /**
     * Differentiated services code point (DSCP) in the IP header of the probe packet.
     */
    readonly diffservcode: string;
    /**
     * Threshold weight to trigger link failure alert.
     */
    readonly failWeight: number;
    /**
     * Number of retry attempts before the server is considered down (1 - 10, default = 5)
     */
    readonly failtime: number;
    /**
     * Gateway IP address used to probe the server.
     */
    readonly gatewayIp: string;
    /**
     * Gateway IPv6 address used to probe the server.
     */
    readonly gatewayIp6: string;
    /**
     * HA election priority (1 - 50).
     */
    readonly haPriority: number;
    /**
     * String in the http-agent field in the HTTP header.
     */
    readonly httpAgent: string;
    /**
     * If you are monitoring an HTML server you can send an HTTP-GET request with a custom string. Use this option to define the string.
     */
    readonly httpGet: string;
    /**
     * String that you expect to see in the HTTP-GET requests of the traffic to be monitored.
     */
    readonly httpMatch: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Detection interval (1 - 3600 sec, default = 5).
     */
    readonly interval: number;
    /**
     * Link monitor name.
     */
    readonly name: string;
    /**
     * Packet size of a twamp test session,
     */
    readonly packetSize: number;
    /**
     * Twamp controller password in authentication mode
     */
    readonly password: string;
    /**
     * Port number of the traffic to be used to monitor the server.
     */
    readonly port: number;
    /**
     * Number of most recent probes that should be used to calculate latency and jitter (5 - 30, default = 30).
     */
    readonly probeCount: number;
    /**
     * Time to wait before a probe packet is considered lost (500 - 5000 msec, default = 500).
     */
    readonly probeTimeout: number;
    /**
     * Protocols used to monitor the server.
     */
    readonly protocol: string;
    /**
     * Number of successful responses received before server is considered recovered (1 - 10, default = 5).
     */
    readonly recoverytime: number;
    /**
     * Subnet to monitor. The structure of `route` block is documented below.
     */
    readonly routes: outputs.sys.GetLinkmonitorRoute[];
    /**
     * Twamp controller security mode.
     */
    readonly securityMode: string;
    /**
     * Mode of server configuration.
     */
    readonly serverConfig: string;
    /**
     * Servers for link-monitor to monitor. The structure of `serverList` block is documented below.
     */
    readonly serverLists: outputs.sys.GetLinkmonitorServerList[];
    /**
     * Server type (static or dynamic).
     */
    readonly serverType: string;
    /**
     * IP address of the server(s) to be monitored. The structure of `server` block is documented below.
     */
    readonly servers: outputs.sys.GetLinkmonitorServer[];
    /**
     * Only use monitor to read quality values. If enabled, static routes and cascade interfaces will not be updated.
     */
    readonly serviceDetection: string;
    /**
     * Source IP address used in packet to the server.
     */
    readonly sourceIp: string;
    /**
     * Source IPv6 address used in packet to the server.
     */
    readonly sourceIp6: string;
    /**
     * Interface that receives the traffic to be monitored.
     */
    readonly srcintf: string;
    /**
     * Enable/disable this link monitor.
     */
    readonly status: string;
    /**
     * Enable/disable update cascade interface.
     */
    readonly updateCascadeInterface: string;
    /**
     * Enable/disable updating the policy route.
     */
    readonly updatePolicyRoute: string;
    /**
     * Enable/disable updating the static route.
     */
    readonly updateStaticRoute: string;
    readonly vdomparam?: string;
}
/**
 * Use this data source to get information on an fortios system linkmonitor
 */
export function getLinkmonitorOutput(args: GetLinkmonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLinkmonitorResult> {
    return pulumi.output(args).apply((a: any) => getLinkmonitor(a, opts))
}

/**
 * A collection of arguments for invoking getLinkmonitor.
 */
export interface GetLinkmonitorOutputArgs {
    /**
     * Specify the name of the desired system linkmonitor.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
