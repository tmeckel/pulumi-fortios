// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get information on an fortios system admin
 */
export function getAdmin(args: GetAdminArgs, opts?: pulumi.InvokeOptions): Promise<GetAdminResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:sys/getAdmin:getAdmin", {
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts);
}

/**
 * A collection of arguments for invoking getAdmin.
 */
export interface GetAdminArgs {
    /**
     * Specify the name of the desired system admin.
     */
    name: string;
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: string;
}

/**
 * A collection of values returned by getAdmin.
 */
export interface GetAdminResult {
    /**
     * Access profile for this administrator. Access profiles control administrator access to FortiGate features.
     */
    readonly accprofile: string;
    /**
     * Enable to use the name of an access profile provided by the remote authentication server to control the FortiGate features that this administrator can access.
     */
    readonly accprofileOverride: string;
    /**
     * Enable/disable allow admin session to be removed by privileged admin users.
     */
    readonly allowRemoveAdminSession: string;
    /**
     * Comment.
     */
    readonly comments: string;
    /**
     * This administrator's email address.
     */
    readonly emailTo: string;
    /**
     * Enable/disable force password change on next login.
     */
    readonly forcePasswordChange: string;
    /**
     * This administrator's FortiToken serial number.
     */
    readonly fortitoken: string;
    /**
     * Enable/disable guest authentication.
     */
    readonly guestAuth: string;
    /**
     * Guest management portal language.
     */
    readonly guestLang: string;
    /**
     * Select guest user groups. The structure of `guestUsergroups` block is documented below.
     */
    readonly guestUsergroups: outputs.sys.GetAdminGuestUsergroup[];
    /**
     * GUI dashboards. The structure of `guiDashboard` block is documented below.
     */
    readonly guiDashboards: outputs.sys.GetAdminGuiDashboard[];
    /**
     * Favorite GUI menu IDs for the global VDOM. The structure of `guiGlobalMenuFavorites` block is documented below.
     */
    readonly guiGlobalMenuFavorites: outputs.sys.GetAdminGuiGlobalMenuFavorite[];
    /**
     * Acknowledgement of new features. The structure of `guiNewFeatureAcknowledge` block is documented below.
     */
    readonly guiNewFeatureAcknowledges: outputs.sys.GetAdminGuiNewFeatureAcknowledge[];
    /**
     * Favorite GUI menu IDs for VDOMs. The structure of `guiVdomMenuFavorites` block is documented below.
     */
    readonly guiVdomMenuFavorites: outputs.sys.GetAdminGuiVdomMenuFavorite[];
    /**
     * Admin user hidden attribute.
     */
    readonly hidden: number;
    /**
     * history0
     */
    readonly history0: string;
    /**
     * history1
     */
    readonly history1: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost1: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost10: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost2: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost3: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost4: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost5: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost6: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost7: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost8: string;
    /**
     * Any IPv6 address from which the administrator can connect to the FortiGate unit. Default allows access from any IPv6 address.
     */
    readonly ip6Trusthost9: string;
    /**
     * Record user login time. The structure of `loginTime` block is documented below.
     */
    readonly loginTimes: outputs.sys.GetAdminLoginTime[];
    /**
     * Select guest user groups.
     */
    readonly name: string;
    /**
     * Admin user password.
     */
    readonly password: string;
    /**
     * Password expire time.
     */
    readonly passwordExpire: string;
    /**
     * Set to enable peer certificate authentication (for HTTPS admin access).
     */
    readonly peerAuth: string;
    /**
     * Name of peer group defined under config user group which has PKI members. Used for peer certificate authentication (for HTTPS admin access).
     */
    readonly peerGroup: string;
    /**
     * Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access.
     */
    readonly radiusVdomOverride: string;
    /**
     * Enable/disable authentication using a remote RADIUS, LDAP, or TACACS+ server.
     */
    readonly remoteAuth: string;
    /**
     * User group name used for remote auth.
     */
    readonly remoteGroup: string;
    /**
     * Firewall schedule used to restrict when the administrator can log in. No schedule means no restrictions.
     */
    readonly schedule: string;
    /**
     * Custom SMS server to send SMS messages to.
     */
    readonly smsCustomServer: string;
    /**
     * Phone number on which the administrator receives SMS messages.
     */
    readonly smsPhone: string;
    /**
     * Send SMS messages using the FortiGuard SMS server or a custom server.
     */
    readonly smsServer: string;
    /**
     * Select the certificate to be used by the FortiGate for authentication with an SSH client.
     */
    readonly sshCertificate: string;
    /**
     * Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
     */
    readonly sshPublicKey1: string;
    /**
     * Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
     */
    readonly sshPublicKey2: string;
    /**
     * Public key of an SSH client. The client is authenticated without being asked for credentials. Create the public-private key pair in the SSH client application.
     */
    readonly sshPublicKey3: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost1: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost10: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost2: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost3: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost4: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost5: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost6: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost7: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost8: string;
    /**
     * Any IPv4 address or subnet address and netmask from which the administrator can connect to the FortiGate unit. Default allows access from any IPv4 address.
     */
    readonly trusthost9: string;
    /**
     * Enable/disable two-factor authentication.
     */
    readonly twoFactor: string;
    /**
     * Authentication method by FortiToken Cloud.
     */
    readonly twoFactorAuthentication: string;
    /**
     * Notification method for user activation by FortiToken Cloud.
     */
    readonly twoFactorNotification: string;
    /**
     * Enable to use the names of VDOMs provided by the remote authentication server to control the VDOMs that this administrator can access.
     */
    readonly vdomOverride: string;
    readonly vdomparam?: string;
    /**
     * Virtual domain(s) that the administrator can access. The structure of `vdom` block is documented below.
     */
    readonly vdoms: outputs.sys.GetAdminVdom[];
    /**
     * Enable/disable wildcard RADIUS authentication.
     */
    readonly wildcard: string;
}
/**
 * Use this data source to get information on an fortios system admin
 */
export function getAdminOutput(args: GetAdminOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAdminResult> {
    return pulumi.output(args).apply((a: any) => getAdmin(a, opts))
}

/**
 * A collection of arguments for invoking getAdmin.
 */
export interface GetAdminOutputArgs {
    /**
     * Specify the name of the desired system admin.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
     */
    vdomparam?: pulumi.Input<string>;
}
