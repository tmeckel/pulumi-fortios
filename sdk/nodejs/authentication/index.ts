// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { RuleArgs, RuleState } from "./rule";
export type Rule = import("./rule").Rule;
export const Rule: typeof import("./rule").Rule = null as any;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));

export { SchemeArgs, SchemeState } from "./scheme";
export type Scheme = import("./scheme").Scheme;
export const Scheme: typeof import("./scheme").Scheme = null as any;
utilities.lazyLoad(exports, ["Scheme"], () => require("./scheme"));

export { SettingArgs, SettingState } from "./setting";
export type Setting = import("./setting").Setting;
export const Setting: typeof import("./setting").Setting = null as any;
utilities.lazyLoad(exports, ["Setting"], () => require("./setting"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:authentication/rule:Rule":
                return new Rule(name, <any>undefined, { urn })
            case "fortios:authentication/scheme:Scheme":
                return new Scheme(name, <any>undefined, { urn })
            case "fortios:authentication/setting:Setting":
                return new Setting(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "authentication/rule", _module)
pulumi.runtime.registerResourceModule("fortios", "authentication/scheme", _module)
pulumi.runtime.registerResourceModule("fortios", "authentication/setting", _module)
