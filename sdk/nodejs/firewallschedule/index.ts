// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetGroupArgs, GetGroupResult, GetGroupOutputArgs } from "./getGroup";
export const getGroup: typeof import("./getGroup").getGroup = null as any;
export const getGroupOutput: typeof import("./getGroup").getGroupOutput = null as any;
utilities.lazyLoad(exports, ["getGroup","getGroupOutput"], () => require("./getGroup"));

export { GetGrouplistArgs, GetGrouplistResult, GetGrouplistOutputArgs } from "./getGrouplist";
export const getGrouplist: typeof import("./getGrouplist").getGrouplist = null as any;
export const getGrouplistOutput: typeof import("./getGrouplist").getGrouplistOutput = null as any;
utilities.lazyLoad(exports, ["getGrouplist","getGrouplistOutput"], () => require("./getGrouplist"));

export { GetOnetimeArgs, GetOnetimeResult, GetOnetimeOutputArgs } from "./getOnetime";
export const getOnetime: typeof import("./getOnetime").getOnetime = null as any;
export const getOnetimeOutput: typeof import("./getOnetime").getOnetimeOutput = null as any;
utilities.lazyLoad(exports, ["getOnetime","getOnetimeOutput"], () => require("./getOnetime"));

export { GetOnetimelistArgs, GetOnetimelistResult, GetOnetimelistOutputArgs } from "./getOnetimelist";
export const getOnetimelist: typeof import("./getOnetimelist").getOnetimelist = null as any;
export const getOnetimelistOutput: typeof import("./getOnetimelist").getOnetimelistOutput = null as any;
utilities.lazyLoad(exports, ["getOnetimelist","getOnetimelistOutput"], () => require("./getOnetimelist"));

export { GetRecurringArgs, GetRecurringResult, GetRecurringOutputArgs } from "./getRecurring";
export const getRecurring: typeof import("./getRecurring").getRecurring = null as any;
export const getRecurringOutput: typeof import("./getRecurring").getRecurringOutput = null as any;
utilities.lazyLoad(exports, ["getRecurring","getRecurringOutput"], () => require("./getRecurring"));

export { GetRecurringlistArgs, GetRecurringlistResult, GetRecurringlistOutputArgs } from "./getRecurringlist";
export const getRecurringlist: typeof import("./getRecurringlist").getRecurringlist = null as any;
export const getRecurringlistOutput: typeof import("./getRecurringlist").getRecurringlistOutput = null as any;
utilities.lazyLoad(exports, ["getRecurringlist","getRecurringlistOutput"], () => require("./getRecurringlist"));

export { GroupArgs, GroupState } from "./group";
export type Group = import("./group").Group;
export const Group: typeof import("./group").Group = null as any;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));

export { OnetimeArgs, OnetimeState } from "./onetime";
export type Onetime = import("./onetime").Onetime;
export const Onetime: typeof import("./onetime").Onetime = null as any;
utilities.lazyLoad(exports, ["Onetime"], () => require("./onetime"));

export { RecurringArgs, RecurringState } from "./recurring";
export type Recurring = import("./recurring").Recurring;
export const Recurring: typeof import("./recurring").Recurring = null as any;
utilities.lazyLoad(exports, ["Recurring"], () => require("./recurring"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:firewallschedule/group:Group":
                return new Group(name, <any>undefined, { urn })
            case "fortios:firewallschedule/onetime:Onetime":
                return new Onetime(name, <any>undefined, { urn })
            case "fortios:firewallschedule/recurring:Recurring":
                return new Recurring(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "firewallschedule/group", _module)
pulumi.runtime.registerResourceModule("fortios", "firewallschedule/onetime", _module)
pulumi.runtime.registerResourceModule("fortios", "firewallschedule/recurring", _module)
