// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { HostchecksoftwareArgs, HostchecksoftwareState } from "./hostchecksoftware";
export type Hostchecksoftware = import("./hostchecksoftware").Hostchecksoftware;
export const Hostchecksoftware: typeof import("./hostchecksoftware").Hostchecksoftware = null as any;
utilities.lazyLoad(exports, ["Hostchecksoftware"], () => require("./hostchecksoftware"));

export { PortalArgs, PortalState } from "./portal";
export type Portal = import("./portal").Portal;
export const Portal: typeof import("./portal").Portal = null as any;
utilities.lazyLoad(exports, ["Portal"], () => require("./portal"));

export { RealmArgs, RealmState } from "./realm";
export type Realm = import("./realm").Realm;
export const Realm: typeof import("./realm").Realm = null as any;
utilities.lazyLoad(exports, ["Realm"], () => require("./realm"));

export { UserbookmarkArgs, UserbookmarkState } from "./userbookmark";
export type Userbookmark = import("./userbookmark").Userbookmark;
export const Userbookmark: typeof import("./userbookmark").Userbookmark = null as any;
utilities.lazyLoad(exports, ["Userbookmark"], () => require("./userbookmark"));

export { UsergroupbookmarkArgs, UsergroupbookmarkState } from "./usergroupbookmark";
export type Usergroupbookmark = import("./usergroupbookmark").Usergroupbookmark;
export const Usergroupbookmark: typeof import("./usergroupbookmark").Usergroupbookmark = null as any;
utilities.lazyLoad(exports, ["Usergroupbookmark"], () => require("./usergroupbookmark"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:vpnsslweb/hostchecksoftware:Hostchecksoftware":
                return new Hostchecksoftware(name, <any>undefined, { urn })
            case "fortios:vpnsslweb/portal:Portal":
                return new Portal(name, <any>undefined, { urn })
            case "fortios:vpnsslweb/realm:Realm":
                return new Realm(name, <any>undefined, { urn })
            case "fortios:vpnsslweb/userbookmark:Userbookmark":
                return new Userbookmark(name, <any>undefined, { urn })
            case "fortios:vpnsslweb/usergroupbookmark:Usergroupbookmark":
                return new Usergroupbookmark(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "vpnsslweb/hostchecksoftware", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnsslweb/portal", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnsslweb/realm", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnsslweb/userbookmark", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnsslweb/usergroupbookmark", _module)
