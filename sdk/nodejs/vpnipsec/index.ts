// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConcentratorArgs, ConcentratorState } from "./concentrator";
export type Concentrator = import("./concentrator").Concentrator;
export const Concentrator: typeof import("./concentrator").Concentrator = null as any;
utilities.lazyLoad(exports, ["Concentrator"], () => require("./concentrator"));

export { FecArgs, FecState } from "./fec";
export type Fec = import("./fec").Fec;
export const Fec: typeof import("./fec").Fec = null as any;
utilities.lazyLoad(exports, ["Fec"], () => require("./fec"));

export { ForticlientArgs, ForticlientState } from "./forticlient";
export type Forticlient = import("./forticlient").Forticlient;
export const Forticlient: typeof import("./forticlient").Forticlient = null as any;
utilities.lazyLoad(exports, ["Forticlient"], () => require("./forticlient"));

export { ManualkeyArgs, ManualkeyState } from "./manualkey";
export type Manualkey = import("./manualkey").Manualkey;
export const Manualkey: typeof import("./manualkey").Manualkey = null as any;
utilities.lazyLoad(exports, ["Manualkey"], () => require("./manualkey"));

export { ManualkeyinterfaceArgs, ManualkeyinterfaceState } from "./manualkeyinterface";
export type Manualkeyinterface = import("./manualkeyinterface").Manualkeyinterface;
export const Manualkeyinterface: typeof import("./manualkeyinterface").Manualkeyinterface = null as any;
utilities.lazyLoad(exports, ["Manualkeyinterface"], () => require("./manualkeyinterface"));

export { Phase1Args, Phase1State } from "./phase1";
export type Phase1 = import("./phase1").Phase1;
export const Phase1: typeof import("./phase1").Phase1 = null as any;
utilities.lazyLoad(exports, ["Phase1"], () => require("./phase1"));

export { Phase1interfaceArgs, Phase1interfaceState } from "./phase1interface";
export type Phase1interface = import("./phase1interface").Phase1interface;
export const Phase1interface: typeof import("./phase1interface").Phase1interface = null as any;
utilities.lazyLoad(exports, ["Phase1interface"], () => require("./phase1interface"));

export { Phase2Args, Phase2State } from "./phase2";
export type Phase2 = import("./phase2").Phase2;
export const Phase2: typeof import("./phase2").Phase2 = null as any;
utilities.lazyLoad(exports, ["Phase2"], () => require("./phase2"));

export { Phase2interfaceArgs, Phase2interfaceState } from "./phase2interface";
export type Phase2interface = import("./phase2interface").Phase2interface;
export const Phase2interface: typeof import("./phase2interface").Phase2interface = null as any;
utilities.lazyLoad(exports, ["Phase2interface"], () => require("./phase2interface"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:vpnipsec/concentrator:Concentrator":
                return new Concentrator(name, <any>undefined, { urn })
            case "fortios:vpnipsec/fec:Fec":
                return new Fec(name, <any>undefined, { urn })
            case "fortios:vpnipsec/forticlient:Forticlient":
                return new Forticlient(name, <any>undefined, { urn })
            case "fortios:vpnipsec/manualkey:Manualkey":
                return new Manualkey(name, <any>undefined, { urn })
            case "fortios:vpnipsec/manualkeyinterface:Manualkeyinterface":
                return new Manualkeyinterface(name, <any>undefined, { urn })
            case "fortios:vpnipsec/phase1:Phase1":
                return new Phase1(name, <any>undefined, { urn })
            case "fortios:vpnipsec/phase1interface:Phase1interface":
                return new Phase1interface(name, <any>undefined, { urn })
            case "fortios:vpnipsec/phase2:Phase2":
                return new Phase2(name, <any>undefined, { urn })
            case "fortios:vpnipsec/phase2interface:Phase2interface":
                return new Phase2interface(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/concentrator", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/fec", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/forticlient", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/manualkey", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/manualkeyinterface", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/phase1", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/phase1interface", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/phase2", _module)
pulumi.runtime.registerResourceModule("fortios", "vpnipsec/phase2interface", _module)
