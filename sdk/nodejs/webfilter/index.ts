// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ContentArgs, ContentState } from "./content";
export type Content = import("./content").Content;
export const Content: typeof import("./content").Content = null as any;
utilities.lazyLoad(exports, ["Content"], () => require("./content"));

export { ContentheaderArgs, ContentheaderState } from "./contentheader";
export type Contentheader = import("./contentheader").Contentheader;
export const Contentheader: typeof import("./contentheader").Contentheader = null as any;
utilities.lazyLoad(exports, ["Contentheader"], () => require("./contentheader"));

export { FortiguardArgs, FortiguardState } from "./fortiguard";
export type Fortiguard = import("./fortiguard").Fortiguard;
export const Fortiguard: typeof import("./fortiguard").Fortiguard = null as any;
utilities.lazyLoad(exports, ["Fortiguard"], () => require("./fortiguard"));

export { FtgdlocalcatArgs, FtgdlocalcatState } from "./ftgdlocalcat";
export type Ftgdlocalcat = import("./ftgdlocalcat").Ftgdlocalcat;
export const Ftgdlocalcat: typeof import("./ftgdlocalcat").Ftgdlocalcat = null as any;
utilities.lazyLoad(exports, ["Ftgdlocalcat"], () => require("./ftgdlocalcat"));

export { FtgdlocalratingArgs, FtgdlocalratingState } from "./ftgdlocalrating";
export type Ftgdlocalrating = import("./ftgdlocalrating").Ftgdlocalrating;
export const Ftgdlocalrating: typeof import("./ftgdlocalrating").Ftgdlocalrating = null as any;
utilities.lazyLoad(exports, ["Ftgdlocalrating"], () => require("./ftgdlocalrating"));

export { IpsurlfiltercachesettingArgs, IpsurlfiltercachesettingState } from "./ipsurlfiltercachesetting";
export type Ipsurlfiltercachesetting = import("./ipsurlfiltercachesetting").Ipsurlfiltercachesetting;
export const Ipsurlfiltercachesetting: typeof import("./ipsurlfiltercachesetting").Ipsurlfiltercachesetting = null as any;
utilities.lazyLoad(exports, ["Ipsurlfiltercachesetting"], () => require("./ipsurlfiltercachesetting"));

export { IpsurlfiltersettingArgs, IpsurlfiltersettingState } from "./ipsurlfiltersetting";
export type Ipsurlfiltersetting = import("./ipsurlfiltersetting").Ipsurlfiltersetting;
export const Ipsurlfiltersetting: typeof import("./ipsurlfiltersetting").Ipsurlfiltersetting = null as any;
utilities.lazyLoad(exports, ["Ipsurlfiltersetting"], () => require("./ipsurlfiltersetting"));

export { Ipsurlfiltersetting6Args, Ipsurlfiltersetting6State } from "./ipsurlfiltersetting6";
export type Ipsurlfiltersetting6 = import("./ipsurlfiltersetting6").Ipsurlfiltersetting6;
export const Ipsurlfiltersetting6: typeof import("./ipsurlfiltersetting6").Ipsurlfiltersetting6 = null as any;
utilities.lazyLoad(exports, ["Ipsurlfiltersetting6"], () => require("./ipsurlfiltersetting6"));

export { OverrideArgs, OverrideState } from "./override";
export type Override = import("./override").Override;
export const Override: typeof import("./override").Override = null as any;
utilities.lazyLoad(exports, ["Override"], () => require("./override"));

export { ProfileArgs, ProfileState } from "./profile";
export type Profile = import("./profile").Profile;
export const Profile: typeof import("./profile").Profile = null as any;
utilities.lazyLoad(exports, ["Profile"], () => require("./profile"));

export { SearchengineArgs, SearchengineState } from "./searchengine";
export type Searchengine = import("./searchengine").Searchengine;
export const Searchengine: typeof import("./searchengine").Searchengine = null as any;
utilities.lazyLoad(exports, ["Searchengine"], () => require("./searchengine"));

export { UrlfilterArgs, UrlfilterState } from "./urlfilter";
export type Urlfilter = import("./urlfilter").Urlfilter;
export const Urlfilter: typeof import("./urlfilter").Urlfilter = null as any;
utilities.lazyLoad(exports, ["Urlfilter"], () => require("./urlfilter"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortios:webfilter/content:Content":
                return new Content(name, <any>undefined, { urn })
            case "fortios:webfilter/contentheader:Contentheader":
                return new Contentheader(name, <any>undefined, { urn })
            case "fortios:webfilter/fortiguard:Fortiguard":
                return new Fortiguard(name, <any>undefined, { urn })
            case "fortios:webfilter/ftgdlocalcat:Ftgdlocalcat":
                return new Ftgdlocalcat(name, <any>undefined, { urn })
            case "fortios:webfilter/ftgdlocalrating:Ftgdlocalrating":
                return new Ftgdlocalrating(name, <any>undefined, { urn })
            case "fortios:webfilter/ipsurlfiltercachesetting:Ipsurlfiltercachesetting":
                return new Ipsurlfiltercachesetting(name, <any>undefined, { urn })
            case "fortios:webfilter/ipsurlfiltersetting6:Ipsurlfiltersetting6":
                return new Ipsurlfiltersetting6(name, <any>undefined, { urn })
            case "fortios:webfilter/ipsurlfiltersetting:Ipsurlfiltersetting":
                return new Ipsurlfiltersetting(name, <any>undefined, { urn })
            case "fortios:webfilter/override:Override":
                return new Override(name, <any>undefined, { urn })
            case "fortios:webfilter/profile:Profile":
                return new Profile(name, <any>undefined, { urn })
            case "fortios:webfilter/searchengine:Searchengine":
                return new Searchengine(name, <any>undefined, { urn })
            case "fortios:webfilter/urlfilter:Urlfilter":
                return new Urlfilter(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortios", "webfilter/content", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/contentheader", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/fortiguard", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/ftgdlocalcat", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/ftgdlocalrating", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/ipsurlfiltercachesetting", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/ipsurlfiltersetting", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/ipsurlfiltersetting6", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/override", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/profile", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/searchengine", _module)
pulumi.runtime.registerResourceModule("fortios", "webfilter/urlfilter", _module)
