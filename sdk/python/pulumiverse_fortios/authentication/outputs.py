# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'RuleDstaddr6',
    'RuleDstaddr',
    'RuleSrcaddr6',
    'RuleSrcaddr',
    'RuleSrcintf',
    'SchemeUserDatabase',
    'SettingDevRange',
    'SettingUserCertCa',
]

@pulumi.output_type
class RuleDstaddr6(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        :param str name: Authentication rule name.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Authentication rule name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class RuleDstaddr(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        :param str name: Address name.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Address name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class RuleSrcaddr6(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        :param str name: Authentication rule name.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Authentication rule name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class RuleSrcaddr(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        :param str name: Address name.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Address name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class RuleSrcintf(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        :param str name: Interface name.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Interface name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class SchemeUserDatabase(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        :param str name: Authentication server name.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Authentication server name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class SettingDevRange(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        :param str name: Address name.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Address name.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class SettingUserCertCa(dict):
    def __init__(__self__, *,
                 name: Optional[str] = None):
        """
        :param str name: CA certificate list.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        CA certificate list.
        """
        return pulumi.get(self, "name")


