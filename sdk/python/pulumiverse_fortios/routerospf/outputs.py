# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'OspfinterfaceMd5Key',
]

@pulumi.output_type
class OspfinterfaceMd5Key(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "keyString":
            suggest = "key_string"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in OspfinterfaceMd5Key. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        OspfinterfaceMd5Key.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        OspfinterfaceMd5Key.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 id: Optional[int] = None,
                 key_string: Optional[str] = None):
        """
        :param int id: Key ID (1 - 255).
        :param str key_string: Password for the key.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if key_string is not None:
            pulumi.set(__self__, "key_string", key_string)

    @property
    @pulumi.getter
    def id(self) -> Optional[int]:
        """
        Key ID (1 - 255).
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="keyString")
    def key_string(self) -> Optional[str]:
        """
        Password for the key.
        """
        return pulumi.get(self, "key_string")


