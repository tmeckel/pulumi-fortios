# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetFortimanagerResult',
    'AwaitableGetFortimanagerResult',
    'get_fortimanager',
    'get_fortimanager_output',
]

@pulumi.output_type
class GetFortimanagerResult:
    """
    A collection of values returned by getFortimanager.
    """
    def __init__(__self__, central_management=None, central_mgmt_auto_backup=None, central_mgmt_schedule_config_restore=None, central_mgmt_schedule_script_restore=None, id=None, ip=None, ipsec=None, vdom=None, vdomparam=None):
        if central_management and not isinstance(central_management, str):
            raise TypeError("Expected argument 'central_management' to be a str")
        pulumi.set(__self__, "central_management", central_management)
        if central_mgmt_auto_backup and not isinstance(central_mgmt_auto_backup, str):
            raise TypeError("Expected argument 'central_mgmt_auto_backup' to be a str")
        pulumi.set(__self__, "central_mgmt_auto_backup", central_mgmt_auto_backup)
        if central_mgmt_schedule_config_restore and not isinstance(central_mgmt_schedule_config_restore, str):
            raise TypeError("Expected argument 'central_mgmt_schedule_config_restore' to be a str")
        pulumi.set(__self__, "central_mgmt_schedule_config_restore", central_mgmt_schedule_config_restore)
        if central_mgmt_schedule_script_restore and not isinstance(central_mgmt_schedule_script_restore, str):
            raise TypeError("Expected argument 'central_mgmt_schedule_script_restore' to be a str")
        pulumi.set(__self__, "central_mgmt_schedule_script_restore", central_mgmt_schedule_script_restore)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip and not isinstance(ip, str):
            raise TypeError("Expected argument 'ip' to be a str")
        pulumi.set(__self__, "ip", ip)
        if ipsec and not isinstance(ipsec, str):
            raise TypeError("Expected argument 'ipsec' to be a str")
        pulumi.set(__self__, "ipsec", ipsec)
        if vdom and not isinstance(vdom, str):
            raise TypeError("Expected argument 'vdom' to be a str")
        pulumi.set(__self__, "vdom", vdom)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="centralManagement")
    def central_management(self) -> str:
        """
        Enable/disable FortiManager central management.
        """
        return pulumi.get(self, "central_management")

    @property
    @pulumi.getter(name="centralMgmtAutoBackup")
    def central_mgmt_auto_backup(self) -> str:
        """
        Enable/disable central management auto backup.
        """
        return pulumi.get(self, "central_mgmt_auto_backup")

    @property
    @pulumi.getter(name="centralMgmtScheduleConfigRestore")
    def central_mgmt_schedule_config_restore(self) -> str:
        """
        Enable/disable central management schedule config restore.
        """
        return pulumi.get(self, "central_mgmt_schedule_config_restore")

    @property
    @pulumi.getter(name="centralMgmtScheduleScriptRestore")
    def central_mgmt_schedule_script_restore(self) -> str:
        """
        Enable/disable central management schedule script restore.
        """
        return pulumi.get(self, "central_mgmt_schedule_script_restore")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ip(self) -> str:
        """
        IP address.
        """
        return pulumi.get(self, "ip")

    @property
    @pulumi.getter
    def ipsec(self) -> str:
        """
        Enable/disable FortiManager IPsec tunnel.
        """
        return pulumi.get(self, "ipsec")

    @property
    @pulumi.getter
    def vdom(self) -> str:
        """
        Virtual domain name.
        """
        return pulumi.get(self, "vdom")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetFortimanagerResult(GetFortimanagerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFortimanagerResult(
            central_management=self.central_management,
            central_mgmt_auto_backup=self.central_mgmt_auto_backup,
            central_mgmt_schedule_config_restore=self.central_mgmt_schedule_config_restore,
            central_mgmt_schedule_script_restore=self.central_mgmt_schedule_script_restore,
            id=self.id,
            ip=self.ip,
            ipsec=self.ipsec,
            vdom=self.vdom,
            vdomparam=self.vdomparam)


def get_fortimanager(vdomparam: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFortimanagerResult:
    """
    Use this data source to get information on fortios system fortimanager


    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    __args__ = dict()
    __args__['vdomparam'] = vdomparam
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fortios:sys/getFortimanager:getFortimanager', __args__, opts=opts, typ=GetFortimanagerResult).value

    return AwaitableGetFortimanagerResult(
        central_management=__ret__.central_management,
        central_mgmt_auto_backup=__ret__.central_mgmt_auto_backup,
        central_mgmt_schedule_config_restore=__ret__.central_mgmt_schedule_config_restore,
        central_mgmt_schedule_script_restore=__ret__.central_mgmt_schedule_script_restore,
        id=__ret__.id,
        ip=__ret__.ip,
        ipsec=__ret__.ipsec,
        vdom=__ret__.vdom,
        vdomparam=__ret__.vdomparam)


@_utilities.lift_output_func(get_fortimanager)
def get_fortimanager_output(vdomparam: Optional[pulumi.Input[Optional[str]]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFortimanagerResult]:
    """
    Use this data source to get information on fortios system fortimanager


    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    ...
