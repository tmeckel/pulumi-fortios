# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GlobalInterface',
]

@pulumi.output_type
class GlobalInterface(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "interfaceName":
            suggest = "interface_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in GlobalInterface. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        GlobalInterface.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        GlobalInterface.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 interface_name: Optional[str] = None):
        """
        :param str interface_name: Physical interface name.
        """
        if interface_name is not None:
            pulumi.set(__self__, "interface_name", interface_name)

    @property
    @pulumi.getter(name="interfaceName")
    def interface_name(self) -> Optional[str]:
        """
        Physical interface name.
        """
        return pulumi.get(self, "interface_name")


