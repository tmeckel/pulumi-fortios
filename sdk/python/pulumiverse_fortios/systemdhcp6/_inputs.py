# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ServerIpRangeArgs',
    'ServerPrefixRangeArgs',
]

@pulumi.input_type
class ServerIpRangeArgs:
    def __init__(__self__, *,
                 end_ip: Optional[pulumi.Input[str]] = None,
                 id: Optional[pulumi.Input[int]] = None,
                 start_ip: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] end_ip: End of IP range.
        :param pulumi.Input[int] id: ID.
        :param pulumi.Input[str] start_ip: Start of IP range.
        """
        if end_ip is not None:
            pulumi.set(__self__, "end_ip", end_ip)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if start_ip is not None:
            pulumi.set(__self__, "start_ip", start_ip)

    @property
    @pulumi.getter(name="endIp")
    def end_ip(self) -> Optional[pulumi.Input[str]]:
        """
        End of IP range.
        """
        return pulumi.get(self, "end_ip")

    @end_ip.setter
    def end_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_ip", value)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[int]]:
        """
        ID.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter(name="startIp")
    def start_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Start of IP range.
        """
        return pulumi.get(self, "start_ip")

    @start_ip.setter
    def start_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_ip", value)


@pulumi.input_type
class ServerPrefixRangeArgs:
    def __init__(__self__, *,
                 end_prefix: Optional[pulumi.Input[str]] = None,
                 id: Optional[pulumi.Input[int]] = None,
                 prefix_length: Optional[pulumi.Input[int]] = None,
                 start_prefix: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] end_prefix: End of prefix range.
        :param pulumi.Input[int] id: ID.
        :param pulumi.Input[int] prefix_length: Prefix length.
        :param pulumi.Input[str] start_prefix: Start of prefix range.
        """
        if end_prefix is not None:
            pulumi.set(__self__, "end_prefix", end_prefix)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if prefix_length is not None:
            pulumi.set(__self__, "prefix_length", prefix_length)
        if start_prefix is not None:
            pulumi.set(__self__, "start_prefix", start_prefix)

    @property
    @pulumi.getter(name="endPrefix")
    def end_prefix(self) -> Optional[pulumi.Input[str]]:
        """
        End of prefix range.
        """
        return pulumi.get(self, "end_prefix")

    @end_prefix.setter
    def end_prefix(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_prefix", value)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[int]]:
        """
        ID.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter(name="prefixLength")
    def prefix_length(self) -> Optional[pulumi.Input[int]]:
        """
        Prefix length.
        """
        return pulumi.get(self, "prefix_length")

    @prefix_length.setter
    def prefix_length(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "prefix_length", value)

    @property
    @pulumi.getter(name="startPrefix")
    def start_prefix(self) -> Optional[pulumi.Input[str]]:
        """
        Start of prefix range.
        """
        return pulumi.get(self, "start_prefix")

    @start_prefix.setter
    def start_prefix(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_prefix", value)


