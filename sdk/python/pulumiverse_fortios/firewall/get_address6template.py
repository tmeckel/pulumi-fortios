# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAddress6templateResult',
    'AwaitableGetAddress6templateResult',
    'get_address6template',
    'get_address6template_output',
]

@pulumi.output_type
class GetAddress6templateResult:
    """
    A collection of values returned by getAddress6template.
    """
    def __init__(__self__, fabric_object=None, id=None, ip6=None, name=None, subnet_segment_count=None, subnet_segments=None, vdomparam=None):
        if fabric_object and not isinstance(fabric_object, str):
            raise TypeError("Expected argument 'fabric_object' to be a str")
        pulumi.set(__self__, "fabric_object", fabric_object)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip6 and not isinstance(ip6, str):
            raise TypeError("Expected argument 'ip6' to be a str")
        pulumi.set(__self__, "ip6", ip6)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if subnet_segment_count and not isinstance(subnet_segment_count, int):
            raise TypeError("Expected argument 'subnet_segment_count' to be a int")
        pulumi.set(__self__, "subnet_segment_count", subnet_segment_count)
        if subnet_segments and not isinstance(subnet_segments, list):
            raise TypeError("Expected argument 'subnet_segments' to be a list")
        pulumi.set(__self__, "subnet_segments", subnet_segments)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="fabricObject")
    def fabric_object(self) -> str:
        """
        Security Fabric global object setting.
        """
        return pulumi.get(self, "fabric_object")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ip6(self) -> str:
        """
        IPv6 address prefix.
        """
        return pulumi.get(self, "ip6")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Subnet segment value name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="subnetSegmentCount")
    def subnet_segment_count(self) -> int:
        """
        Number of IPv6 subnet segments.
        """
        return pulumi.get(self, "subnet_segment_count")

    @property
    @pulumi.getter(name="subnetSegments")
    def subnet_segments(self) -> Sequence['outputs.GetAddress6templateSubnetSegmentResult']:
        """
        IPv6 subnet segments. The structure of `subnet_segment` block is documented below.
        """
        return pulumi.get(self, "subnet_segments")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetAddress6templateResult(GetAddress6templateResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAddress6templateResult(
            fabric_object=self.fabric_object,
            id=self.id,
            ip6=self.ip6,
            name=self.name,
            subnet_segment_count=self.subnet_segment_count,
            subnet_segments=self.subnet_segments,
            vdomparam=self.vdomparam)


def get_address6template(name: Optional[str] = None,
                         vdomparam: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAddress6templateResult:
    """
    Use this data source to get information on an fortios firewall address6template


    :param str name: Specify the name of the desired firewall address6template.
    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['vdomparam'] = vdomparam
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('fortios:firewall/getAddress6template:getAddress6template', __args__, opts=opts, typ=GetAddress6templateResult).value

    return AwaitableGetAddress6templateResult(
        fabric_object=__ret__.fabric_object,
        id=__ret__.id,
        ip6=__ret__.ip6,
        name=__ret__.name,
        subnet_segment_count=__ret__.subnet_segment_count,
        subnet_segments=__ret__.subnet_segments,
        vdomparam=__ret__.vdomparam)


@_utilities.lift_output_func(get_address6template)
def get_address6template_output(name: Optional[pulumi.Input[str]] = None,
                                vdomparam: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAddress6templateResult]:
    """
    Use this data source to get information on an fortios firewall address6template


    :param str name: Specify the name of the desired firewall address6template.
    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    ...
