// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Wirelesscontroller.Outputs
{

    [OutputType]
    public sealed class SnmpUser
    {
        /// <summary>
        /// Authentication protocol. Valid values: `md5`, `sha`.
        /// </summary>
        public readonly string? AuthProto;
        /// <summary>
        /// Password for authentication protocol.
        /// </summary>
        public readonly string? AuthPwd;
        /// <summary>
        /// SNMP User Name
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Configure SNMP User Notify Hosts.
        /// </summary>
        public readonly string? NotifyHosts;
        /// <summary>
        /// Privacy (encryption) protocol. Valid values: `aes`, `des`, `aes256`, `aes256cisco`.
        /// </summary>
        public readonly string? PrivProto;
        /// <summary>
        /// Password for privacy (encryption) protocol.
        /// </summary>
        public readonly string? PrivPwd;
        /// <summary>
        /// Enable/disable SNMP queries for this user. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Queries;
        /// <summary>
        /// Security level for message authentication and encryption. Valid values: `no-auth-no-priv`, `auth-no-priv`, `auth-priv`.
        /// </summary>
        public readonly string? SecurityLevel;
        /// <summary>
        /// SNMP User Enable Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Enable/disable traps for this SNMP user. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? TrapStatus;

        [OutputConstructor]
        private SnmpUser(
            string? authProto,

            string? authPwd,

            string? name,

            string? notifyHosts,

            string? privProto,

            string? privPwd,

            string? queries,

            string? securityLevel,

            string? status,

            string? trapStatus)
        {
            AuthProto = authProto;
            AuthPwd = authPwd;
            Name = name;
            NotifyHosts = notifyHosts;
            PrivProto = privProto;
            PrivPwd = privPwd;
            Queries = queries;
            SecurityLevel = securityLevel;
            Status = status;
            TrapStatus = trapStatus;
        }
    }
}
