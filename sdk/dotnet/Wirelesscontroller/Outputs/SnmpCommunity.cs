// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Wirelesscontroller.Outputs
{

    [OutputType]
    public sealed class SnmpCommunity
    {
        /// <summary>
        /// Configure IPv4 SNMP managers (hosts). The structure of `hosts` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.SnmpCommunityHost> Hosts;
        /// <summary>
        /// Community ID.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// Community name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Enable/disable SNMP v1 queries. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? QueryV1Status;
        /// <summary>
        /// Enable/disable SNMP v2c queries. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? QueryV2cStatus;
        /// <summary>
        /// Enable/disable this SNMP community. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Enable/disable SNMP v1 traps. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? TrapV1Status;
        /// <summary>
        /// Enable/disable SNMP v2c traps. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? TrapV2cStatus;

        [OutputConstructor]
        private SnmpCommunity(
            ImmutableArray<Outputs.SnmpCommunityHost> hosts,

            int? id,

            string? name,

            string? queryV1Status,

            string? queryV2cStatus,

            string? status,

            string? trapV1Status,

            string? trapV2cStatus)
        {
            Hosts = hosts;
            Id = id;
            Name = name;
            QueryV1Status = queryV1Status;
            QueryV2cStatus = queryV2cStatus;
            Status = status;
            TrapV1Status = trapV1Status;
            TrapV2cStatus = trapV2cStatus;
        }
    }
}
