// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Vpn.Outputs
{

    [OutputType]
    public sealed class OcvpnOverlay
    {
        /// <summary>
        /// Enable/disable client address assignment. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? AssignIp;
        /// <summary>
        /// ID.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// Allow or deny traffic from other overlays. Valid values: `allow`, `deny`.
        /// </summary>
        public readonly string? InterOverlay;
        /// <summary>
        /// End of client IPv4 range.
        /// </summary>
        public readonly string? Ipv4EndIp;
        /// <summary>
        /// Start of client IPv4 range.
        /// </summary>
        public readonly string? Ipv4StartIp;
        /// <summary>
        /// Overlay name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Overlay name.
        /// </summary>
        public readonly string? OverlayName;
        /// <summary>
        /// Internal subnets to register with OCVPN service. The structure of `subnets` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.OcvpnOverlaySubnet> Subnets;

        [OutputConstructor]
        private OcvpnOverlay(
            string? assignIp,

            int? id,

            string? interOverlay,

            string? ipv4EndIp,

            string? ipv4StartIp,

            string? name,

            string? overlayName,

            ImmutableArray<Outputs.OcvpnOverlaySubnet> subnets)
        {
            AssignIp = assignIp;
            Id = id;
            InterOverlay = interOverlay;
            Ipv4EndIp = ipv4EndIp;
            Ipv4StartIp = ipv4StartIp;
            Name = name;
            OverlayName = overlayName;
            Subnets = subnets;
        }
    }
}
