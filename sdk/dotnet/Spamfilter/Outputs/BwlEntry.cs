// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Spamfilter.Outputs
{

    [OutputType]
    public sealed class BwlEntry
    {
        /// <summary>
        /// Reject, mark as spam or good email. Valid values: `reject`, `spam`, `clear`.
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// IP address type. Valid values: `ipv4`, `ipv6`.
        /// </summary>
        public readonly string? AddrType;
        /// <summary>
        /// Email address pattern.
        /// </summary>
        public readonly string? EmailPattern;
        /// <summary>
        /// Entry ID.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// IPv4 network address/subnet mask bits.
        /// </summary>
        public readonly string? Ip4Subnet;
        /// <summary>
        /// IPv6 network address/subnet mask bits.
        /// </summary>
        public readonly string? Ip6Subnet;
        /// <summary>
        /// Wildcard pattern or regular expression. Valid values: `wildcard`, `regexp`.
        /// </summary>
        public readonly string? PatternType;
        /// <summary>
        /// Enable/disable status. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Entry type. Valid values: `ip`, `email`.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private BwlEntry(
            string? action,

            string? addrType,

            string? emailPattern,

            int? id,

            string? ip4Subnet,

            string? ip6Subnet,

            string? patternType,

            string? status,

            string? type)
        {
            Action = action;
            AddrType = addrType;
            EmailPattern = emailPattern;
            Id = id;
            Ip4Subnet = ip4Subnet;
            Ip6Subnet = ip6Subnet;
            PatternType = patternType;
            Status = status;
            Type = type;
        }
    }
}
