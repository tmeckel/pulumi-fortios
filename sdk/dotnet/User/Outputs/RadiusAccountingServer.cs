// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.User.Outputs
{

    [OutputType]
    public sealed class RadiusAccountingServer
    {
        /// <summary>
        /// ID (0 - 4294967295).
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// Specify outgoing interface to reach server.
        /// </summary>
        public readonly string? Interface;
        /// <summary>
        /// Specify how to select outgoing interface to reach server. Valid values: `auto`, `sdwan`, `specify`.
        /// </summary>
        public readonly string? InterfaceSelectMethod;
        /// <summary>
        /// RADIUS accounting port number.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Secret key.
        /// </summary>
        public readonly string? Secret;
        /// <summary>
        /// {&lt;name_str|ip_str&gt;} Server CN domain name or IP.
        /// </summary>
        public readonly string? Server;
        /// <summary>
        /// Source IP address for communications to the RADIUS server.
        /// </summary>
        public readonly string? SourceIp;
        /// <summary>
        /// Status. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private RadiusAccountingServer(
            int? id,

            string? @interface,

            string? interfaceSelectMethod,

            int? port,

            string? secret,

            string? server,

            string? sourceIp,

            string? status)
        {
            Id = id;
            Interface = @interface;
            InterfaceSelectMethod = interfaceSelectMethod;
            Port = port;
            Secret = secret;
            Server = server;
            SourceIp = sourceIp;
            Status = status;
        }
    }
}
