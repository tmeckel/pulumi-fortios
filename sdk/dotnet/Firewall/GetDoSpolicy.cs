// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Firewall
{
    public static class GetDoSpolicy
    {
        /// <summary>
        /// Use this data source to get information on an fortios firewall DoSpolicy
        /// </summary>
        public static Task<GetDoSpolicyResult> InvokeAsync(GetDoSpolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDoSpolicyResult>("fortios:firewall/getDoSpolicy:getDoSpolicy", args ?? new GetDoSpolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information on an fortios firewall DoSpolicy
        /// </summary>
        public static Output<GetDoSpolicyResult> Invoke(GetDoSpolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDoSpolicyResult>("fortios:firewall/getDoSpolicy:getDoSpolicy", args ?? new GetDoSpolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDoSpolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the policyid of the desired firewall DoSpolicy.
        /// </summary>
        [Input("policyid", required: true)]
        public int Policyid { get; set; }

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public string? Vdomparam { get; set; }

        public GetDoSpolicyArgs()
        {
        }
        public static new GetDoSpolicyArgs Empty => new GetDoSpolicyArgs();
    }

    public sealed class GetDoSpolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the policyid of the desired firewall DoSpolicy.
        /// </summary>
        [Input("policyid", required: true)]
        public Input<int> Policyid { get; set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public GetDoSpolicyInvokeArgs()
        {
        }
        public static new GetDoSpolicyInvokeArgs Empty => new GetDoSpolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetDoSpolicyResult
    {
        /// <summary>
        /// Anomaly name. The structure of `anomaly` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDoSpolicyAnomalyResult> Anomalies;
        /// <summary>
        /// Comment.
        /// </summary>
        public readonly string Comments;
        /// <summary>
        /// Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDoSpolicyDstaddrResult> Dstaddrs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Incoming interface name from available interfaces.
        /// </summary>
        public readonly string Interface;
        /// <summary>
        /// Anomaly name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Policy ID.
        /// </summary>
        public readonly int Policyid;
        /// <summary>
        /// Service object from available options. The structure of `service` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDoSpolicyServiceResult> Services;
        /// <summary>
        /// Source address name from available addresses. The structure of `srcaddr` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDoSpolicySrcaddrResult> Srcaddrs;
        /// <summary>
        /// Enable/disable this anomaly.
        /// </summary>
        public readonly string Status;
        public readonly string? Vdomparam;

        [OutputConstructor]
        private GetDoSpolicyResult(
            ImmutableArray<Outputs.GetDoSpolicyAnomalyResult> anomalies,

            string comments,

            ImmutableArray<Outputs.GetDoSpolicyDstaddrResult> dstaddrs,

            string id,

            string @interface,

            string name,

            int policyid,

            ImmutableArray<Outputs.GetDoSpolicyServiceResult> services,

            ImmutableArray<Outputs.GetDoSpolicySrcaddrResult> srcaddrs,

            string status,

            string? vdomparam)
        {
            Anomalies = anomalies;
            Comments = comments;
            Dstaddrs = dstaddrs;
            Id = id;
            Interface = @interface;
            Name = name;
            Policyid = policyid;
            Services = services;
            Srcaddrs = srcaddrs;
            Status = status;
            Vdomparam = vdomparam;
        }
    }
}
