// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Firewall.Outputs
{

    [OutputType]
    public sealed class SslsshprofileSsh
    {
        /// <summary>
        /// Level of SSL inspection. Valid values: `disable`, `deep-inspection`.
        /// </summary>
        public readonly string? InspectAll;
        /// <summary>
        /// Ports to use for scanning (1 - 65535, default = 443).
        /// </summary>
        public readonly string? Ports;
        /// <summary>
        /// Proxy traffic after the TCP 3-way handshake has been established (not before). Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? ProxyAfterTcpHandshake;
        /// <summary>
        /// Relative strength of encryption algorithms accepted during negotiation. Valid values: `compatible`, `high-encryption`.
        /// </summary>
        public readonly string? SshAlgorithm;
        /// <summary>
        /// Enable/disable SSH policy check. Valid values: `disable`, `enable`.
        /// </summary>
        public readonly string? SshPolicyCheck;
        /// <summary>
        /// Enable/disable SSH tunnel policy check. Valid values: `disable`, `enable`.
        /// </summary>
        public readonly string? SshTunPolicyCheck;
        /// <summary>
        /// Configure protocol inspection status. Valid values: `disable`, `deep-inspection`.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Action based on SSH version being unsupported. Valid values: `bypass`, `block`.
        /// </summary>
        public readonly string? UnsupportedVersion;

        [OutputConstructor]
        private SslsshprofileSsh(
            string? inspectAll,

            string? ports,

            string? proxyAfterTcpHandshake,

            string? sshAlgorithm,

            string? sshPolicyCheck,

            string? sshTunPolicyCheck,

            string? status,

            string? unsupportedVersion)
        {
            InspectAll = inspectAll;
            Ports = ports;
            ProxyAfterTcpHandshake = proxyAfterTcpHandshake;
            SshAlgorithm = sshAlgorithm;
            SshPolicyCheck = sshPolicyCheck;
            SshTunPolicyCheck = sshTunPolicyCheck;
            Status = status;
            UnsupportedVersion = unsupportedVersion;
        }
    }
}
