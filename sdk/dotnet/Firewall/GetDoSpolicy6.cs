// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Firewall
{
    public static class GetDoSpolicy6
    {
        /// <summary>
        /// Use this data source to get information on an fortios firewall DoSpolicy6
        /// </summary>
        public static Task<GetDoSpolicy6Result> InvokeAsync(GetDoSpolicy6Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDoSpolicy6Result>("fortios:firewall/getDoSpolicy6:getDoSpolicy6", args ?? new GetDoSpolicy6Args(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information on an fortios firewall DoSpolicy6
        /// </summary>
        public static Output<GetDoSpolicy6Result> Invoke(GetDoSpolicy6InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDoSpolicy6Result>("fortios:firewall/getDoSpolicy6:getDoSpolicy6", args ?? new GetDoSpolicy6InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDoSpolicy6Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the policyid of the desired firewall DoSpolicy6.
        /// </summary>
        [Input("policyid", required: true)]
        public int Policyid { get; set; }

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public string? Vdomparam { get; set; }

        public GetDoSpolicy6Args()
        {
        }
        public static new GetDoSpolicy6Args Empty => new GetDoSpolicy6Args();
    }

    public sealed class GetDoSpolicy6InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the policyid of the desired firewall DoSpolicy6.
        /// </summary>
        [Input("policyid", required: true)]
        public Input<int> Policyid { get; set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public GetDoSpolicy6InvokeArgs()
        {
        }
        public static new GetDoSpolicy6InvokeArgs Empty => new GetDoSpolicy6InvokeArgs();
    }


    [OutputType]
    public sealed class GetDoSpolicy6Result
    {
        /// <summary>
        /// Anomaly name. The structure of `anomaly` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDoSpolicy6AnomalyResult> Anomalies;
        /// <summary>
        /// Comment.
        /// </summary>
        public readonly string Comments;
        /// <summary>
        /// Destination address name from available addresses. The structure of `dstaddr` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDoSpolicy6DstaddrResult> Dstaddrs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Incoming interface name from available interfaces.
        /// </summary>
        public readonly string Interface;
        /// <summary>
        /// Anomaly name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Policy ID.
        /// </summary>
        public readonly int Policyid;
        /// <summary>
        /// Service object from available options. The structure of `service` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDoSpolicy6ServiceResult> Services;
        /// <summary>
        /// Source address name from available addresses. The structure of `srcaddr` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDoSpolicy6SrcaddrResult> Srcaddrs;
        /// <summary>
        /// Enable/disable this anomaly.
        /// </summary>
        public readonly string Status;
        public readonly string? Vdomparam;

        [OutputConstructor]
        private GetDoSpolicy6Result(
            ImmutableArray<Outputs.GetDoSpolicy6AnomalyResult> anomalies,

            string comments,

            ImmutableArray<Outputs.GetDoSpolicy6DstaddrResult> dstaddrs,

            string id,

            string @interface,

            string name,

            int policyid,

            ImmutableArray<Outputs.GetDoSpolicy6ServiceResult> services,

            ImmutableArray<Outputs.GetDoSpolicy6SrcaddrResult> srcaddrs,

            string status,

            string? vdomparam)
        {
            Anomalies = anomalies;
            Comments = comments;
            Dstaddrs = dstaddrs;
            Id = id;
            Interface = @interface;
            Name = name;
            Policyid = policyid;
            Services = services;
            Srcaddrs = srcaddrs;
            Status = status;
            Vdomparam = vdomparam;
        }
    }
}
