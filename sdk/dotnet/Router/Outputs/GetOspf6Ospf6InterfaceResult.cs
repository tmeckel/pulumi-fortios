// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Router.Outputs
{

    [OutputType]
    public sealed class GetOspf6Ospf6InterfaceResult
    {
        /// <summary>
        /// A.B.C.D, in IPv4 address format.
        /// </summary>
        public readonly string AreaId;
        /// <summary>
        /// Authentication mode.
        /// </summary>
        public readonly string Authentication;
        /// <summary>
        /// Enable/disable Bidirectional Forwarding Detection (BFD).
        /// </summary>
        public readonly string Bfd;
        /// <summary>
        /// Cost of the interface, value range from 0 to 65535, 0 means auto-cost.
        /// </summary>
        public readonly int Cost;
        /// <summary>
        /// Dead interval.
        /// </summary>
        public readonly int DeadInterval;
        /// <summary>
        /// Hello interval.
        /// </summary>
        public readonly int HelloInterval;
        /// <summary>
        /// Configuration interface name.
        /// </summary>
        public readonly string Interface;
        /// <summary>
        /// Authentication algorithm.
        /// </summary>
        public readonly string IpsecAuthAlg;
        /// <summary>
        /// Encryption algorithm.
        /// </summary>
        public readonly string IpsecEncAlg;
        /// <summary>
        /// IPsec authentication and encryption keys. The structure of `ipsec_keys` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOspf6Ospf6InterfaceIpsecKeyResult> IpsecKeys;
        /// <summary>
        /// Key roll-over interval.
        /// </summary>
        public readonly int KeyRolloverInterval;
        /// <summary>
        /// MTU for OSPFv3 packets.
        /// </summary>
        public readonly int Mtu;
        /// <summary>
        /// Enable/disable ignoring MTU field in DBD packets.
        /// </summary>
        public readonly string MtuIgnore;
        /// <summary>
        /// Passive interface name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media The structure of `neighbor` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOspf6Ospf6InterfaceNeighborResult> Neighbors;
        /// <summary>
        /// Network type.
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// priority
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Retransmit interval.
        /// </summary>
        public readonly int RetransmitInterval;
        /// <summary>
        /// status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Transmit delay.
        /// </summary>
        public readonly int TransmitDelay;

        [OutputConstructor]
        private GetOspf6Ospf6InterfaceResult(
            string areaId,

            string authentication,

            string bfd,

            int cost,

            int deadInterval,

            int helloInterval,

            string @interface,

            string ipsecAuthAlg,

            string ipsecEncAlg,

            ImmutableArray<Outputs.GetOspf6Ospf6InterfaceIpsecKeyResult> ipsecKeys,

            int keyRolloverInterval,

            int mtu,

            string mtuIgnore,

            string name,

            ImmutableArray<Outputs.GetOspf6Ospf6InterfaceNeighborResult> neighbors,

            string networkType,

            int priority,

            int retransmitInterval,

            string status,

            int transmitDelay)
        {
            AreaId = areaId;
            Authentication = authentication;
            Bfd = bfd;
            Cost = cost;
            DeadInterval = deadInterval;
            HelloInterval = helloInterval;
            Interface = @interface;
            IpsecAuthAlg = ipsecAuthAlg;
            IpsecEncAlg = ipsecEncAlg;
            IpsecKeys = ipsecKeys;
            KeyRolloverInterval = keyRolloverInterval;
            Mtu = mtu;
            MtuIgnore = mtuIgnore;
            Name = name;
            Neighbors = neighbors;
            NetworkType = networkType;
            Priority = priority;
            RetransmitInterval = retransmitInterval;
            Status = status;
            TransmitDelay = transmitDelay;
        }
    }
}
