// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Router
{
    public static class GetRoutemap
    {
        /// <summary>
        /// Use this data source to get information on an fortios router routemap
        /// </summary>
        public static Task<GetRoutemapResult> InvokeAsync(GetRoutemapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutemapResult>("fortios:router/getRoutemap:getRoutemap", args ?? new GetRoutemapArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information on an fortios router routemap
        /// </summary>
        public static Output<GetRoutemapResult> Invoke(GetRoutemapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutemapResult>("fortios:router/getRoutemap:getRoutemap", args ?? new GetRoutemapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutemapArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the name of the desired router routemap.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public string? Vdomparam { get; set; }

        public GetRoutemapArgs()
        {
        }
        public static new GetRoutemapArgs Empty => new GetRoutemapArgs();
    }

    public sealed class GetRoutemapInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the name of the desired router routemap.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public GetRoutemapInvokeArgs()
        {
        }
        public static new GetRoutemapInvokeArgs Empty => new GetRoutemapInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutemapResult
    {
        /// <summary>
        /// Optional comments.
        /// </summary>
        public readonly string Comments;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Rule. The structure of `rule` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRoutemapRuleResult> Rules;
        public readonly string? Vdomparam;

        [OutputConstructor]
        private GetRoutemapResult(
            string comments,

            string id,

            string name,

            ImmutableArray<Outputs.GetRoutemapRuleResult> rules,

            string? vdomparam)
        {
            Comments = comments;
            Id = id;
            Name = name;
            Rules = rules;
            Vdomparam = vdomparam;
        }
    }
}
