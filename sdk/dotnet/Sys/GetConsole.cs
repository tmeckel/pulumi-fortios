// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Sys
{
    public static class GetConsole
    {
        /// <summary>
        /// Use this data source to get information on fortios system console
        /// </summary>
        public static Task<GetConsoleResult> InvokeAsync(GetConsoleArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConsoleResult>("fortios:sys/getConsole:getConsole", args ?? new GetConsoleArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information on fortios system console
        /// </summary>
        public static Output<GetConsoleResult> Invoke(GetConsoleInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConsoleResult>("fortios:sys/getConsole:getConsole", args ?? new GetConsoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConsoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public string? Vdomparam { get; set; }

        public GetConsoleArgs()
        {
        }
        public static new GetConsoleArgs Empty => new GetConsoleArgs();
    }

    public sealed class GetConsoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
        /// </summary>
        [Input("vdomparam")]
        public Input<string>? Vdomparam { get; set; }

        public GetConsoleInvokeArgs()
        {
        }
        public static new GetConsoleInvokeArgs Empty => new GetConsoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetConsoleResult
    {
        /// <summary>
        /// Console baud rate.
        /// </summary>
        public readonly string Baudrate;
        /// <summary>
        /// Enable/disable access for FortiExplorer.
        /// </summary>
        public readonly string Fortiexplorer;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Enable/disable serial console and FortiExplorer.
        /// </summary>
        public readonly string Login;
        /// <summary>
        /// Console mode.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// Console output mode.
        /// </summary>
        public readonly string Output;
        public readonly string? Vdomparam;

        [OutputConstructor]
        private GetConsoleResult(
            string baudrate,

            string fortiexplorer,

            string id,

            string login,

            string mode,

            string output,

            string? vdomparam)
        {
            Baudrate = baudrate;
            Fortiexplorer = fortiexplorer;
            Id = id;
            Login = login;
            Mode = mode;
            Output = output;
            Vdomparam = vdomparam;
        }
    }
}
