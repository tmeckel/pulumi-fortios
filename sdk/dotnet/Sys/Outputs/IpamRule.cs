// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Sys.Outputs
{

    [OutputType]
    public sealed class IpamRule
    {
        /// <summary>
        /// Description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Configure serial number or wildcard of Fortigate to match. The structure of `device` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpamRuleDevice> Devices;
        /// <summary>
        /// Enable/disable DHCP server for matching IPAM interfaces. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Dhcp;
        /// <summary>
        /// Configure name or wildcard of interface to match. The structure of `interface` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpamRuleInterface> Interfaces;
        /// <summary>
        /// IPAM rule name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Configure name of IPAM pool to use. The structure of `pool` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpamRulePool> Pools;
        /// <summary>
        /// Configure role of interface to match. Valid values: `any`, `lan`, `wan`, `dmz`, `undefined`.
        /// </summary>
        public readonly string? Role;

        [OutputConstructor]
        private IpamRule(
            string? description,

            ImmutableArray<Outputs.IpamRuleDevice> devices,

            string? dhcp,

            ImmutableArray<Outputs.IpamRuleInterface> interfaces,

            string? name,

            ImmutableArray<Outputs.IpamRulePool> pools,

            string? role)
        {
            Description = description;
            Devices = devices;
            Dhcp = dhcp;
            Interfaces = interfaces;
            Name = name;
            Pools = pools;
            Role = role;
        }
    }
}
