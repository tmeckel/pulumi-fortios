// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Sys.Outputs
{

    [OutputType]
    public sealed class AdminGuiDashboardWidget
    {
        /// <summary>
        /// Fabric device to monitor.
        /// </summary>
        public readonly string? FabricDevice;
        /// <summary>
        /// FortiView filters. The structure of `filters` block is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.AdminGuiDashboardWidgetFilter> Filters;
        /// <summary>
        /// Height.
        /// </summary>
        public readonly int? Height;
        /// <summary>
        /// Widget ID.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// Security Audit Rating industry. Valid values: `default`, `custom`.
        /// </summary>
        public readonly string? Industry;
        /// <summary>
        /// Interface to monitor.
        /// </summary>
        public readonly string? Interface;
        /// <summary>
        /// Security Audit Rating region. Valid values: `default`, `custom`.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Field to aggregate the data by. Valid values: `source`, `destination`, `country`, `intfpair`, `srcintf`, `dstintf`, `policy`, `wificlient`, `shaper`, `endpoint-vulnerability`, `endpoint-device`, `application`, `cloud-app`, `cloud-user`, `web-domain`, `web-category`, `web-search-phrase`, `threat`, `system`, `unauth`, `admin`, `vpn`.
        /// </summary>
        public readonly string? ReportBy;
        /// <summary>
        /// Field to sort the data by.
        /// </summary>
        public readonly string? SortBy;
        /// <summary>
        /// Timeframe period of reported data. Valid values: `realtime`, `5min`, `hour`, `day`, `week`.
        /// </summary>
        public readonly string? Timeframe;
        /// <summary>
        /// Widget title.
        /// </summary>
        public readonly string? Title;
        /// <summary>
        /// Widget type. Valid values: `sysinfo`, `licinfo`, `vminfo`, `forticloud`, `cpu-usage`, `memory-usage`, `disk-usage`, `log-rate`, `sessions`, `session-rate`, `tr-history`, `analytics`, `usb-modem`, `admins`, `security-fabric`, `security-fabric-ranking`, `ha-status`, `vulnerability-summary`, `host-scan-summary`, `fortiview`, `botnet-activity`, `fortimail`.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Visualization to use. Valid values: `table`, `bubble`, `country`, `chord`.
        /// </summary>
        public readonly string? Visualization;
        /// <summary>
        /// Width.
        /// </summary>
        public readonly int? Width;
        /// <summary>
        /// X position.
        /// </summary>
        public readonly int? XPos;
        /// <summary>
        /// Y position.
        /// </summary>
        public readonly int? YPos;

        [OutputConstructor]
        private AdminGuiDashboardWidget(
            string? fabricDevice,

            ImmutableArray<Outputs.AdminGuiDashboardWidgetFilter> filters,

            int? height,

            int? id,

            string? industry,

            string? @interface,

            string? region,

            string? reportBy,

            string? sortBy,

            string? timeframe,

            string? title,

            string? type,

            string? visualization,

            int? width,

            int? xPos,

            int? yPos)
        {
            FabricDevice = fabricDevice;
            Filters = filters;
            Height = height;
            Id = id;
            Industry = industry;
            Interface = @interface;
            Region = region;
            ReportBy = reportBy;
            SortBy = sortBy;
            Timeframe = timeframe;
            Title = title;
            Type = type;
            Visualization = visualization;
            Width = width;
            XPos = xPos;
            YPos = yPos;
        }
    }
}
