// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Wanopt.Outputs
{

    [OutputType]
    public sealed class ProfileMapi
    {
        /// <summary>
        /// Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? ByteCaching;
        /// <summary>
        /// Enable/disable logging. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? LogTraffic;
        /// <summary>
        /// Single port number or port number range for MAPI. Only packets with a destination port number that matches this port number or range are accepted by this profile.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810). Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? SecureTunnel;
        /// <summary>
        /// Enable/disable HTTP WAN Optimization. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols. Valid values: `private`, `shared`, `express-shared`.
        /// </summary>
        public readonly string? TunnelSharing;

        [OutputConstructor]
        private ProfileMapi(
            string? byteCaching,

            string? logTraffic,

            int? port,

            string? secureTunnel,

            string? status,

            string? tunnelSharing)
        {
            ByteCaching = byteCaching;
            LogTraffic = logTraffic;
            Port = port;
            SecureTunnel = secureTunnel;
            Status = status;
            TunnelSharing = tunnelSharing;
        }
    }
}
