// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Fortios.Wanopt.Outputs
{

    [OutputType]
    public sealed class ContentdeliverynetworkruleRuleContentId
    {
        /// <summary>
        /// Search direction from end-str match. Valid values: `forward`, `backward`.
        /// </summary>
        public readonly string? EndDirection;
        /// <summary>
        /// Number of characters in URL to skip after end-str has been matched.
        /// </summary>
        public readonly int? EndSkip;
        /// <summary>
        /// String from which to end search.
        /// </summary>
        public readonly string? EndStr;
        /// <summary>
        /// Name of content ID within the start string and end string.
        /// </summary>
        public readonly string? RangeStr;
        /// <summary>
        /// Search direction from start-str match. Valid values: `forward`, `backward`.
        /// </summary>
        public readonly string? StartDirection;
        /// <summary>
        /// Number of characters in URL to skip after start-str has been matched.
        /// </summary>
        public readonly int? StartSkip;
        /// <summary>
        /// String from which to start search.
        /// </summary>
        public readonly string? StartStr;
        /// <summary>
        /// Option in HTTP header or URL parameter to match. Valid values: `path`, `parameter`, `referrer`, `youtube-map`, `youtube-id`, `youku-id`, `hls-manifest`, `dash-manifest`, `hls-fragment`, `dash-fragment`.
        /// </summary>
        public readonly string? Target;

        [OutputConstructor]
        private ContentdeliverynetworkruleRuleContentId(
            string? endDirection,

            int? endSkip,

            string? endStr,

            string? rangeStr,

            string? startDirection,

            int? startSkip,

            string? startStr,

            string? target)
        {
            EndDirection = endDirection;
            EndSkip = endSkip;
            EndStr = endStr;
            RangeStr = rangeStr;
            StartDirection = startDirection;
            StartSkip = startSkip;
            StartStr = startStr;
            Target = target;
        }
    }
}
