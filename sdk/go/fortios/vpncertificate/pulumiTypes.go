// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpncertificate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SettingCrlVerification struct {
	// CRL verification option when CRL of any certificate in chain is absent (default = ignore). Valid values: `ignore`, `revoke`.
	ChainCrlAbsence *string `pulumi:"chainCrlAbsence"`
	// CRL verification option when CRL is expired (default = ignore). Valid values: `ignore`, `revoke`.
	Expiry *string `pulumi:"expiry"`
	// CRL verification option when leaf CRL is absent (default = ignore). Valid values: `ignore`, `revoke`.
	LeafCrlAbsence *string `pulumi:"leafCrlAbsence"`
}

// SettingCrlVerificationInput is an input type that accepts SettingCrlVerificationArgs and SettingCrlVerificationOutput values.
// You can construct a concrete instance of `SettingCrlVerificationInput` via:
//
//	SettingCrlVerificationArgs{...}
type SettingCrlVerificationInput interface {
	pulumi.Input

	ToSettingCrlVerificationOutput() SettingCrlVerificationOutput
	ToSettingCrlVerificationOutputWithContext(context.Context) SettingCrlVerificationOutput
}

type SettingCrlVerificationArgs struct {
	// CRL verification option when CRL of any certificate in chain is absent (default = ignore). Valid values: `ignore`, `revoke`.
	ChainCrlAbsence pulumi.StringPtrInput `pulumi:"chainCrlAbsence"`
	// CRL verification option when CRL is expired (default = ignore). Valid values: `ignore`, `revoke`.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// CRL verification option when leaf CRL is absent (default = ignore). Valid values: `ignore`, `revoke`.
	LeafCrlAbsence pulumi.StringPtrInput `pulumi:"leafCrlAbsence"`
}

func (SettingCrlVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingCrlVerification)(nil)).Elem()
}

func (i SettingCrlVerificationArgs) ToSettingCrlVerificationOutput() SettingCrlVerificationOutput {
	return i.ToSettingCrlVerificationOutputWithContext(context.Background())
}

func (i SettingCrlVerificationArgs) ToSettingCrlVerificationOutputWithContext(ctx context.Context) SettingCrlVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingCrlVerificationOutput)
}

func (i SettingCrlVerificationArgs) ToSettingCrlVerificationPtrOutput() SettingCrlVerificationPtrOutput {
	return i.ToSettingCrlVerificationPtrOutputWithContext(context.Background())
}

func (i SettingCrlVerificationArgs) ToSettingCrlVerificationPtrOutputWithContext(ctx context.Context) SettingCrlVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingCrlVerificationOutput).ToSettingCrlVerificationPtrOutputWithContext(ctx)
}

// SettingCrlVerificationPtrInput is an input type that accepts SettingCrlVerificationArgs, SettingCrlVerificationPtr and SettingCrlVerificationPtrOutput values.
// You can construct a concrete instance of `SettingCrlVerificationPtrInput` via:
//
//	        SettingCrlVerificationArgs{...}
//
//	or:
//
//	        nil
type SettingCrlVerificationPtrInput interface {
	pulumi.Input

	ToSettingCrlVerificationPtrOutput() SettingCrlVerificationPtrOutput
	ToSettingCrlVerificationPtrOutputWithContext(context.Context) SettingCrlVerificationPtrOutput
}

type settingCrlVerificationPtrType SettingCrlVerificationArgs

func SettingCrlVerificationPtr(v *SettingCrlVerificationArgs) SettingCrlVerificationPtrInput {
	return (*settingCrlVerificationPtrType)(v)
}

func (*settingCrlVerificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingCrlVerification)(nil)).Elem()
}

func (i *settingCrlVerificationPtrType) ToSettingCrlVerificationPtrOutput() SettingCrlVerificationPtrOutput {
	return i.ToSettingCrlVerificationPtrOutputWithContext(context.Background())
}

func (i *settingCrlVerificationPtrType) ToSettingCrlVerificationPtrOutputWithContext(ctx context.Context) SettingCrlVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingCrlVerificationPtrOutput)
}

type SettingCrlVerificationOutput struct{ *pulumi.OutputState }

func (SettingCrlVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingCrlVerification)(nil)).Elem()
}

func (o SettingCrlVerificationOutput) ToSettingCrlVerificationOutput() SettingCrlVerificationOutput {
	return o
}

func (o SettingCrlVerificationOutput) ToSettingCrlVerificationOutputWithContext(ctx context.Context) SettingCrlVerificationOutput {
	return o
}

func (o SettingCrlVerificationOutput) ToSettingCrlVerificationPtrOutput() SettingCrlVerificationPtrOutput {
	return o.ToSettingCrlVerificationPtrOutputWithContext(context.Background())
}

func (o SettingCrlVerificationOutput) ToSettingCrlVerificationPtrOutputWithContext(ctx context.Context) SettingCrlVerificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingCrlVerification) *SettingCrlVerification {
		return &v
	}).(SettingCrlVerificationPtrOutput)
}

// CRL verification option when CRL of any certificate in chain is absent (default = ignore). Valid values: `ignore`, `revoke`.
func (o SettingCrlVerificationOutput) ChainCrlAbsence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingCrlVerification) *string { return v.ChainCrlAbsence }).(pulumi.StringPtrOutput)
}

// CRL verification option when CRL is expired (default = ignore). Valid values: `ignore`, `revoke`.
func (o SettingCrlVerificationOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingCrlVerification) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// CRL verification option when leaf CRL is absent (default = ignore). Valid values: `ignore`, `revoke`.
func (o SettingCrlVerificationOutput) LeafCrlAbsence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingCrlVerification) *string { return v.LeafCrlAbsence }).(pulumi.StringPtrOutput)
}

type SettingCrlVerificationPtrOutput struct{ *pulumi.OutputState }

func (SettingCrlVerificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingCrlVerification)(nil)).Elem()
}

func (o SettingCrlVerificationPtrOutput) ToSettingCrlVerificationPtrOutput() SettingCrlVerificationPtrOutput {
	return o
}

func (o SettingCrlVerificationPtrOutput) ToSettingCrlVerificationPtrOutputWithContext(ctx context.Context) SettingCrlVerificationPtrOutput {
	return o
}

func (o SettingCrlVerificationPtrOutput) Elem() SettingCrlVerificationOutput {
	return o.ApplyT(func(v *SettingCrlVerification) SettingCrlVerification {
		if v != nil {
			return *v
		}
		var ret SettingCrlVerification
		return ret
	}).(SettingCrlVerificationOutput)
}

// CRL verification option when CRL of any certificate in chain is absent (default = ignore). Valid values: `ignore`, `revoke`.
func (o SettingCrlVerificationPtrOutput) ChainCrlAbsence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingCrlVerification) *string {
		if v == nil {
			return nil
		}
		return v.ChainCrlAbsence
	}).(pulumi.StringPtrOutput)
}

// CRL verification option when CRL is expired (default = ignore). Valid values: `ignore`, `revoke`.
func (o SettingCrlVerificationPtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingCrlVerification) *string {
		if v == nil {
			return nil
		}
		return v.Expiry
	}).(pulumi.StringPtrOutput)
}

// CRL verification option when leaf CRL is absent (default = ignore). Valid values: `ignore`, `revoke`.
func (o SettingCrlVerificationPtrOutput) LeafCrlAbsence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingCrlVerification) *string {
		if v == nil {
			return nil
		}
		return v.LeafCrlAbsence
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SettingCrlVerificationInput)(nil)).Elem(), SettingCrlVerificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingCrlVerificationPtrInput)(nil)).Elem(), SettingCrlVerificationArgs{})
	pulumi.RegisterOutputType(SettingCrlVerificationOutput{})
	pulumi.RegisterOutputType(SettingCrlVerificationPtrOutput{})
}
