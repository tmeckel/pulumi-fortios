// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewallconsolidated

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PolicyAppCategory struct {
	// Category IDs.
	Id *int `pulumi:"id"`
}

// PolicyAppCategoryInput is an input type that accepts PolicyAppCategoryArgs and PolicyAppCategoryOutput values.
// You can construct a concrete instance of `PolicyAppCategoryInput` via:
//
//	PolicyAppCategoryArgs{...}
type PolicyAppCategoryInput interface {
	pulumi.Input

	ToPolicyAppCategoryOutput() PolicyAppCategoryOutput
	ToPolicyAppCategoryOutputWithContext(context.Context) PolicyAppCategoryOutput
}

type PolicyAppCategoryArgs struct {
	// Category IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAppCategory)(nil)).Elem()
}

func (i PolicyAppCategoryArgs) ToPolicyAppCategoryOutput() PolicyAppCategoryOutput {
	return i.ToPolicyAppCategoryOutputWithContext(context.Background())
}

func (i PolicyAppCategoryArgs) ToPolicyAppCategoryOutputWithContext(ctx context.Context) PolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAppCategoryOutput)
}

// PolicyAppCategoryArrayInput is an input type that accepts PolicyAppCategoryArray and PolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `PolicyAppCategoryArrayInput` via:
//
//	PolicyAppCategoryArray{ PolicyAppCategoryArgs{...} }
type PolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToPolicyAppCategoryArrayOutput() PolicyAppCategoryArrayOutput
	ToPolicyAppCategoryArrayOutputWithContext(context.Context) PolicyAppCategoryArrayOutput
}

type PolicyAppCategoryArray []PolicyAppCategoryInput

func (PolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAppCategory)(nil)).Elem()
}

func (i PolicyAppCategoryArray) ToPolicyAppCategoryArrayOutput() PolicyAppCategoryArrayOutput {
	return i.ToPolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i PolicyAppCategoryArray) ToPolicyAppCategoryArrayOutputWithContext(ctx context.Context) PolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAppCategoryArrayOutput)
}

type PolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (PolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAppCategory)(nil)).Elem()
}

func (o PolicyAppCategoryOutput) ToPolicyAppCategoryOutput() PolicyAppCategoryOutput {
	return o
}

func (o PolicyAppCategoryOutput) ToPolicyAppCategoryOutputWithContext(ctx context.Context) PolicyAppCategoryOutput {
	return o
}

// Category IDs.
func (o PolicyAppCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyAppCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (PolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAppCategory)(nil)).Elem()
}

func (o PolicyAppCategoryArrayOutput) ToPolicyAppCategoryArrayOutput() PolicyAppCategoryArrayOutput {
	return o
}

func (o PolicyAppCategoryArrayOutput) ToPolicyAppCategoryArrayOutputWithContext(ctx context.Context) PolicyAppCategoryArrayOutput {
	return o
}

func (o PolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) PolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAppCategory {
		return vs[0].([]PolicyAppCategory)[vs[1].(int)]
	}).(PolicyAppCategoryOutput)
}

type PolicyAppGroup struct {
	// Application group names.
	Name *string `pulumi:"name"`
}

// PolicyAppGroupInput is an input type that accepts PolicyAppGroupArgs and PolicyAppGroupOutput values.
// You can construct a concrete instance of `PolicyAppGroupInput` via:
//
//	PolicyAppGroupArgs{...}
type PolicyAppGroupInput interface {
	pulumi.Input

	ToPolicyAppGroupOutput() PolicyAppGroupOutput
	ToPolicyAppGroupOutputWithContext(context.Context) PolicyAppGroupOutput
}

type PolicyAppGroupArgs struct {
	// Application group names.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAppGroup)(nil)).Elem()
}

func (i PolicyAppGroupArgs) ToPolicyAppGroupOutput() PolicyAppGroupOutput {
	return i.ToPolicyAppGroupOutputWithContext(context.Background())
}

func (i PolicyAppGroupArgs) ToPolicyAppGroupOutputWithContext(ctx context.Context) PolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAppGroupOutput)
}

// PolicyAppGroupArrayInput is an input type that accepts PolicyAppGroupArray and PolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `PolicyAppGroupArrayInput` via:
//
//	PolicyAppGroupArray{ PolicyAppGroupArgs{...} }
type PolicyAppGroupArrayInput interface {
	pulumi.Input

	ToPolicyAppGroupArrayOutput() PolicyAppGroupArrayOutput
	ToPolicyAppGroupArrayOutputWithContext(context.Context) PolicyAppGroupArrayOutput
}

type PolicyAppGroupArray []PolicyAppGroupInput

func (PolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAppGroup)(nil)).Elem()
}

func (i PolicyAppGroupArray) ToPolicyAppGroupArrayOutput() PolicyAppGroupArrayOutput {
	return i.ToPolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i PolicyAppGroupArray) ToPolicyAppGroupArrayOutputWithContext(ctx context.Context) PolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAppGroupArrayOutput)
}

type PolicyAppGroupOutput struct{ *pulumi.OutputState }

func (PolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAppGroup)(nil)).Elem()
}

func (o PolicyAppGroupOutput) ToPolicyAppGroupOutput() PolicyAppGroupOutput {
	return o
}

func (o PolicyAppGroupOutput) ToPolicyAppGroupOutputWithContext(ctx context.Context) PolicyAppGroupOutput {
	return o
}

// Application group names.
func (o PolicyAppGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAppGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAppGroup)(nil)).Elem()
}

func (o PolicyAppGroupArrayOutput) ToPolicyAppGroupArrayOutput() PolicyAppGroupArrayOutput {
	return o
}

func (o PolicyAppGroupArrayOutput) ToPolicyAppGroupArrayOutputWithContext(ctx context.Context) PolicyAppGroupArrayOutput {
	return o
}

func (o PolicyAppGroupArrayOutput) Index(i pulumi.IntInput) PolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAppGroup {
		return vs[0].([]PolicyAppGroup)[vs[1].(int)]
	}).(PolicyAppGroupOutput)
}

type PolicyApplication struct {
	// Application IDs.
	Id *int `pulumi:"id"`
}

// PolicyApplicationInput is an input type that accepts PolicyApplicationArgs and PolicyApplicationOutput values.
// You can construct a concrete instance of `PolicyApplicationInput` via:
//
//	PolicyApplicationArgs{...}
type PolicyApplicationInput interface {
	pulumi.Input

	ToPolicyApplicationOutput() PolicyApplicationOutput
	ToPolicyApplicationOutputWithContext(context.Context) PolicyApplicationOutput
}

type PolicyApplicationArgs struct {
	// Application IDs.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyApplication)(nil)).Elem()
}

func (i PolicyApplicationArgs) ToPolicyApplicationOutput() PolicyApplicationOutput {
	return i.ToPolicyApplicationOutputWithContext(context.Background())
}

func (i PolicyApplicationArgs) ToPolicyApplicationOutputWithContext(ctx context.Context) PolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyApplicationOutput)
}

// PolicyApplicationArrayInput is an input type that accepts PolicyApplicationArray and PolicyApplicationArrayOutput values.
// You can construct a concrete instance of `PolicyApplicationArrayInput` via:
//
//	PolicyApplicationArray{ PolicyApplicationArgs{...} }
type PolicyApplicationArrayInput interface {
	pulumi.Input

	ToPolicyApplicationArrayOutput() PolicyApplicationArrayOutput
	ToPolicyApplicationArrayOutputWithContext(context.Context) PolicyApplicationArrayOutput
}

type PolicyApplicationArray []PolicyApplicationInput

func (PolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyApplication)(nil)).Elem()
}

func (i PolicyApplicationArray) ToPolicyApplicationArrayOutput() PolicyApplicationArrayOutput {
	return i.ToPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i PolicyApplicationArray) ToPolicyApplicationArrayOutputWithContext(ctx context.Context) PolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyApplicationArrayOutput)
}

type PolicyApplicationOutput struct{ *pulumi.OutputState }

func (PolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyApplication)(nil)).Elem()
}

func (o PolicyApplicationOutput) ToPolicyApplicationOutput() PolicyApplicationOutput {
	return o
}

func (o PolicyApplicationOutput) ToPolicyApplicationOutputWithContext(ctx context.Context) PolicyApplicationOutput {
	return o
}

// Application IDs.
func (o PolicyApplicationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyApplication) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (PolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyApplication)(nil)).Elem()
}

func (o PolicyApplicationArrayOutput) ToPolicyApplicationArrayOutput() PolicyApplicationArrayOutput {
	return o
}

func (o PolicyApplicationArrayOutput) ToPolicyApplicationArrayOutputWithContext(ctx context.Context) PolicyApplicationArrayOutput {
	return o
}

func (o PolicyApplicationArrayOutput) Index(i pulumi.IntInput) PolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyApplication {
		return vs[0].([]PolicyApplication)[vs[1].(int)]
	}).(PolicyApplicationOutput)
}

type PolicyDstaddr4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyDstaddr4Input is an input type that accepts PolicyDstaddr4Args and PolicyDstaddr4Output values.
// You can construct a concrete instance of `PolicyDstaddr4Input` via:
//
//	PolicyDstaddr4Args{...}
type PolicyDstaddr4Input interface {
	pulumi.Input

	ToPolicyDstaddr4Output() PolicyDstaddr4Output
	ToPolicyDstaddr4OutputWithContext(context.Context) PolicyDstaddr4Output
}

type PolicyDstaddr4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyDstaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr4)(nil)).Elem()
}

func (i PolicyDstaddr4Args) ToPolicyDstaddr4Output() PolicyDstaddr4Output {
	return i.ToPolicyDstaddr4OutputWithContext(context.Background())
}

func (i PolicyDstaddr4Args) ToPolicyDstaddr4OutputWithContext(ctx context.Context) PolicyDstaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddr4Output)
}

// PolicyDstaddr4ArrayInput is an input type that accepts PolicyDstaddr4Array and PolicyDstaddr4ArrayOutput values.
// You can construct a concrete instance of `PolicyDstaddr4ArrayInput` via:
//
//	PolicyDstaddr4Array{ PolicyDstaddr4Args{...} }
type PolicyDstaddr4ArrayInput interface {
	pulumi.Input

	ToPolicyDstaddr4ArrayOutput() PolicyDstaddr4ArrayOutput
	ToPolicyDstaddr4ArrayOutputWithContext(context.Context) PolicyDstaddr4ArrayOutput
}

type PolicyDstaddr4Array []PolicyDstaddr4Input

func (PolicyDstaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr4)(nil)).Elem()
}

func (i PolicyDstaddr4Array) ToPolicyDstaddr4ArrayOutput() PolicyDstaddr4ArrayOutput {
	return i.ToPolicyDstaddr4ArrayOutputWithContext(context.Background())
}

func (i PolicyDstaddr4Array) ToPolicyDstaddr4ArrayOutputWithContext(ctx context.Context) PolicyDstaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddr4ArrayOutput)
}

type PolicyDstaddr4Output struct{ *pulumi.OutputState }

func (PolicyDstaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr4)(nil)).Elem()
}

func (o PolicyDstaddr4Output) ToPolicyDstaddr4Output() PolicyDstaddr4Output {
	return o
}

func (o PolicyDstaddr4Output) ToPolicyDstaddr4OutputWithContext(ctx context.Context) PolicyDstaddr4Output {
	return o
}

// Policy name.
func (o PolicyDstaddr4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDstaddr4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyDstaddr4ArrayOutput struct{ *pulumi.OutputState }

func (PolicyDstaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr4)(nil)).Elem()
}

func (o PolicyDstaddr4ArrayOutput) ToPolicyDstaddr4ArrayOutput() PolicyDstaddr4ArrayOutput {
	return o
}

func (o PolicyDstaddr4ArrayOutput) ToPolicyDstaddr4ArrayOutputWithContext(ctx context.Context) PolicyDstaddr4ArrayOutput {
	return o
}

func (o PolicyDstaddr4ArrayOutput) Index(i pulumi.IntInput) PolicyDstaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDstaddr4 {
		return vs[0].([]PolicyDstaddr4)[vs[1].(int)]
	}).(PolicyDstaddr4Output)
}

type PolicyDstaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyDstaddr6Input is an input type that accepts PolicyDstaddr6Args and PolicyDstaddr6Output values.
// You can construct a concrete instance of `PolicyDstaddr6Input` via:
//
//	PolicyDstaddr6Args{...}
type PolicyDstaddr6Input interface {
	pulumi.Input

	ToPolicyDstaddr6Output() PolicyDstaddr6Output
	ToPolicyDstaddr6OutputWithContext(context.Context) PolicyDstaddr6Output
}

type PolicyDstaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr6)(nil)).Elem()
}

func (i PolicyDstaddr6Args) ToPolicyDstaddr6Output() PolicyDstaddr6Output {
	return i.ToPolicyDstaddr6OutputWithContext(context.Background())
}

func (i PolicyDstaddr6Args) ToPolicyDstaddr6OutputWithContext(ctx context.Context) PolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddr6Output)
}

// PolicyDstaddr6ArrayInput is an input type that accepts PolicyDstaddr6Array and PolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `PolicyDstaddr6ArrayInput` via:
//
//	PolicyDstaddr6Array{ PolicyDstaddr6Args{...} }
type PolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToPolicyDstaddr6ArrayOutput() PolicyDstaddr6ArrayOutput
	ToPolicyDstaddr6ArrayOutputWithContext(context.Context) PolicyDstaddr6ArrayOutput
}

type PolicyDstaddr6Array []PolicyDstaddr6Input

func (PolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr6)(nil)).Elem()
}

func (i PolicyDstaddr6Array) ToPolicyDstaddr6ArrayOutput() PolicyDstaddr6ArrayOutput {
	return i.ToPolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i PolicyDstaddr6Array) ToPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) PolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstaddr6ArrayOutput)
}

type PolicyDstaddr6Output struct{ *pulumi.OutputState }

func (PolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstaddr6)(nil)).Elem()
}

func (o PolicyDstaddr6Output) ToPolicyDstaddr6Output() PolicyDstaddr6Output {
	return o
}

func (o PolicyDstaddr6Output) ToPolicyDstaddr6OutputWithContext(ctx context.Context) PolicyDstaddr6Output {
	return o
}

// Policy name.
func (o PolicyDstaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDstaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (PolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstaddr6)(nil)).Elem()
}

func (o PolicyDstaddr6ArrayOutput) ToPolicyDstaddr6ArrayOutput() PolicyDstaddr6ArrayOutput {
	return o
}

func (o PolicyDstaddr6ArrayOutput) ToPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) PolicyDstaddr6ArrayOutput {
	return o
}

func (o PolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) PolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDstaddr6 {
		return vs[0].([]PolicyDstaddr6)[vs[1].(int)]
	}).(PolicyDstaddr6Output)
}

type PolicyDstintf struct {
	// Address name.
	Name *string `pulumi:"name"`
}

// PolicyDstintfInput is an input type that accepts PolicyDstintfArgs and PolicyDstintfOutput values.
// You can construct a concrete instance of `PolicyDstintfInput` via:
//
//	PolicyDstintfArgs{...}
type PolicyDstintfInput interface {
	pulumi.Input

	ToPolicyDstintfOutput() PolicyDstintfOutput
	ToPolicyDstintfOutputWithContext(context.Context) PolicyDstintfOutput
}

type PolicyDstintfArgs struct {
	// Address name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstintf)(nil)).Elem()
}

func (i PolicyDstintfArgs) ToPolicyDstintfOutput() PolicyDstintfOutput {
	return i.ToPolicyDstintfOutputWithContext(context.Background())
}

func (i PolicyDstintfArgs) ToPolicyDstintfOutputWithContext(ctx context.Context) PolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstintfOutput)
}

// PolicyDstintfArrayInput is an input type that accepts PolicyDstintfArray and PolicyDstintfArrayOutput values.
// You can construct a concrete instance of `PolicyDstintfArrayInput` via:
//
//	PolicyDstintfArray{ PolicyDstintfArgs{...} }
type PolicyDstintfArrayInput interface {
	pulumi.Input

	ToPolicyDstintfArrayOutput() PolicyDstintfArrayOutput
	ToPolicyDstintfArrayOutputWithContext(context.Context) PolicyDstintfArrayOutput
}

type PolicyDstintfArray []PolicyDstintfInput

func (PolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstintf)(nil)).Elem()
}

func (i PolicyDstintfArray) ToPolicyDstintfArrayOutput() PolicyDstintfArrayOutput {
	return i.ToPolicyDstintfArrayOutputWithContext(context.Background())
}

func (i PolicyDstintfArray) ToPolicyDstintfArrayOutputWithContext(ctx context.Context) PolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyDstintfArrayOutput)
}

type PolicyDstintfOutput struct{ *pulumi.OutputState }

func (PolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyDstintf)(nil)).Elem()
}

func (o PolicyDstintfOutput) ToPolicyDstintfOutput() PolicyDstintfOutput {
	return o
}

func (o PolicyDstintfOutput) ToPolicyDstintfOutputWithContext(ctx context.Context) PolicyDstintfOutput {
	return o
}

// Address name.
func (o PolicyDstintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyDstintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (PolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyDstintf)(nil)).Elem()
}

func (o PolicyDstintfArrayOutput) ToPolicyDstintfArrayOutput() PolicyDstintfArrayOutput {
	return o
}

func (o PolicyDstintfArrayOutput) ToPolicyDstintfArrayOutputWithContext(ctx context.Context) PolicyDstintfArrayOutput {
	return o
}

func (o PolicyDstintfArrayOutput) Index(i pulumi.IntInput) PolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyDstintf {
		return vs[0].([]PolicyDstintf)[vs[1].(int)]
	}).(PolicyDstintfOutput)
}

type PolicyFssoGroup struct {
	// Names of FSSO groups.
	Name *string `pulumi:"name"`
}

// PolicyFssoGroupInput is an input type that accepts PolicyFssoGroupArgs and PolicyFssoGroupOutput values.
// You can construct a concrete instance of `PolicyFssoGroupInput` via:
//
//	PolicyFssoGroupArgs{...}
type PolicyFssoGroupInput interface {
	pulumi.Input

	ToPolicyFssoGroupOutput() PolicyFssoGroupOutput
	ToPolicyFssoGroupOutputWithContext(context.Context) PolicyFssoGroupOutput
}

type PolicyFssoGroupArgs struct {
	// Names of FSSO groups.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyFssoGroup)(nil)).Elem()
}

func (i PolicyFssoGroupArgs) ToPolicyFssoGroupOutput() PolicyFssoGroupOutput {
	return i.ToPolicyFssoGroupOutputWithContext(context.Background())
}

func (i PolicyFssoGroupArgs) ToPolicyFssoGroupOutputWithContext(ctx context.Context) PolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFssoGroupOutput)
}

// PolicyFssoGroupArrayInput is an input type that accepts PolicyFssoGroupArray and PolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `PolicyFssoGroupArrayInput` via:
//
//	PolicyFssoGroupArray{ PolicyFssoGroupArgs{...} }
type PolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToPolicyFssoGroupArrayOutput() PolicyFssoGroupArrayOutput
	ToPolicyFssoGroupArrayOutputWithContext(context.Context) PolicyFssoGroupArrayOutput
}

type PolicyFssoGroupArray []PolicyFssoGroupInput

func (PolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyFssoGroup)(nil)).Elem()
}

func (i PolicyFssoGroupArray) ToPolicyFssoGroupArrayOutput() PolicyFssoGroupArrayOutput {
	return i.ToPolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i PolicyFssoGroupArray) ToPolicyFssoGroupArrayOutputWithContext(ctx context.Context) PolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFssoGroupArrayOutput)
}

type PolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (PolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyFssoGroup)(nil)).Elem()
}

func (o PolicyFssoGroupOutput) ToPolicyFssoGroupOutput() PolicyFssoGroupOutput {
	return o
}

func (o PolicyFssoGroupOutput) ToPolicyFssoGroupOutputWithContext(ctx context.Context) PolicyFssoGroupOutput {
	return o
}

// Names of FSSO groups.
func (o PolicyFssoGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyFssoGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyFssoGroup)(nil)).Elem()
}

func (o PolicyFssoGroupArrayOutput) ToPolicyFssoGroupArrayOutput() PolicyFssoGroupArrayOutput {
	return o
}

func (o PolicyFssoGroupArrayOutput) ToPolicyFssoGroupArrayOutputWithContext(ctx context.Context) PolicyFssoGroupArrayOutput {
	return o
}

func (o PolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) PolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyFssoGroup {
		return vs[0].([]PolicyFssoGroup)[vs[1].(int)]
	}).(PolicyFssoGroupOutput)
}

type PolicyGroup struct {
	// Group name.
	Name *string `pulumi:"name"`
}

// PolicyGroupInput is an input type that accepts PolicyGroupArgs and PolicyGroupOutput values.
// You can construct a concrete instance of `PolicyGroupInput` via:
//
//	PolicyGroupArgs{...}
type PolicyGroupInput interface {
	pulumi.Input

	ToPolicyGroupOutput() PolicyGroupOutput
	ToPolicyGroupOutputWithContext(context.Context) PolicyGroupOutput
}

type PolicyGroupArgs struct {
	// Group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroup)(nil)).Elem()
}

func (i PolicyGroupArgs) ToPolicyGroupOutput() PolicyGroupOutput {
	return i.ToPolicyGroupOutputWithContext(context.Background())
}

func (i PolicyGroupArgs) ToPolicyGroupOutputWithContext(ctx context.Context) PolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupOutput)
}

// PolicyGroupArrayInput is an input type that accepts PolicyGroupArray and PolicyGroupArrayOutput values.
// You can construct a concrete instance of `PolicyGroupArrayInput` via:
//
//	PolicyGroupArray{ PolicyGroupArgs{...} }
type PolicyGroupArrayInput interface {
	pulumi.Input

	ToPolicyGroupArrayOutput() PolicyGroupArrayOutput
	ToPolicyGroupArrayOutputWithContext(context.Context) PolicyGroupArrayOutput
}

type PolicyGroupArray []PolicyGroupInput

func (PolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroup)(nil)).Elem()
}

func (i PolicyGroupArray) ToPolicyGroupArrayOutput() PolicyGroupArrayOutput {
	return i.ToPolicyGroupArrayOutputWithContext(context.Background())
}

func (i PolicyGroupArray) ToPolicyGroupArrayOutputWithContext(ctx context.Context) PolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupArrayOutput)
}

type PolicyGroupOutput struct{ *pulumi.OutputState }

func (PolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroup)(nil)).Elem()
}

func (o PolicyGroupOutput) ToPolicyGroupOutput() PolicyGroupOutput {
	return o
}

func (o PolicyGroupOutput) ToPolicyGroupOutputWithContext(ctx context.Context) PolicyGroupOutput {
	return o
}

// Group name.
func (o PolicyGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroup)(nil)).Elem()
}

func (o PolicyGroupArrayOutput) ToPolicyGroupArrayOutput() PolicyGroupArrayOutput {
	return o
}

func (o PolicyGroupArrayOutput) ToPolicyGroupArrayOutputWithContext(ctx context.Context) PolicyGroupArrayOutput {
	return o
}

func (o PolicyGroupArrayOutput) Index(i pulumi.IntInput) PolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroup {
		return vs[0].([]PolicyGroup)[vs[1].(int)]
	}).(PolicyGroupOutput)
}

type PolicyInternetServiceCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceCustomInput is an input type that accepts PolicyInternetServiceCustomArgs and PolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomInput` via:
//
//	PolicyInternetServiceCustomArgs{...}
type PolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput
	ToPolicyInternetServiceCustomOutputWithContext(context.Context) PolicyInternetServiceCustomOutput
}

type PolicyInternetServiceCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustom)(nil)).Elem()
}

func (i PolicyInternetServiceCustomArgs) ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput {
	return i.ToPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomArgs) ToPolicyInternetServiceCustomOutputWithContext(ctx context.Context) PolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomOutput)
}

// PolicyInternetServiceCustomArrayInput is an input type that accepts PolicyInternetServiceCustomArray and PolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomArrayInput` via:
//
//	PolicyInternetServiceCustomArray{ PolicyInternetServiceCustomArgs{...} }
type PolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput
	ToPolicyInternetServiceCustomArrayOutputWithContext(context.Context) PolicyInternetServiceCustomArrayOutput
}

type PolicyInternetServiceCustomArray []PolicyInternetServiceCustomInput

func (PolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustom)(nil)).Elem()
}

func (i PolicyInternetServiceCustomArray) ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput {
	return i.ToPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomArray) ToPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomArrayOutput)
}

type PolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustom)(nil)).Elem()
}

func (o PolicyInternetServiceCustomOutput) ToPolicyInternetServiceCustomOutput() PolicyInternetServiceCustomOutput {
	return o
}

func (o PolicyInternetServiceCustomOutput) ToPolicyInternetServiceCustomOutputWithContext(ctx context.Context) PolicyInternetServiceCustomOutput {
	return o
}

// Custom Internet Service name.
func (o PolicyInternetServiceCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustom)(nil)).Elem()
}

func (o PolicyInternetServiceCustomArrayOutput) ToPolicyInternetServiceCustomArrayOutput() PolicyInternetServiceCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomArrayOutput) ToPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceCustom {
		return vs[0].([]PolicyInternetServiceCustom)[vs[1].(int)]
	}).(PolicyInternetServiceCustomOutput)
}

type PolicyInternetServiceCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceCustomGroupInput is an input type that accepts PolicyInternetServiceCustomGroupArgs and PolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomGroupInput` via:
//
//	PolicyInternetServiceCustomGroupArgs{...}
type PolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomGroupOutput() PolicyInternetServiceCustomGroupOutput
	ToPolicyInternetServiceCustomGroupOutputWithContext(context.Context) PolicyInternetServiceCustomGroupOutput
}

type PolicyInternetServiceCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i PolicyInternetServiceCustomGroupArgs) ToPolicyInternetServiceCustomGroupOutput() PolicyInternetServiceCustomGroupOutput {
	return i.ToPolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomGroupArgs) ToPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) PolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomGroupOutput)
}

// PolicyInternetServiceCustomGroupArrayInput is an input type that accepts PolicyInternetServiceCustomGroupArray and PolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceCustomGroupArrayInput` via:
//
//	PolicyInternetServiceCustomGroupArray{ PolicyInternetServiceCustomGroupArgs{...} }
type PolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceCustomGroupArrayOutput() PolicyInternetServiceCustomGroupArrayOutput
	ToPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) PolicyInternetServiceCustomGroupArrayOutput
}

type PolicyInternetServiceCustomGroupArray []PolicyInternetServiceCustomGroupInput

func (PolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i PolicyInternetServiceCustomGroupArray) ToPolicyInternetServiceCustomGroupArrayOutput() PolicyInternetServiceCustomGroupArrayOutput {
	return i.ToPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceCustomGroupArray) ToPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceCustomGroupArrayOutput)
}

type PolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o PolicyInternetServiceCustomGroupOutput) ToPolicyInternetServiceCustomGroupOutput() PolicyInternetServiceCustomGroupOutput {
	return o
}

func (o PolicyInternetServiceCustomGroupOutput) ToPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) PolicyInternetServiceCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o PolicyInternetServiceCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o PolicyInternetServiceCustomGroupArrayOutput) ToPolicyInternetServiceCustomGroupArrayOutput() PolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomGroupArrayOutput) ToPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceCustomGroup {
		return vs[0].([]PolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(PolicyInternetServiceCustomGroupOutput)
}

type PolicyInternetServiceGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceGroupInput is an input type that accepts PolicyInternetServiceGroupArgs and PolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `PolicyInternetServiceGroupInput` via:
//
//	PolicyInternetServiceGroupArgs{...}
type PolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToPolicyInternetServiceGroupOutput() PolicyInternetServiceGroupOutput
	ToPolicyInternetServiceGroupOutputWithContext(context.Context) PolicyInternetServiceGroupOutput
}

type PolicyInternetServiceGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceGroup)(nil)).Elem()
}

func (i PolicyInternetServiceGroupArgs) ToPolicyInternetServiceGroupOutput() PolicyInternetServiceGroupOutput {
	return i.ToPolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i PolicyInternetServiceGroupArgs) ToPolicyInternetServiceGroupOutputWithContext(ctx context.Context) PolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceGroupOutput)
}

// PolicyInternetServiceGroupArrayInput is an input type that accepts PolicyInternetServiceGroupArray and PolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceGroupArrayInput` via:
//
//	PolicyInternetServiceGroupArray{ PolicyInternetServiceGroupArgs{...} }
type PolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceGroupArrayOutput() PolicyInternetServiceGroupArrayOutput
	ToPolicyInternetServiceGroupArrayOutputWithContext(context.Context) PolicyInternetServiceGroupArrayOutput
}

type PolicyInternetServiceGroupArray []PolicyInternetServiceGroupInput

func (PolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceGroup)(nil)).Elem()
}

func (i PolicyInternetServiceGroupArray) ToPolicyInternetServiceGroupArrayOutput() PolicyInternetServiceGroupArrayOutput {
	return i.ToPolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceGroupArray) ToPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceGroupArrayOutput)
}

type PolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceGroup)(nil)).Elem()
}

func (o PolicyInternetServiceGroupOutput) ToPolicyInternetServiceGroupOutput() PolicyInternetServiceGroupOutput {
	return o
}

func (o PolicyInternetServiceGroupOutput) ToPolicyInternetServiceGroupOutputWithContext(ctx context.Context) PolicyInternetServiceGroupOutput {
	return o
}

// Internet Service group name.
func (o PolicyInternetServiceGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceGroup)(nil)).Elem()
}

func (o PolicyInternetServiceGroupArrayOutput) ToPolicyInternetServiceGroupArrayOutput() PolicyInternetServiceGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceGroupArrayOutput) ToPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceGroup {
		return vs[0].([]PolicyInternetServiceGroup)[vs[1].(int)]
	}).(PolicyInternetServiceGroupOutput)
}

type PolicyInternetServiceId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// PolicyInternetServiceIdInput is an input type that accepts PolicyInternetServiceIdArgs and PolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `PolicyInternetServiceIdInput` via:
//
//	PolicyInternetServiceIdArgs{...}
type PolicyInternetServiceIdInput interface {
	pulumi.Input

	ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput
	ToPolicyInternetServiceIdOutputWithContext(context.Context) PolicyInternetServiceIdOutput
}

type PolicyInternetServiceIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceId)(nil)).Elem()
}

func (i PolicyInternetServiceIdArgs) ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput {
	return i.ToPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i PolicyInternetServiceIdArgs) ToPolicyInternetServiceIdOutputWithContext(ctx context.Context) PolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceIdOutput)
}

// PolicyInternetServiceIdArrayInput is an input type that accepts PolicyInternetServiceIdArray and PolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceIdArrayInput` via:
//
//	PolicyInternetServiceIdArray{ PolicyInternetServiceIdArgs{...} }
type PolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput
	ToPolicyInternetServiceIdArrayOutputWithContext(context.Context) PolicyInternetServiceIdArrayOutput
}

type PolicyInternetServiceIdArray []PolicyInternetServiceIdInput

func (PolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceId)(nil)).Elem()
}

func (i PolicyInternetServiceIdArray) ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput {
	return i.ToPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceIdArray) ToPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceIdArrayOutput)
}

type PolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceId)(nil)).Elem()
}

func (o PolicyInternetServiceIdOutput) ToPolicyInternetServiceIdOutput() PolicyInternetServiceIdOutput {
	return o
}

func (o PolicyInternetServiceIdOutput) ToPolicyInternetServiceIdOutputWithContext(ctx context.Context) PolicyInternetServiceIdOutput {
	return o
}

// Internet Service ID.
func (o PolicyInternetServiceIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceId)(nil)).Elem()
}

func (o PolicyInternetServiceIdArrayOutput) ToPolicyInternetServiceIdArrayOutput() PolicyInternetServiceIdArrayOutput {
	return o
}

func (o PolicyInternetServiceIdArrayOutput) ToPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceIdArrayOutput {
	return o
}

func (o PolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceId {
		return vs[0].([]PolicyInternetServiceId)[vs[1].(int)]
	}).(PolicyInternetServiceIdOutput)
}

type PolicyInternetServiceName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceNameInput is an input type that accepts PolicyInternetServiceNameArgs and PolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `PolicyInternetServiceNameInput` via:
//
//	PolicyInternetServiceNameArgs{...}
type PolicyInternetServiceNameInput interface {
	pulumi.Input

	ToPolicyInternetServiceNameOutput() PolicyInternetServiceNameOutput
	ToPolicyInternetServiceNameOutputWithContext(context.Context) PolicyInternetServiceNameOutput
}

type PolicyInternetServiceNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceName)(nil)).Elem()
}

func (i PolicyInternetServiceNameArgs) ToPolicyInternetServiceNameOutput() PolicyInternetServiceNameOutput {
	return i.ToPolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i PolicyInternetServiceNameArgs) ToPolicyInternetServiceNameOutputWithContext(ctx context.Context) PolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceNameOutput)
}

// PolicyInternetServiceNameArrayInput is an input type that accepts PolicyInternetServiceNameArray and PolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceNameArrayInput` via:
//
//	PolicyInternetServiceNameArray{ PolicyInternetServiceNameArgs{...} }
type PolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceNameArrayOutput() PolicyInternetServiceNameArrayOutput
	ToPolicyInternetServiceNameArrayOutputWithContext(context.Context) PolicyInternetServiceNameArrayOutput
}

type PolicyInternetServiceNameArray []PolicyInternetServiceNameInput

func (PolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceName)(nil)).Elem()
}

func (i PolicyInternetServiceNameArray) ToPolicyInternetServiceNameArrayOutput() PolicyInternetServiceNameArrayOutput {
	return i.ToPolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceNameArray) ToPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) PolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceNameArrayOutput)
}

type PolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceName)(nil)).Elem()
}

func (o PolicyInternetServiceNameOutput) ToPolicyInternetServiceNameOutput() PolicyInternetServiceNameOutput {
	return o
}

func (o PolicyInternetServiceNameOutput) ToPolicyInternetServiceNameOutputWithContext(ctx context.Context) PolicyInternetServiceNameOutput {
	return o
}

// Internet Service name.
func (o PolicyInternetServiceNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceName)(nil)).Elem()
}

func (o PolicyInternetServiceNameArrayOutput) ToPolicyInternetServiceNameArrayOutput() PolicyInternetServiceNameArrayOutput {
	return o
}

func (o PolicyInternetServiceNameArrayOutput) ToPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) PolicyInternetServiceNameArrayOutput {
	return o
}

func (o PolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceName {
		return vs[0].([]PolicyInternetServiceName)[vs[1].(int)]
	}).(PolicyInternetServiceNameOutput)
}

type PolicyInternetServiceSrcCustom struct {
	// Custom Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceSrcCustomInput is an input type that accepts PolicyInternetServiceSrcCustomArgs and PolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcCustomInput` via:
//
//	PolicyInternetServiceSrcCustomArgs{...}
type PolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcCustomOutput() PolicyInternetServiceSrcCustomOutput
	ToPolicyInternetServiceSrcCustomOutputWithContext(context.Context) PolicyInternetServiceSrcCustomOutput
}

type PolicyInternetServiceSrcCustomArgs struct {
	// Custom Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i PolicyInternetServiceSrcCustomArgs) ToPolicyInternetServiceSrcCustomOutput() PolicyInternetServiceSrcCustomOutput {
	return i.ToPolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcCustomArgs) ToPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcCustomOutput)
}

// PolicyInternetServiceSrcCustomArrayInput is an input type that accepts PolicyInternetServiceSrcCustomArray and PolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcCustomArrayInput` via:
//
//	PolicyInternetServiceSrcCustomArray{ PolicyInternetServiceSrcCustomArgs{...} }
type PolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcCustomArrayOutput() PolicyInternetServiceSrcCustomArrayOutput
	ToPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) PolicyInternetServiceSrcCustomArrayOutput
}

type PolicyInternetServiceSrcCustomArray []PolicyInternetServiceSrcCustomInput

func (PolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i PolicyInternetServiceSrcCustomArray) ToPolicyInternetServiceSrcCustomArrayOutput() PolicyInternetServiceSrcCustomArrayOutput {
	return i.ToPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcCustomArray) ToPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcCustomArrayOutput)
}

type PolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o PolicyInternetServiceSrcCustomOutput) ToPolicyInternetServiceSrcCustomOutput() PolicyInternetServiceSrcCustomOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomOutput) ToPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomOutput {
	return o
}

// Custom Internet Service name.
func (o PolicyInternetServiceSrcCustomOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcCustom) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o PolicyInternetServiceSrcCustomArrayOutput) ToPolicyInternetServiceSrcCustomArrayOutput() PolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomArrayOutput) ToPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcCustom {
		return vs[0].([]PolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(PolicyInternetServiceSrcCustomOutput)
}

type PolicyInternetServiceSrcCustomGroup struct {
	// Custom Internet Service group name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceSrcCustomGroupInput is an input type that accepts PolicyInternetServiceSrcCustomGroupArgs and PolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcCustomGroupInput` via:
//
//	PolicyInternetServiceSrcCustomGroupArgs{...}
type PolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcCustomGroupOutput() PolicyInternetServiceSrcCustomGroupOutput
	ToPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) PolicyInternetServiceSrcCustomGroupOutput
}

type PolicyInternetServiceSrcCustomGroupArgs struct {
	// Custom Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i PolicyInternetServiceSrcCustomGroupArgs) ToPolicyInternetServiceSrcCustomGroupOutput() PolicyInternetServiceSrcCustomGroupOutput {
	return i.ToPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcCustomGroupArgs) ToPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcCustomGroupOutput)
}

// PolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts PolicyInternetServiceSrcCustomGroupArray and PolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	PolicyInternetServiceSrcCustomGroupArray{ PolicyInternetServiceSrcCustomGroupArgs{...} }
type PolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcCustomGroupArrayOutput() PolicyInternetServiceSrcCustomGroupArrayOutput
	ToPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) PolicyInternetServiceSrcCustomGroupArrayOutput
}

type PolicyInternetServiceSrcCustomGroupArray []PolicyInternetServiceSrcCustomGroupInput

func (PolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i PolicyInternetServiceSrcCustomGroupArray) ToPolicyInternetServiceSrcCustomGroupArrayOutput() PolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcCustomGroupArray) ToPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcCustomGroupArrayOutput)
}

type PolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o PolicyInternetServiceSrcCustomGroupOutput) ToPolicyInternetServiceSrcCustomGroupOutput() PolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomGroupOutput) ToPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Custom Internet Service group name.
func (o PolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcCustomGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o PolicyInternetServiceSrcCustomGroupArrayOutput) ToPolicyInternetServiceSrcCustomGroupArrayOutput() PolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomGroupArrayOutput) ToPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcCustomGroup {
		return vs[0].([]PolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(PolicyInternetServiceSrcCustomGroupOutput)
}

type PolicyInternetServiceSrcGroup struct {
	// Internet Service group name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceSrcGroupInput is an input type that accepts PolicyInternetServiceSrcGroupArgs and PolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcGroupInput` via:
//
//	PolicyInternetServiceSrcGroupArgs{...}
type PolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcGroupOutput() PolicyInternetServiceSrcGroupOutput
	ToPolicyInternetServiceSrcGroupOutputWithContext(context.Context) PolicyInternetServiceSrcGroupOutput
}

type PolicyInternetServiceSrcGroupArgs struct {
	// Internet Service group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i PolicyInternetServiceSrcGroupArgs) ToPolicyInternetServiceSrcGroupOutput() PolicyInternetServiceSrcGroupOutput {
	return i.ToPolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcGroupArgs) ToPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) PolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcGroupOutput)
}

// PolicyInternetServiceSrcGroupArrayInput is an input type that accepts PolicyInternetServiceSrcGroupArray and PolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcGroupArrayInput` via:
//
//	PolicyInternetServiceSrcGroupArray{ PolicyInternetServiceSrcGroupArgs{...} }
type PolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcGroupArrayOutput() PolicyInternetServiceSrcGroupArrayOutput
	ToPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) PolicyInternetServiceSrcGroupArrayOutput
}

type PolicyInternetServiceSrcGroupArray []PolicyInternetServiceSrcGroupInput

func (PolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i PolicyInternetServiceSrcGroupArray) ToPolicyInternetServiceSrcGroupArrayOutput() PolicyInternetServiceSrcGroupArrayOutput {
	return i.ToPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcGroupArray) ToPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcGroupArrayOutput)
}

type PolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o PolicyInternetServiceSrcGroupOutput) ToPolicyInternetServiceSrcGroupOutput() PolicyInternetServiceSrcGroupOutput {
	return o
}

func (o PolicyInternetServiceSrcGroupOutput) ToPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) PolicyInternetServiceSrcGroupOutput {
	return o
}

// Internet Service group name.
func (o PolicyInternetServiceSrcGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o PolicyInternetServiceSrcGroupArrayOutput) ToPolicyInternetServiceSrcGroupArrayOutput() PolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcGroupArrayOutput) ToPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcGroup {
		return vs[0].([]PolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(PolicyInternetServiceSrcGroupOutput)
}

type PolicyInternetServiceSrcId struct {
	// Internet Service ID.
	Id *int `pulumi:"id"`
}

// PolicyInternetServiceSrcIdInput is an input type that accepts PolicyInternetServiceSrcIdArgs and PolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcIdInput` via:
//
//	PolicyInternetServiceSrcIdArgs{...}
type PolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcIdOutput() PolicyInternetServiceSrcIdOutput
	ToPolicyInternetServiceSrcIdOutputWithContext(context.Context) PolicyInternetServiceSrcIdOutput
}

type PolicyInternetServiceSrcIdArgs struct {
	// Internet Service ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcId)(nil)).Elem()
}

func (i PolicyInternetServiceSrcIdArgs) ToPolicyInternetServiceSrcIdOutput() PolicyInternetServiceSrcIdOutput {
	return i.ToPolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcIdArgs) ToPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) PolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcIdOutput)
}

// PolicyInternetServiceSrcIdArrayInput is an input type that accepts PolicyInternetServiceSrcIdArray and PolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcIdArrayInput` via:
//
//	PolicyInternetServiceSrcIdArray{ PolicyInternetServiceSrcIdArgs{...} }
type PolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcIdArrayOutput() PolicyInternetServiceSrcIdArrayOutput
	ToPolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) PolicyInternetServiceSrcIdArrayOutput
}

type PolicyInternetServiceSrcIdArray []PolicyInternetServiceSrcIdInput

func (PolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcId)(nil)).Elem()
}

func (i PolicyInternetServiceSrcIdArray) ToPolicyInternetServiceSrcIdArrayOutput() PolicyInternetServiceSrcIdArrayOutput {
	return i.ToPolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcIdArray) ToPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcIdArrayOutput)
}

type PolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcId)(nil)).Elem()
}

func (o PolicyInternetServiceSrcIdOutput) ToPolicyInternetServiceSrcIdOutput() PolicyInternetServiceSrcIdOutput {
	return o
}

func (o PolicyInternetServiceSrcIdOutput) ToPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) PolicyInternetServiceSrcIdOutput {
	return o
}

// Internet Service ID.
func (o PolicyInternetServiceSrcIdOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcId) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcId)(nil)).Elem()
}

func (o PolicyInternetServiceSrcIdArrayOutput) ToPolicyInternetServiceSrcIdArrayOutput() PolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcIdArrayOutput) ToPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcId {
		return vs[0].([]PolicyInternetServiceSrcId)[vs[1].(int)]
	}).(PolicyInternetServiceSrcIdOutput)
}

type PolicyInternetServiceSrcName struct {
	// Internet Service name.
	Name *string `pulumi:"name"`
}

// PolicyInternetServiceSrcNameInput is an input type that accepts PolicyInternetServiceSrcNameArgs and PolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcNameInput` via:
//
//	PolicyInternetServiceSrcNameArgs{...}
type PolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcNameOutput() PolicyInternetServiceSrcNameOutput
	ToPolicyInternetServiceSrcNameOutputWithContext(context.Context) PolicyInternetServiceSrcNameOutput
}

type PolicyInternetServiceSrcNameArgs struct {
	// Internet Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcName)(nil)).Elem()
}

func (i PolicyInternetServiceSrcNameArgs) ToPolicyInternetServiceSrcNameOutput() PolicyInternetServiceSrcNameOutput {
	return i.ToPolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcNameArgs) ToPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) PolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcNameOutput)
}

// PolicyInternetServiceSrcNameArrayInput is an input type that accepts PolicyInternetServiceSrcNameArray and PolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `PolicyInternetServiceSrcNameArrayInput` via:
//
//	PolicyInternetServiceSrcNameArray{ PolicyInternetServiceSrcNameArgs{...} }
type PolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToPolicyInternetServiceSrcNameArrayOutput() PolicyInternetServiceSrcNameArrayOutput
	ToPolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) PolicyInternetServiceSrcNameArrayOutput
}

type PolicyInternetServiceSrcNameArray []PolicyInternetServiceSrcNameInput

func (PolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcName)(nil)).Elem()
}

func (i PolicyInternetServiceSrcNameArray) ToPolicyInternetServiceSrcNameArrayOutput() PolicyInternetServiceSrcNameArrayOutput {
	return i.ToPolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i PolicyInternetServiceSrcNameArray) ToPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInternetServiceSrcNameArrayOutput)
}

type PolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInternetServiceSrcName)(nil)).Elem()
}

func (o PolicyInternetServiceSrcNameOutput) ToPolicyInternetServiceSrcNameOutput() PolicyInternetServiceSrcNameOutput {
	return o
}

func (o PolicyInternetServiceSrcNameOutput) ToPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) PolicyInternetServiceSrcNameOutput {
	return o
}

// Internet Service name.
func (o PolicyInternetServiceSrcNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyInternetServiceSrcName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (PolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyInternetServiceSrcName)(nil)).Elem()
}

func (o PolicyInternetServiceSrcNameArrayOutput) ToPolicyInternetServiceSrcNameArrayOutput() PolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcNameArrayOutput) ToPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) PolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o PolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) PolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyInternetServiceSrcName {
		return vs[0].([]PolicyInternetServiceSrcName)[vs[1].(int)]
	}).(PolicyInternetServiceSrcNameOutput)
}

type PolicyPoolname4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyPoolname4Input is an input type that accepts PolicyPoolname4Args and PolicyPoolname4Output values.
// You can construct a concrete instance of `PolicyPoolname4Input` via:
//
//	PolicyPoolname4Args{...}
type PolicyPoolname4Input interface {
	pulumi.Input

	ToPolicyPoolname4Output() PolicyPoolname4Output
	ToPolicyPoolname4OutputWithContext(context.Context) PolicyPoolname4Output
}

type PolicyPoolname4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyPoolname4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPoolname4)(nil)).Elem()
}

func (i PolicyPoolname4Args) ToPolicyPoolname4Output() PolicyPoolname4Output {
	return i.ToPolicyPoolname4OutputWithContext(context.Background())
}

func (i PolicyPoolname4Args) ToPolicyPoolname4OutputWithContext(ctx context.Context) PolicyPoolname4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPoolname4Output)
}

// PolicyPoolname4ArrayInput is an input type that accepts PolicyPoolname4Array and PolicyPoolname4ArrayOutput values.
// You can construct a concrete instance of `PolicyPoolname4ArrayInput` via:
//
//	PolicyPoolname4Array{ PolicyPoolname4Args{...} }
type PolicyPoolname4ArrayInput interface {
	pulumi.Input

	ToPolicyPoolname4ArrayOutput() PolicyPoolname4ArrayOutput
	ToPolicyPoolname4ArrayOutputWithContext(context.Context) PolicyPoolname4ArrayOutput
}

type PolicyPoolname4Array []PolicyPoolname4Input

func (PolicyPoolname4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPoolname4)(nil)).Elem()
}

func (i PolicyPoolname4Array) ToPolicyPoolname4ArrayOutput() PolicyPoolname4ArrayOutput {
	return i.ToPolicyPoolname4ArrayOutputWithContext(context.Background())
}

func (i PolicyPoolname4Array) ToPolicyPoolname4ArrayOutputWithContext(ctx context.Context) PolicyPoolname4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPoolname4ArrayOutput)
}

type PolicyPoolname4Output struct{ *pulumi.OutputState }

func (PolicyPoolname4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPoolname4)(nil)).Elem()
}

func (o PolicyPoolname4Output) ToPolicyPoolname4Output() PolicyPoolname4Output {
	return o
}

func (o PolicyPoolname4Output) ToPolicyPoolname4OutputWithContext(ctx context.Context) PolicyPoolname4Output {
	return o
}

// Policy name.
func (o PolicyPoolname4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPoolname4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyPoolname4ArrayOutput struct{ *pulumi.OutputState }

func (PolicyPoolname4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPoolname4)(nil)).Elem()
}

func (o PolicyPoolname4ArrayOutput) ToPolicyPoolname4ArrayOutput() PolicyPoolname4ArrayOutput {
	return o
}

func (o PolicyPoolname4ArrayOutput) ToPolicyPoolname4ArrayOutputWithContext(ctx context.Context) PolicyPoolname4ArrayOutput {
	return o
}

func (o PolicyPoolname4ArrayOutput) Index(i pulumi.IntInput) PolicyPoolname4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPoolname4 {
		return vs[0].([]PolicyPoolname4)[vs[1].(int)]
	}).(PolicyPoolname4Output)
}

type PolicyPoolname6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicyPoolname6Input is an input type that accepts PolicyPoolname6Args and PolicyPoolname6Output values.
// You can construct a concrete instance of `PolicyPoolname6Input` via:
//
//	PolicyPoolname6Args{...}
type PolicyPoolname6Input interface {
	pulumi.Input

	ToPolicyPoolname6Output() PolicyPoolname6Output
	ToPolicyPoolname6OutputWithContext(context.Context) PolicyPoolname6Output
}

type PolicyPoolname6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyPoolname6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPoolname6)(nil)).Elem()
}

func (i PolicyPoolname6Args) ToPolicyPoolname6Output() PolicyPoolname6Output {
	return i.ToPolicyPoolname6OutputWithContext(context.Background())
}

func (i PolicyPoolname6Args) ToPolicyPoolname6OutputWithContext(ctx context.Context) PolicyPoolname6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPoolname6Output)
}

// PolicyPoolname6ArrayInput is an input type that accepts PolicyPoolname6Array and PolicyPoolname6ArrayOutput values.
// You can construct a concrete instance of `PolicyPoolname6ArrayInput` via:
//
//	PolicyPoolname6Array{ PolicyPoolname6Args{...} }
type PolicyPoolname6ArrayInput interface {
	pulumi.Input

	ToPolicyPoolname6ArrayOutput() PolicyPoolname6ArrayOutput
	ToPolicyPoolname6ArrayOutputWithContext(context.Context) PolicyPoolname6ArrayOutput
}

type PolicyPoolname6Array []PolicyPoolname6Input

func (PolicyPoolname6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPoolname6)(nil)).Elem()
}

func (i PolicyPoolname6Array) ToPolicyPoolname6ArrayOutput() PolicyPoolname6ArrayOutput {
	return i.ToPolicyPoolname6ArrayOutputWithContext(context.Background())
}

func (i PolicyPoolname6Array) ToPolicyPoolname6ArrayOutputWithContext(ctx context.Context) PolicyPoolname6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPoolname6ArrayOutput)
}

type PolicyPoolname6Output struct{ *pulumi.OutputState }

func (PolicyPoolname6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPoolname6)(nil)).Elem()
}

func (o PolicyPoolname6Output) ToPolicyPoolname6Output() PolicyPoolname6Output {
	return o
}

func (o PolicyPoolname6Output) ToPolicyPoolname6OutputWithContext(ctx context.Context) PolicyPoolname6Output {
	return o
}

// Policy name.
func (o PolicyPoolname6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPoolname6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyPoolname6ArrayOutput struct{ *pulumi.OutputState }

func (PolicyPoolname6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyPoolname6)(nil)).Elem()
}

func (o PolicyPoolname6ArrayOutput) ToPolicyPoolname6ArrayOutput() PolicyPoolname6ArrayOutput {
	return o
}

func (o PolicyPoolname6ArrayOutput) ToPolicyPoolname6ArrayOutputWithContext(ctx context.Context) PolicyPoolname6ArrayOutput {
	return o
}

func (o PolicyPoolname6ArrayOutput) Index(i pulumi.IntInput) PolicyPoolname6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyPoolname6 {
		return vs[0].([]PolicyPoolname6)[vs[1].(int)]
	}).(PolicyPoolname6Output)
}

type PolicyService struct {
	// Service name.
	Name *string `pulumi:"name"`
}

// PolicyServiceInput is an input type that accepts PolicyServiceArgs and PolicyServiceOutput values.
// You can construct a concrete instance of `PolicyServiceInput` via:
//
//	PolicyServiceArgs{...}
type PolicyServiceInput interface {
	pulumi.Input

	ToPolicyServiceOutput() PolicyServiceOutput
	ToPolicyServiceOutputWithContext(context.Context) PolicyServiceOutput
}

type PolicyServiceArgs struct {
	// Service name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyService)(nil)).Elem()
}

func (i PolicyServiceArgs) ToPolicyServiceOutput() PolicyServiceOutput {
	return i.ToPolicyServiceOutputWithContext(context.Background())
}

func (i PolicyServiceArgs) ToPolicyServiceOutputWithContext(ctx context.Context) PolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceOutput)
}

// PolicyServiceArrayInput is an input type that accepts PolicyServiceArray and PolicyServiceArrayOutput values.
// You can construct a concrete instance of `PolicyServiceArrayInput` via:
//
//	PolicyServiceArray{ PolicyServiceArgs{...} }
type PolicyServiceArrayInput interface {
	pulumi.Input

	ToPolicyServiceArrayOutput() PolicyServiceArrayOutput
	ToPolicyServiceArrayOutputWithContext(context.Context) PolicyServiceArrayOutput
}

type PolicyServiceArray []PolicyServiceInput

func (PolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyService)(nil)).Elem()
}

func (i PolicyServiceArray) ToPolicyServiceArrayOutput() PolicyServiceArrayOutput {
	return i.ToPolicyServiceArrayOutputWithContext(context.Background())
}

func (i PolicyServiceArray) ToPolicyServiceArrayOutputWithContext(ctx context.Context) PolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyServiceArrayOutput)
}

type PolicyServiceOutput struct{ *pulumi.OutputState }

func (PolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyService)(nil)).Elem()
}

func (o PolicyServiceOutput) ToPolicyServiceOutput() PolicyServiceOutput {
	return o
}

func (o PolicyServiceOutput) ToPolicyServiceOutputWithContext(ctx context.Context) PolicyServiceOutput {
	return o
}

// Service name.
func (o PolicyServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (PolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyService)(nil)).Elem()
}

func (o PolicyServiceArrayOutput) ToPolicyServiceArrayOutput() PolicyServiceArrayOutput {
	return o
}

func (o PolicyServiceArrayOutput) ToPolicyServiceArrayOutputWithContext(ctx context.Context) PolicyServiceArrayOutput {
	return o
}

func (o PolicyServiceArrayOutput) Index(i pulumi.IntInput) PolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyService {
		return vs[0].([]PolicyService)[vs[1].(int)]
	}).(PolicyServiceOutput)
}

type PolicySrcaddr4 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicySrcaddr4Input is an input type that accepts PolicySrcaddr4Args and PolicySrcaddr4Output values.
// You can construct a concrete instance of `PolicySrcaddr4Input` via:
//
//	PolicySrcaddr4Args{...}
type PolicySrcaddr4Input interface {
	pulumi.Input

	ToPolicySrcaddr4Output() PolicySrcaddr4Output
	ToPolicySrcaddr4OutputWithContext(context.Context) PolicySrcaddr4Output
}

type PolicySrcaddr4Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicySrcaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr4)(nil)).Elem()
}

func (i PolicySrcaddr4Args) ToPolicySrcaddr4Output() PolicySrcaddr4Output {
	return i.ToPolicySrcaddr4OutputWithContext(context.Background())
}

func (i PolicySrcaddr4Args) ToPolicySrcaddr4OutputWithContext(ctx context.Context) PolicySrcaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddr4Output)
}

// PolicySrcaddr4ArrayInput is an input type that accepts PolicySrcaddr4Array and PolicySrcaddr4ArrayOutput values.
// You can construct a concrete instance of `PolicySrcaddr4ArrayInput` via:
//
//	PolicySrcaddr4Array{ PolicySrcaddr4Args{...} }
type PolicySrcaddr4ArrayInput interface {
	pulumi.Input

	ToPolicySrcaddr4ArrayOutput() PolicySrcaddr4ArrayOutput
	ToPolicySrcaddr4ArrayOutputWithContext(context.Context) PolicySrcaddr4ArrayOutput
}

type PolicySrcaddr4Array []PolicySrcaddr4Input

func (PolicySrcaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr4)(nil)).Elem()
}

func (i PolicySrcaddr4Array) ToPolicySrcaddr4ArrayOutput() PolicySrcaddr4ArrayOutput {
	return i.ToPolicySrcaddr4ArrayOutputWithContext(context.Background())
}

func (i PolicySrcaddr4Array) ToPolicySrcaddr4ArrayOutputWithContext(ctx context.Context) PolicySrcaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddr4ArrayOutput)
}

type PolicySrcaddr4Output struct{ *pulumi.OutputState }

func (PolicySrcaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr4)(nil)).Elem()
}

func (o PolicySrcaddr4Output) ToPolicySrcaddr4Output() PolicySrcaddr4Output {
	return o
}

func (o PolicySrcaddr4Output) ToPolicySrcaddr4OutputWithContext(ctx context.Context) PolicySrcaddr4Output {
	return o
}

// Policy name.
func (o PolicySrcaddr4Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySrcaddr4) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicySrcaddr4ArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr4)(nil)).Elem()
}

func (o PolicySrcaddr4ArrayOutput) ToPolicySrcaddr4ArrayOutput() PolicySrcaddr4ArrayOutput {
	return o
}

func (o PolicySrcaddr4ArrayOutput) ToPolicySrcaddr4ArrayOutputWithContext(ctx context.Context) PolicySrcaddr4ArrayOutput {
	return o
}

func (o PolicySrcaddr4ArrayOutput) Index(i pulumi.IntInput) PolicySrcaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrcaddr4 {
		return vs[0].([]PolicySrcaddr4)[vs[1].(int)]
	}).(PolicySrcaddr4Output)
}

type PolicySrcaddr6 struct {
	// Policy name.
	Name *string `pulumi:"name"`
}

// PolicySrcaddr6Input is an input type that accepts PolicySrcaddr6Args and PolicySrcaddr6Output values.
// You can construct a concrete instance of `PolicySrcaddr6Input` via:
//
//	PolicySrcaddr6Args{...}
type PolicySrcaddr6Input interface {
	pulumi.Input

	ToPolicySrcaddr6Output() PolicySrcaddr6Output
	ToPolicySrcaddr6OutputWithContext(context.Context) PolicySrcaddr6Output
}

type PolicySrcaddr6Args struct {
	// Policy name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr6)(nil)).Elem()
}

func (i PolicySrcaddr6Args) ToPolicySrcaddr6Output() PolicySrcaddr6Output {
	return i.ToPolicySrcaddr6OutputWithContext(context.Background())
}

func (i PolicySrcaddr6Args) ToPolicySrcaddr6OutputWithContext(ctx context.Context) PolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddr6Output)
}

// PolicySrcaddr6ArrayInput is an input type that accepts PolicySrcaddr6Array and PolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `PolicySrcaddr6ArrayInput` via:
//
//	PolicySrcaddr6Array{ PolicySrcaddr6Args{...} }
type PolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToPolicySrcaddr6ArrayOutput() PolicySrcaddr6ArrayOutput
	ToPolicySrcaddr6ArrayOutputWithContext(context.Context) PolicySrcaddr6ArrayOutput
}

type PolicySrcaddr6Array []PolicySrcaddr6Input

func (PolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr6)(nil)).Elem()
}

func (i PolicySrcaddr6Array) ToPolicySrcaddr6ArrayOutput() PolicySrcaddr6ArrayOutput {
	return i.ToPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i PolicySrcaddr6Array) ToPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) PolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcaddr6ArrayOutput)
}

type PolicySrcaddr6Output struct{ *pulumi.OutputState }

func (PolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcaddr6)(nil)).Elem()
}

func (o PolicySrcaddr6Output) ToPolicySrcaddr6Output() PolicySrcaddr6Output {
	return o
}

func (o PolicySrcaddr6Output) ToPolicySrcaddr6OutputWithContext(ctx context.Context) PolicySrcaddr6Output {
	return o
}

// Policy name.
func (o PolicySrcaddr6Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySrcaddr6) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcaddr6)(nil)).Elem()
}

func (o PolicySrcaddr6ArrayOutput) ToPolicySrcaddr6ArrayOutput() PolicySrcaddr6ArrayOutput {
	return o
}

func (o PolicySrcaddr6ArrayOutput) ToPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) PolicySrcaddr6ArrayOutput {
	return o
}

func (o PolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) PolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrcaddr6 {
		return vs[0].([]PolicySrcaddr6)[vs[1].(int)]
	}).(PolicySrcaddr6Output)
}

type PolicySrcintf struct {
	// Interface name.
	Name *string `pulumi:"name"`
}

// PolicySrcintfInput is an input type that accepts PolicySrcintfArgs and PolicySrcintfOutput values.
// You can construct a concrete instance of `PolicySrcintfInput` via:
//
//	PolicySrcintfArgs{...}
type PolicySrcintfInput interface {
	pulumi.Input

	ToPolicySrcintfOutput() PolicySrcintfOutput
	ToPolicySrcintfOutputWithContext(context.Context) PolicySrcintfOutput
}

type PolicySrcintfArgs struct {
	// Interface name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcintf)(nil)).Elem()
}

func (i PolicySrcintfArgs) ToPolicySrcintfOutput() PolicySrcintfOutput {
	return i.ToPolicySrcintfOutputWithContext(context.Background())
}

func (i PolicySrcintfArgs) ToPolicySrcintfOutputWithContext(ctx context.Context) PolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcintfOutput)
}

// PolicySrcintfArrayInput is an input type that accepts PolicySrcintfArray and PolicySrcintfArrayOutput values.
// You can construct a concrete instance of `PolicySrcintfArrayInput` via:
//
//	PolicySrcintfArray{ PolicySrcintfArgs{...} }
type PolicySrcintfArrayInput interface {
	pulumi.Input

	ToPolicySrcintfArrayOutput() PolicySrcintfArrayOutput
	ToPolicySrcintfArrayOutputWithContext(context.Context) PolicySrcintfArrayOutput
}

type PolicySrcintfArray []PolicySrcintfInput

func (PolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcintf)(nil)).Elem()
}

func (i PolicySrcintfArray) ToPolicySrcintfArrayOutput() PolicySrcintfArrayOutput {
	return i.ToPolicySrcintfArrayOutputWithContext(context.Background())
}

func (i PolicySrcintfArray) ToPolicySrcintfArrayOutputWithContext(ctx context.Context) PolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySrcintfArrayOutput)
}

type PolicySrcintfOutput struct{ *pulumi.OutputState }

func (PolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySrcintf)(nil)).Elem()
}

func (o PolicySrcintfOutput) ToPolicySrcintfOutput() PolicySrcintfOutput {
	return o
}

func (o PolicySrcintfOutput) ToPolicySrcintfOutputWithContext(ctx context.Context) PolicySrcintfOutput {
	return o
}

// Interface name.
func (o PolicySrcintfOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySrcintf) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (PolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySrcintf)(nil)).Elem()
}

func (o PolicySrcintfArrayOutput) ToPolicySrcintfArrayOutput() PolicySrcintfArrayOutput {
	return o
}

func (o PolicySrcintfArrayOutput) ToPolicySrcintfArrayOutputWithContext(ctx context.Context) PolicySrcintfArrayOutput {
	return o
}

func (o PolicySrcintfArrayOutput) Index(i pulumi.IntInput) PolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySrcintf {
		return vs[0].([]PolicySrcintf)[vs[1].(int)]
	}).(PolicySrcintfOutput)
}

type PolicyUrlCategory struct {
	// URL category ID.
	Id *int `pulumi:"id"`
}

// PolicyUrlCategoryInput is an input type that accepts PolicyUrlCategoryArgs and PolicyUrlCategoryOutput values.
// You can construct a concrete instance of `PolicyUrlCategoryInput` via:
//
//	PolicyUrlCategoryArgs{...}
type PolicyUrlCategoryInput interface {
	pulumi.Input

	ToPolicyUrlCategoryOutput() PolicyUrlCategoryOutput
	ToPolicyUrlCategoryOutputWithContext(context.Context) PolicyUrlCategoryOutput
}

type PolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (PolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyUrlCategory)(nil)).Elem()
}

func (i PolicyUrlCategoryArgs) ToPolicyUrlCategoryOutput() PolicyUrlCategoryOutput {
	return i.ToPolicyUrlCategoryOutputWithContext(context.Background())
}

func (i PolicyUrlCategoryArgs) ToPolicyUrlCategoryOutputWithContext(ctx context.Context) PolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyUrlCategoryOutput)
}

// PolicyUrlCategoryArrayInput is an input type that accepts PolicyUrlCategoryArray and PolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `PolicyUrlCategoryArrayInput` via:
//
//	PolicyUrlCategoryArray{ PolicyUrlCategoryArgs{...} }
type PolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToPolicyUrlCategoryArrayOutput() PolicyUrlCategoryArrayOutput
	ToPolicyUrlCategoryArrayOutputWithContext(context.Context) PolicyUrlCategoryArrayOutput
}

type PolicyUrlCategoryArray []PolicyUrlCategoryInput

func (PolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyUrlCategory)(nil)).Elem()
}

func (i PolicyUrlCategoryArray) ToPolicyUrlCategoryArrayOutput() PolicyUrlCategoryArrayOutput {
	return i.ToPolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i PolicyUrlCategoryArray) ToPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) PolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyUrlCategoryArrayOutput)
}

type PolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (PolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyUrlCategory)(nil)).Elem()
}

func (o PolicyUrlCategoryOutput) ToPolicyUrlCategoryOutput() PolicyUrlCategoryOutput {
	return o
}

func (o PolicyUrlCategoryOutput) ToPolicyUrlCategoryOutputWithContext(ctx context.Context) PolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o PolicyUrlCategoryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyUrlCategory) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type PolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (PolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyUrlCategory)(nil)).Elem()
}

func (o PolicyUrlCategoryArrayOutput) ToPolicyUrlCategoryArrayOutput() PolicyUrlCategoryArrayOutput {
	return o
}

func (o PolicyUrlCategoryArrayOutput) ToPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) PolicyUrlCategoryArrayOutput {
	return o
}

func (o PolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) PolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyUrlCategory {
		return vs[0].([]PolicyUrlCategory)[vs[1].(int)]
	}).(PolicyUrlCategoryOutput)
}

type PolicyUser struct {
	// IPv6 pool name.
	Name *string `pulumi:"name"`
}

// PolicyUserInput is an input type that accepts PolicyUserArgs and PolicyUserOutput values.
// You can construct a concrete instance of `PolicyUserInput` via:
//
//	PolicyUserArgs{...}
type PolicyUserInput interface {
	pulumi.Input

	ToPolicyUserOutput() PolicyUserOutput
	ToPolicyUserOutputWithContext(context.Context) PolicyUserOutput
}

type PolicyUserArgs struct {
	// IPv6 pool name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyUser)(nil)).Elem()
}

func (i PolicyUserArgs) ToPolicyUserOutput() PolicyUserOutput {
	return i.ToPolicyUserOutputWithContext(context.Background())
}

func (i PolicyUserArgs) ToPolicyUserOutputWithContext(ctx context.Context) PolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyUserOutput)
}

// PolicyUserArrayInput is an input type that accepts PolicyUserArray and PolicyUserArrayOutput values.
// You can construct a concrete instance of `PolicyUserArrayInput` via:
//
//	PolicyUserArray{ PolicyUserArgs{...} }
type PolicyUserArrayInput interface {
	pulumi.Input

	ToPolicyUserArrayOutput() PolicyUserArrayOutput
	ToPolicyUserArrayOutputWithContext(context.Context) PolicyUserArrayOutput
}

type PolicyUserArray []PolicyUserInput

func (PolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyUser)(nil)).Elem()
}

func (i PolicyUserArray) ToPolicyUserArrayOutput() PolicyUserArrayOutput {
	return i.ToPolicyUserArrayOutputWithContext(context.Background())
}

func (i PolicyUserArray) ToPolicyUserArrayOutputWithContext(ctx context.Context) PolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyUserArrayOutput)
}

type PolicyUserOutput struct{ *pulumi.OutputState }

func (PolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyUser)(nil)).Elem()
}

func (o PolicyUserOutput) ToPolicyUserOutput() PolicyUserOutput {
	return o
}

func (o PolicyUserOutput) ToPolicyUserOutputWithContext(ctx context.Context) PolicyUserOutput {
	return o
}

// IPv6 pool name.
func (o PolicyUserOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyUser) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PolicyUserArrayOutput struct{ *pulumi.OutputState }

func (PolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyUser)(nil)).Elem()
}

func (o PolicyUserArrayOutput) ToPolicyUserArrayOutput() PolicyUserArrayOutput {
	return o
}

func (o PolicyUserArrayOutput) ToPolicyUserArrayOutputWithContext(ctx context.Context) PolicyUserArrayOutput {
	return o
}

func (o PolicyUserArrayOutput) Index(i pulumi.IntInput) PolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyUser {
		return vs[0].([]PolicyUser)[vs[1].(int)]
	}).(PolicyUserOutput)
}

type GetPolicyAppCategory struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetPolicyAppCategoryInput is an input type that accepts GetPolicyAppCategoryArgs and GetPolicyAppCategoryOutput values.
// You can construct a concrete instance of `GetPolicyAppCategoryInput` via:
//
//	GetPolicyAppCategoryArgs{...}
type GetPolicyAppCategoryInput interface {
	pulumi.Input

	ToGetPolicyAppCategoryOutput() GetPolicyAppCategoryOutput
	ToGetPolicyAppCategoryOutputWithContext(context.Context) GetPolicyAppCategoryOutput
}

type GetPolicyAppCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyAppCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAppCategory)(nil)).Elem()
}

func (i GetPolicyAppCategoryArgs) ToGetPolicyAppCategoryOutput() GetPolicyAppCategoryOutput {
	return i.ToGetPolicyAppCategoryOutputWithContext(context.Background())
}

func (i GetPolicyAppCategoryArgs) ToGetPolicyAppCategoryOutputWithContext(ctx context.Context) GetPolicyAppCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAppCategoryOutput)
}

// GetPolicyAppCategoryArrayInput is an input type that accepts GetPolicyAppCategoryArray and GetPolicyAppCategoryArrayOutput values.
// You can construct a concrete instance of `GetPolicyAppCategoryArrayInput` via:
//
//	GetPolicyAppCategoryArray{ GetPolicyAppCategoryArgs{...} }
type GetPolicyAppCategoryArrayInput interface {
	pulumi.Input

	ToGetPolicyAppCategoryArrayOutput() GetPolicyAppCategoryArrayOutput
	ToGetPolicyAppCategoryArrayOutputWithContext(context.Context) GetPolicyAppCategoryArrayOutput
}

type GetPolicyAppCategoryArray []GetPolicyAppCategoryInput

func (GetPolicyAppCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAppCategory)(nil)).Elem()
}

func (i GetPolicyAppCategoryArray) ToGetPolicyAppCategoryArrayOutput() GetPolicyAppCategoryArrayOutput {
	return i.ToGetPolicyAppCategoryArrayOutputWithContext(context.Background())
}

func (i GetPolicyAppCategoryArray) ToGetPolicyAppCategoryArrayOutputWithContext(ctx context.Context) GetPolicyAppCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAppCategoryArrayOutput)
}

type GetPolicyAppCategoryOutput struct{ *pulumi.OutputState }

func (GetPolicyAppCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAppCategory)(nil)).Elem()
}

func (o GetPolicyAppCategoryOutput) ToGetPolicyAppCategoryOutput() GetPolicyAppCategoryOutput {
	return o
}

func (o GetPolicyAppCategoryOutput) ToGetPolicyAppCategoryOutputWithContext(ctx context.Context) GetPolicyAppCategoryOutput {
	return o
}

// URL category ID.
func (o GetPolicyAppCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyAppCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyAppCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyAppCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAppCategory)(nil)).Elem()
}

func (o GetPolicyAppCategoryArrayOutput) ToGetPolicyAppCategoryArrayOutput() GetPolicyAppCategoryArrayOutput {
	return o
}

func (o GetPolicyAppCategoryArrayOutput) ToGetPolicyAppCategoryArrayOutputWithContext(ctx context.Context) GetPolicyAppCategoryArrayOutput {
	return o
}

func (o GetPolicyAppCategoryArrayOutput) Index(i pulumi.IntInput) GetPolicyAppCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyAppCategory {
		return vs[0].([]GetPolicyAppCategory)[vs[1].(int)]
	}).(GetPolicyAppCategoryOutput)
}

type GetPolicyAppGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyAppGroupInput is an input type that accepts GetPolicyAppGroupArgs and GetPolicyAppGroupOutput values.
// You can construct a concrete instance of `GetPolicyAppGroupInput` via:
//
//	GetPolicyAppGroupArgs{...}
type GetPolicyAppGroupInput interface {
	pulumi.Input

	ToGetPolicyAppGroupOutput() GetPolicyAppGroupOutput
	ToGetPolicyAppGroupOutputWithContext(context.Context) GetPolicyAppGroupOutput
}

type GetPolicyAppGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyAppGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAppGroup)(nil)).Elem()
}

func (i GetPolicyAppGroupArgs) ToGetPolicyAppGroupOutput() GetPolicyAppGroupOutput {
	return i.ToGetPolicyAppGroupOutputWithContext(context.Background())
}

func (i GetPolicyAppGroupArgs) ToGetPolicyAppGroupOutputWithContext(ctx context.Context) GetPolicyAppGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAppGroupOutput)
}

// GetPolicyAppGroupArrayInput is an input type that accepts GetPolicyAppGroupArray and GetPolicyAppGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyAppGroupArrayInput` via:
//
//	GetPolicyAppGroupArray{ GetPolicyAppGroupArgs{...} }
type GetPolicyAppGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyAppGroupArrayOutput() GetPolicyAppGroupArrayOutput
	ToGetPolicyAppGroupArrayOutputWithContext(context.Context) GetPolicyAppGroupArrayOutput
}

type GetPolicyAppGroupArray []GetPolicyAppGroupInput

func (GetPolicyAppGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAppGroup)(nil)).Elem()
}

func (i GetPolicyAppGroupArray) ToGetPolicyAppGroupArrayOutput() GetPolicyAppGroupArrayOutput {
	return i.ToGetPolicyAppGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyAppGroupArray) ToGetPolicyAppGroupArrayOutputWithContext(ctx context.Context) GetPolicyAppGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAppGroupArrayOutput)
}

type GetPolicyAppGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyAppGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAppGroup)(nil)).Elem()
}

func (o GetPolicyAppGroupOutput) ToGetPolicyAppGroupOutput() GetPolicyAppGroupOutput {
	return o
}

func (o GetPolicyAppGroupOutput) ToGetPolicyAppGroupOutputWithContext(ctx context.Context) GetPolicyAppGroupOutput {
	return o
}

// Application group names.
func (o GetPolicyAppGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyAppGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyAppGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyAppGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAppGroup)(nil)).Elem()
}

func (o GetPolicyAppGroupArrayOutput) ToGetPolicyAppGroupArrayOutput() GetPolicyAppGroupArrayOutput {
	return o
}

func (o GetPolicyAppGroupArrayOutput) ToGetPolicyAppGroupArrayOutputWithContext(ctx context.Context) GetPolicyAppGroupArrayOutput {
	return o
}

func (o GetPolicyAppGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyAppGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyAppGroup {
		return vs[0].([]GetPolicyAppGroup)[vs[1].(int)]
	}).(GetPolicyAppGroupOutput)
}

type GetPolicyApplication struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetPolicyApplicationInput is an input type that accepts GetPolicyApplicationArgs and GetPolicyApplicationOutput values.
// You can construct a concrete instance of `GetPolicyApplicationInput` via:
//
//	GetPolicyApplicationArgs{...}
type GetPolicyApplicationInput interface {
	pulumi.Input

	ToGetPolicyApplicationOutput() GetPolicyApplicationOutput
	ToGetPolicyApplicationOutputWithContext(context.Context) GetPolicyApplicationOutput
}

type GetPolicyApplicationArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyApplication)(nil)).Elem()
}

func (i GetPolicyApplicationArgs) ToGetPolicyApplicationOutput() GetPolicyApplicationOutput {
	return i.ToGetPolicyApplicationOutputWithContext(context.Background())
}

func (i GetPolicyApplicationArgs) ToGetPolicyApplicationOutputWithContext(ctx context.Context) GetPolicyApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyApplicationOutput)
}

// GetPolicyApplicationArrayInput is an input type that accepts GetPolicyApplicationArray and GetPolicyApplicationArrayOutput values.
// You can construct a concrete instance of `GetPolicyApplicationArrayInput` via:
//
//	GetPolicyApplicationArray{ GetPolicyApplicationArgs{...} }
type GetPolicyApplicationArrayInput interface {
	pulumi.Input

	ToGetPolicyApplicationArrayOutput() GetPolicyApplicationArrayOutput
	ToGetPolicyApplicationArrayOutputWithContext(context.Context) GetPolicyApplicationArrayOutput
}

type GetPolicyApplicationArray []GetPolicyApplicationInput

func (GetPolicyApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyApplication)(nil)).Elem()
}

func (i GetPolicyApplicationArray) ToGetPolicyApplicationArrayOutput() GetPolicyApplicationArrayOutput {
	return i.ToGetPolicyApplicationArrayOutputWithContext(context.Background())
}

func (i GetPolicyApplicationArray) ToGetPolicyApplicationArrayOutputWithContext(ctx context.Context) GetPolicyApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyApplicationArrayOutput)
}

type GetPolicyApplicationOutput struct{ *pulumi.OutputState }

func (GetPolicyApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyApplication)(nil)).Elem()
}

func (o GetPolicyApplicationOutput) ToGetPolicyApplicationOutput() GetPolicyApplicationOutput {
	return o
}

func (o GetPolicyApplicationOutput) ToGetPolicyApplicationOutputWithContext(ctx context.Context) GetPolicyApplicationOutput {
	return o
}

// URL category ID.
func (o GetPolicyApplicationOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyApplication) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyApplication)(nil)).Elem()
}

func (o GetPolicyApplicationArrayOutput) ToGetPolicyApplicationArrayOutput() GetPolicyApplicationArrayOutput {
	return o
}

func (o GetPolicyApplicationArrayOutput) ToGetPolicyApplicationArrayOutputWithContext(ctx context.Context) GetPolicyApplicationArrayOutput {
	return o
}

func (o GetPolicyApplicationArrayOutput) Index(i pulumi.IntInput) GetPolicyApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyApplication {
		return vs[0].([]GetPolicyApplication)[vs[1].(int)]
	}).(GetPolicyApplicationOutput)
}

type GetPolicyDstaddr4 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyDstaddr4Input is an input type that accepts GetPolicyDstaddr4Args and GetPolicyDstaddr4Output values.
// You can construct a concrete instance of `GetPolicyDstaddr4Input` via:
//
//	GetPolicyDstaddr4Args{...}
type GetPolicyDstaddr4Input interface {
	pulumi.Input

	ToGetPolicyDstaddr4Output() GetPolicyDstaddr4Output
	ToGetPolicyDstaddr4OutputWithContext(context.Context) GetPolicyDstaddr4Output
}

type GetPolicyDstaddr4Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyDstaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr4)(nil)).Elem()
}

func (i GetPolicyDstaddr4Args) ToGetPolicyDstaddr4Output() GetPolicyDstaddr4Output {
	return i.ToGetPolicyDstaddr4OutputWithContext(context.Background())
}

func (i GetPolicyDstaddr4Args) ToGetPolicyDstaddr4OutputWithContext(ctx context.Context) GetPolicyDstaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddr4Output)
}

// GetPolicyDstaddr4ArrayInput is an input type that accepts GetPolicyDstaddr4Array and GetPolicyDstaddr4ArrayOutput values.
// You can construct a concrete instance of `GetPolicyDstaddr4ArrayInput` via:
//
//	GetPolicyDstaddr4Array{ GetPolicyDstaddr4Args{...} }
type GetPolicyDstaddr4ArrayInput interface {
	pulumi.Input

	ToGetPolicyDstaddr4ArrayOutput() GetPolicyDstaddr4ArrayOutput
	ToGetPolicyDstaddr4ArrayOutputWithContext(context.Context) GetPolicyDstaddr4ArrayOutput
}

type GetPolicyDstaddr4Array []GetPolicyDstaddr4Input

func (GetPolicyDstaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr4)(nil)).Elem()
}

func (i GetPolicyDstaddr4Array) ToGetPolicyDstaddr4ArrayOutput() GetPolicyDstaddr4ArrayOutput {
	return i.ToGetPolicyDstaddr4ArrayOutputWithContext(context.Background())
}

func (i GetPolicyDstaddr4Array) ToGetPolicyDstaddr4ArrayOutputWithContext(ctx context.Context) GetPolicyDstaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddr4ArrayOutput)
}

type GetPolicyDstaddr4Output struct{ *pulumi.OutputState }

func (GetPolicyDstaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr4)(nil)).Elem()
}

func (o GetPolicyDstaddr4Output) ToGetPolicyDstaddr4Output() GetPolicyDstaddr4Output {
	return o
}

func (o GetPolicyDstaddr4Output) ToGetPolicyDstaddr4OutputWithContext(ctx context.Context) GetPolicyDstaddr4Output {
	return o
}

// Application group names.
func (o GetPolicyDstaddr4Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDstaddr4) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyDstaddr4ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDstaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr4)(nil)).Elem()
}

func (o GetPolicyDstaddr4ArrayOutput) ToGetPolicyDstaddr4ArrayOutput() GetPolicyDstaddr4ArrayOutput {
	return o
}

func (o GetPolicyDstaddr4ArrayOutput) ToGetPolicyDstaddr4ArrayOutputWithContext(ctx context.Context) GetPolicyDstaddr4ArrayOutput {
	return o
}

func (o GetPolicyDstaddr4ArrayOutput) Index(i pulumi.IntInput) GetPolicyDstaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDstaddr4 {
		return vs[0].([]GetPolicyDstaddr4)[vs[1].(int)]
	}).(GetPolicyDstaddr4Output)
}

type GetPolicyDstaddr6 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyDstaddr6Input is an input type that accepts GetPolicyDstaddr6Args and GetPolicyDstaddr6Output values.
// You can construct a concrete instance of `GetPolicyDstaddr6Input` via:
//
//	GetPolicyDstaddr6Args{...}
type GetPolicyDstaddr6Input interface {
	pulumi.Input

	ToGetPolicyDstaddr6Output() GetPolicyDstaddr6Output
	ToGetPolicyDstaddr6OutputWithContext(context.Context) GetPolicyDstaddr6Output
}

type GetPolicyDstaddr6Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyDstaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr6)(nil)).Elem()
}

func (i GetPolicyDstaddr6Args) ToGetPolicyDstaddr6Output() GetPolicyDstaddr6Output {
	return i.ToGetPolicyDstaddr6OutputWithContext(context.Background())
}

func (i GetPolicyDstaddr6Args) ToGetPolicyDstaddr6OutputWithContext(ctx context.Context) GetPolicyDstaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddr6Output)
}

// GetPolicyDstaddr6ArrayInput is an input type that accepts GetPolicyDstaddr6Array and GetPolicyDstaddr6ArrayOutput values.
// You can construct a concrete instance of `GetPolicyDstaddr6ArrayInput` via:
//
//	GetPolicyDstaddr6Array{ GetPolicyDstaddr6Args{...} }
type GetPolicyDstaddr6ArrayInput interface {
	pulumi.Input

	ToGetPolicyDstaddr6ArrayOutput() GetPolicyDstaddr6ArrayOutput
	ToGetPolicyDstaddr6ArrayOutputWithContext(context.Context) GetPolicyDstaddr6ArrayOutput
}

type GetPolicyDstaddr6Array []GetPolicyDstaddr6Input

func (GetPolicyDstaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr6)(nil)).Elem()
}

func (i GetPolicyDstaddr6Array) ToGetPolicyDstaddr6ArrayOutput() GetPolicyDstaddr6ArrayOutput {
	return i.ToGetPolicyDstaddr6ArrayOutputWithContext(context.Background())
}

func (i GetPolicyDstaddr6Array) ToGetPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetPolicyDstaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstaddr6ArrayOutput)
}

type GetPolicyDstaddr6Output struct{ *pulumi.OutputState }

func (GetPolicyDstaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstaddr6)(nil)).Elem()
}

func (o GetPolicyDstaddr6Output) ToGetPolicyDstaddr6Output() GetPolicyDstaddr6Output {
	return o
}

func (o GetPolicyDstaddr6Output) ToGetPolicyDstaddr6OutputWithContext(ctx context.Context) GetPolicyDstaddr6Output {
	return o
}

// Application group names.
func (o GetPolicyDstaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDstaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyDstaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDstaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstaddr6)(nil)).Elem()
}

func (o GetPolicyDstaddr6ArrayOutput) ToGetPolicyDstaddr6ArrayOutput() GetPolicyDstaddr6ArrayOutput {
	return o
}

func (o GetPolicyDstaddr6ArrayOutput) ToGetPolicyDstaddr6ArrayOutputWithContext(ctx context.Context) GetPolicyDstaddr6ArrayOutput {
	return o
}

func (o GetPolicyDstaddr6ArrayOutput) Index(i pulumi.IntInput) GetPolicyDstaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDstaddr6 {
		return vs[0].([]GetPolicyDstaddr6)[vs[1].(int)]
	}).(GetPolicyDstaddr6Output)
}

type GetPolicyDstintf struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyDstintfInput is an input type that accepts GetPolicyDstintfArgs and GetPolicyDstintfOutput values.
// You can construct a concrete instance of `GetPolicyDstintfInput` via:
//
//	GetPolicyDstintfArgs{...}
type GetPolicyDstintfInput interface {
	pulumi.Input

	ToGetPolicyDstintfOutput() GetPolicyDstintfOutput
	ToGetPolicyDstintfOutputWithContext(context.Context) GetPolicyDstintfOutput
}

type GetPolicyDstintfArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyDstintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstintf)(nil)).Elem()
}

func (i GetPolicyDstintfArgs) ToGetPolicyDstintfOutput() GetPolicyDstintfOutput {
	return i.ToGetPolicyDstintfOutputWithContext(context.Background())
}

func (i GetPolicyDstintfArgs) ToGetPolicyDstintfOutputWithContext(ctx context.Context) GetPolicyDstintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstintfOutput)
}

// GetPolicyDstintfArrayInput is an input type that accepts GetPolicyDstintfArray and GetPolicyDstintfArrayOutput values.
// You can construct a concrete instance of `GetPolicyDstintfArrayInput` via:
//
//	GetPolicyDstintfArray{ GetPolicyDstintfArgs{...} }
type GetPolicyDstintfArrayInput interface {
	pulumi.Input

	ToGetPolicyDstintfArrayOutput() GetPolicyDstintfArrayOutput
	ToGetPolicyDstintfArrayOutputWithContext(context.Context) GetPolicyDstintfArrayOutput
}

type GetPolicyDstintfArray []GetPolicyDstintfInput

func (GetPolicyDstintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstintf)(nil)).Elem()
}

func (i GetPolicyDstintfArray) ToGetPolicyDstintfArrayOutput() GetPolicyDstintfArrayOutput {
	return i.ToGetPolicyDstintfArrayOutputWithContext(context.Background())
}

func (i GetPolicyDstintfArray) ToGetPolicyDstintfArrayOutputWithContext(ctx context.Context) GetPolicyDstintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDstintfArrayOutput)
}

type GetPolicyDstintfOutput struct{ *pulumi.OutputState }

func (GetPolicyDstintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDstintf)(nil)).Elem()
}

func (o GetPolicyDstintfOutput) ToGetPolicyDstintfOutput() GetPolicyDstintfOutput {
	return o
}

func (o GetPolicyDstintfOutput) ToGetPolicyDstintfOutputWithContext(ctx context.Context) GetPolicyDstintfOutput {
	return o
}

// Application group names.
func (o GetPolicyDstintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDstintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyDstintfArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDstintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDstintf)(nil)).Elem()
}

func (o GetPolicyDstintfArrayOutput) ToGetPolicyDstintfArrayOutput() GetPolicyDstintfArrayOutput {
	return o
}

func (o GetPolicyDstintfArrayOutput) ToGetPolicyDstintfArrayOutputWithContext(ctx context.Context) GetPolicyDstintfArrayOutput {
	return o
}

func (o GetPolicyDstintfArrayOutput) Index(i pulumi.IntInput) GetPolicyDstintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDstintf {
		return vs[0].([]GetPolicyDstintf)[vs[1].(int)]
	}).(GetPolicyDstintfOutput)
}

type GetPolicyFssoGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyFssoGroupInput is an input type that accepts GetPolicyFssoGroupArgs and GetPolicyFssoGroupOutput values.
// You can construct a concrete instance of `GetPolicyFssoGroupInput` via:
//
//	GetPolicyFssoGroupArgs{...}
type GetPolicyFssoGroupInput interface {
	pulumi.Input

	ToGetPolicyFssoGroupOutput() GetPolicyFssoGroupOutput
	ToGetPolicyFssoGroupOutputWithContext(context.Context) GetPolicyFssoGroupOutput
}

type GetPolicyFssoGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyFssoGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyFssoGroup)(nil)).Elem()
}

func (i GetPolicyFssoGroupArgs) ToGetPolicyFssoGroupOutput() GetPolicyFssoGroupOutput {
	return i.ToGetPolicyFssoGroupOutputWithContext(context.Background())
}

func (i GetPolicyFssoGroupArgs) ToGetPolicyFssoGroupOutputWithContext(ctx context.Context) GetPolicyFssoGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyFssoGroupOutput)
}

// GetPolicyFssoGroupArrayInput is an input type that accepts GetPolicyFssoGroupArray and GetPolicyFssoGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyFssoGroupArrayInput` via:
//
//	GetPolicyFssoGroupArray{ GetPolicyFssoGroupArgs{...} }
type GetPolicyFssoGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyFssoGroupArrayOutput() GetPolicyFssoGroupArrayOutput
	ToGetPolicyFssoGroupArrayOutputWithContext(context.Context) GetPolicyFssoGroupArrayOutput
}

type GetPolicyFssoGroupArray []GetPolicyFssoGroupInput

func (GetPolicyFssoGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyFssoGroup)(nil)).Elem()
}

func (i GetPolicyFssoGroupArray) ToGetPolicyFssoGroupArrayOutput() GetPolicyFssoGroupArrayOutput {
	return i.ToGetPolicyFssoGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyFssoGroupArray) ToGetPolicyFssoGroupArrayOutputWithContext(ctx context.Context) GetPolicyFssoGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyFssoGroupArrayOutput)
}

type GetPolicyFssoGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyFssoGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyFssoGroup)(nil)).Elem()
}

func (o GetPolicyFssoGroupOutput) ToGetPolicyFssoGroupOutput() GetPolicyFssoGroupOutput {
	return o
}

func (o GetPolicyFssoGroupOutput) ToGetPolicyFssoGroupOutputWithContext(ctx context.Context) GetPolicyFssoGroupOutput {
	return o
}

// Application group names.
func (o GetPolicyFssoGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyFssoGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyFssoGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyFssoGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyFssoGroup)(nil)).Elem()
}

func (o GetPolicyFssoGroupArrayOutput) ToGetPolicyFssoGroupArrayOutput() GetPolicyFssoGroupArrayOutput {
	return o
}

func (o GetPolicyFssoGroupArrayOutput) ToGetPolicyFssoGroupArrayOutputWithContext(ctx context.Context) GetPolicyFssoGroupArrayOutput {
	return o
}

func (o GetPolicyFssoGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyFssoGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyFssoGroup {
		return vs[0].([]GetPolicyFssoGroup)[vs[1].(int)]
	}).(GetPolicyFssoGroupOutput)
}

type GetPolicyGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyGroupInput is an input type that accepts GetPolicyGroupArgs and GetPolicyGroupOutput values.
// You can construct a concrete instance of `GetPolicyGroupInput` via:
//
//	GetPolicyGroupArgs{...}
type GetPolicyGroupInput interface {
	pulumi.Input

	ToGetPolicyGroupOutput() GetPolicyGroupOutput
	ToGetPolicyGroupOutputWithContext(context.Context) GetPolicyGroupOutput
}

type GetPolicyGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroup)(nil)).Elem()
}

func (i GetPolicyGroupArgs) ToGetPolicyGroupOutput() GetPolicyGroupOutput {
	return i.ToGetPolicyGroupOutputWithContext(context.Background())
}

func (i GetPolicyGroupArgs) ToGetPolicyGroupOutputWithContext(ctx context.Context) GetPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupOutput)
}

// GetPolicyGroupArrayInput is an input type that accepts GetPolicyGroupArray and GetPolicyGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyGroupArrayInput` via:
//
//	GetPolicyGroupArray{ GetPolicyGroupArgs{...} }
type GetPolicyGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyGroupArrayOutput() GetPolicyGroupArrayOutput
	ToGetPolicyGroupArrayOutputWithContext(context.Context) GetPolicyGroupArrayOutput
}

type GetPolicyGroupArray []GetPolicyGroupInput

func (GetPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroup)(nil)).Elem()
}

func (i GetPolicyGroupArray) ToGetPolicyGroupArrayOutput() GetPolicyGroupArrayOutput {
	return i.ToGetPolicyGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyGroupArray) ToGetPolicyGroupArrayOutputWithContext(ctx context.Context) GetPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupArrayOutput)
}

type GetPolicyGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroup)(nil)).Elem()
}

func (o GetPolicyGroupOutput) ToGetPolicyGroupOutput() GetPolicyGroupOutput {
	return o
}

func (o GetPolicyGroupOutput) ToGetPolicyGroupOutputWithContext(ctx context.Context) GetPolicyGroupOutput {
	return o
}

// Application group names.
func (o GetPolicyGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroup)(nil)).Elem()
}

func (o GetPolicyGroupArrayOutput) ToGetPolicyGroupArrayOutput() GetPolicyGroupArrayOutput {
	return o
}

func (o GetPolicyGroupArrayOutput) ToGetPolicyGroupArrayOutputWithContext(ctx context.Context) GetPolicyGroupArrayOutput {
	return o
}

func (o GetPolicyGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGroup {
		return vs[0].([]GetPolicyGroup)[vs[1].(int)]
	}).(GetPolicyGroupOutput)
}

type GetPolicyInternetServiceCustom struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceCustomInput is an input type that accepts GetPolicyInternetServiceCustomArgs and GetPolicyInternetServiceCustomOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomInput` via:
//
//	GetPolicyInternetServiceCustomArgs{...}
type GetPolicyInternetServiceCustomInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput
	ToGetPolicyInternetServiceCustomOutputWithContext(context.Context) GetPolicyInternetServiceCustomOutput
}

type GetPolicyInternetServiceCustomArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomArgs) ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput {
	return i.ToGetPolicyInternetServiceCustomOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomArgs) ToGetPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomOutput)
}

// GetPolicyInternetServiceCustomArrayInput is an input type that accepts GetPolicyInternetServiceCustomArray and GetPolicyInternetServiceCustomArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomArrayInput` via:
//
//	GetPolicyInternetServiceCustomArray{ GetPolicyInternetServiceCustomArgs{...} }
type GetPolicyInternetServiceCustomArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput
	ToGetPolicyInternetServiceCustomArrayOutputWithContext(context.Context) GetPolicyInternetServiceCustomArrayOutput
}

type GetPolicyInternetServiceCustomArray []GetPolicyInternetServiceCustomInput

func (GetPolicyInternetServiceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomArray) ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput {
	return i.ToGetPolicyInternetServiceCustomArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomArray) ToGetPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomArrayOutput)
}

type GetPolicyInternetServiceCustomOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomOutput) ToGetPolicyInternetServiceCustomOutput() GetPolicyInternetServiceCustomOutput {
	return o
}

func (o GetPolicyInternetServiceCustomOutput) ToGetPolicyInternetServiceCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomOutput {
	return o
}

// Application group names.
func (o GetPolicyInternetServiceCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceCustomArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomArrayOutput) ToGetPolicyInternetServiceCustomArrayOutput() GetPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomArrayOutput) ToGetPolicyInternetServiceCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceCustom {
		return vs[0].([]GetPolicyInternetServiceCustom)[vs[1].(int)]
	}).(GetPolicyInternetServiceCustomOutput)
}

type GetPolicyInternetServiceCustomGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceCustomGroupInput is an input type that accepts GetPolicyInternetServiceCustomGroupArgs and GetPolicyInternetServiceCustomGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomGroupInput` via:
//
//	GetPolicyInternetServiceCustomGroupArgs{...}
type GetPolicyInternetServiceCustomGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomGroupOutput() GetPolicyInternetServiceCustomGroupOutput
	ToGetPolicyInternetServiceCustomGroupOutputWithContext(context.Context) GetPolicyInternetServiceCustomGroupOutput
}

type GetPolicyInternetServiceCustomGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomGroupArgs) ToGetPolicyInternetServiceCustomGroupOutput() GetPolicyInternetServiceCustomGroupOutput {
	return i.ToGetPolicyInternetServiceCustomGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomGroupArgs) ToGetPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomGroupOutput)
}

// GetPolicyInternetServiceCustomGroupArrayInput is an input type that accepts GetPolicyInternetServiceCustomGroupArray and GetPolicyInternetServiceCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceCustomGroupArrayInput` via:
//
//	GetPolicyInternetServiceCustomGroupArray{ GetPolicyInternetServiceCustomGroupArgs{...} }
type GetPolicyInternetServiceCustomGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceCustomGroupArrayOutput() GetPolicyInternetServiceCustomGroupArrayOutput
	ToGetPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Context) GetPolicyInternetServiceCustomGroupArrayOutput
}

type GetPolicyInternetServiceCustomGroupArray []GetPolicyInternetServiceCustomGroupInput

func (GetPolicyInternetServiceCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceCustomGroupArray) ToGetPolicyInternetServiceCustomGroupArrayOutput() GetPolicyInternetServiceCustomGroupArrayOutput {
	return i.ToGetPolicyInternetServiceCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceCustomGroupArray) ToGetPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceCustomGroupArrayOutput)
}

type GetPolicyInternetServiceCustomGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomGroupOutput) ToGetPolicyInternetServiceCustomGroupOutput() GetPolicyInternetServiceCustomGroupOutput {
	return o
}

func (o GetPolicyInternetServiceCustomGroupOutput) ToGetPolicyInternetServiceCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomGroupOutput {
	return o
}

// Application group names.
func (o GetPolicyInternetServiceCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceCustomGroupArrayOutput) ToGetPolicyInternetServiceCustomGroupArrayOutput() GetPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomGroupArrayOutput) ToGetPolicyInternetServiceCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceCustomGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceCustomGroup {
		return vs[0].([]GetPolicyInternetServiceCustomGroup)[vs[1].(int)]
	}).(GetPolicyInternetServiceCustomGroupOutput)
}

type GetPolicyInternetServiceGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceGroupInput is an input type that accepts GetPolicyInternetServiceGroupArgs and GetPolicyInternetServiceGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceGroupInput` via:
//
//	GetPolicyInternetServiceGroupArgs{...}
type GetPolicyInternetServiceGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceGroupOutput() GetPolicyInternetServiceGroupOutput
	ToGetPolicyInternetServiceGroupOutputWithContext(context.Context) GetPolicyInternetServiceGroupOutput
}

type GetPolicyInternetServiceGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceGroupArgs) ToGetPolicyInternetServiceGroupOutput() GetPolicyInternetServiceGroupOutput {
	return i.ToGetPolicyInternetServiceGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceGroupArgs) ToGetPolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceGroupOutput)
}

// GetPolicyInternetServiceGroupArrayInput is an input type that accepts GetPolicyInternetServiceGroupArray and GetPolicyInternetServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceGroupArrayInput` via:
//
//	GetPolicyInternetServiceGroupArray{ GetPolicyInternetServiceGroupArgs{...} }
type GetPolicyInternetServiceGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceGroupArrayOutput() GetPolicyInternetServiceGroupArrayOutput
	ToGetPolicyInternetServiceGroupArrayOutputWithContext(context.Context) GetPolicyInternetServiceGroupArrayOutput
}

type GetPolicyInternetServiceGroupArray []GetPolicyInternetServiceGroupInput

func (GetPolicyInternetServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceGroupArray) ToGetPolicyInternetServiceGroupArrayOutput() GetPolicyInternetServiceGroupArrayOutput {
	return i.ToGetPolicyInternetServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceGroupArray) ToGetPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceGroupArrayOutput)
}

type GetPolicyInternetServiceGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceGroupOutput) ToGetPolicyInternetServiceGroupOutput() GetPolicyInternetServiceGroupOutput {
	return o
}

func (o GetPolicyInternetServiceGroupOutput) ToGetPolicyInternetServiceGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceGroupOutput {
	return o
}

// Application group names.
func (o GetPolicyInternetServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceGroupArrayOutput) ToGetPolicyInternetServiceGroupArrayOutput() GetPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceGroupArrayOutput) ToGetPolicyInternetServiceGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceGroup {
		return vs[0].([]GetPolicyInternetServiceGroup)[vs[1].(int)]
	}).(GetPolicyInternetServiceGroupOutput)
}

type GetPolicyInternetServiceId struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetPolicyInternetServiceIdInput is an input type that accepts GetPolicyInternetServiceIdArgs and GetPolicyInternetServiceIdOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceIdInput` via:
//
//	GetPolicyInternetServiceIdArgs{...}
type GetPolicyInternetServiceIdInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput
	ToGetPolicyInternetServiceIdOutputWithContext(context.Context) GetPolicyInternetServiceIdOutput
}

type GetPolicyInternetServiceIdArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyInternetServiceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceId)(nil)).Elem()
}

func (i GetPolicyInternetServiceIdArgs) ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput {
	return i.ToGetPolicyInternetServiceIdOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceIdArgs) ToGetPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceIdOutput)
}

// GetPolicyInternetServiceIdArrayInput is an input type that accepts GetPolicyInternetServiceIdArray and GetPolicyInternetServiceIdArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceIdArrayInput` via:
//
//	GetPolicyInternetServiceIdArray{ GetPolicyInternetServiceIdArgs{...} }
type GetPolicyInternetServiceIdArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput
	ToGetPolicyInternetServiceIdArrayOutputWithContext(context.Context) GetPolicyInternetServiceIdArrayOutput
}

type GetPolicyInternetServiceIdArray []GetPolicyInternetServiceIdInput

func (GetPolicyInternetServiceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceId)(nil)).Elem()
}

func (i GetPolicyInternetServiceIdArray) ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput {
	return i.ToGetPolicyInternetServiceIdArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceIdArray) ToGetPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceIdArrayOutput)
}

type GetPolicyInternetServiceIdOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceId)(nil)).Elem()
}

func (o GetPolicyInternetServiceIdOutput) ToGetPolicyInternetServiceIdOutput() GetPolicyInternetServiceIdOutput {
	return o
}

func (o GetPolicyInternetServiceIdOutput) ToGetPolicyInternetServiceIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdOutput {
	return o
}

// URL category ID.
func (o GetPolicyInternetServiceIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceId) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyInternetServiceIdArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceId)(nil)).Elem()
}

func (o GetPolicyInternetServiceIdArrayOutput) ToGetPolicyInternetServiceIdArrayOutput() GetPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceIdArrayOutput) ToGetPolicyInternetServiceIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceIdArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceId {
		return vs[0].([]GetPolicyInternetServiceId)[vs[1].(int)]
	}).(GetPolicyInternetServiceIdOutput)
}

type GetPolicyInternetServiceName struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceNameInput is an input type that accepts GetPolicyInternetServiceNameArgs and GetPolicyInternetServiceNameOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceNameInput` via:
//
//	GetPolicyInternetServiceNameArgs{...}
type GetPolicyInternetServiceNameInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceNameOutput() GetPolicyInternetServiceNameOutput
	ToGetPolicyInternetServiceNameOutputWithContext(context.Context) GetPolicyInternetServiceNameOutput
}

type GetPolicyInternetServiceNameArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceName)(nil)).Elem()
}

func (i GetPolicyInternetServiceNameArgs) ToGetPolicyInternetServiceNameOutput() GetPolicyInternetServiceNameOutput {
	return i.ToGetPolicyInternetServiceNameOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceNameArgs) ToGetPolicyInternetServiceNameOutputWithContext(ctx context.Context) GetPolicyInternetServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceNameOutput)
}

// GetPolicyInternetServiceNameArrayInput is an input type that accepts GetPolicyInternetServiceNameArray and GetPolicyInternetServiceNameArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceNameArrayInput` via:
//
//	GetPolicyInternetServiceNameArray{ GetPolicyInternetServiceNameArgs{...} }
type GetPolicyInternetServiceNameArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceNameArrayOutput() GetPolicyInternetServiceNameArrayOutput
	ToGetPolicyInternetServiceNameArrayOutputWithContext(context.Context) GetPolicyInternetServiceNameArrayOutput
}

type GetPolicyInternetServiceNameArray []GetPolicyInternetServiceNameInput

func (GetPolicyInternetServiceNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceName)(nil)).Elem()
}

func (i GetPolicyInternetServiceNameArray) ToGetPolicyInternetServiceNameArrayOutput() GetPolicyInternetServiceNameArrayOutput {
	return i.ToGetPolicyInternetServiceNameArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceNameArray) ToGetPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceNameArrayOutput)
}

type GetPolicyInternetServiceNameOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceName)(nil)).Elem()
}

func (o GetPolicyInternetServiceNameOutput) ToGetPolicyInternetServiceNameOutput() GetPolicyInternetServiceNameOutput {
	return o
}

func (o GetPolicyInternetServiceNameOutput) ToGetPolicyInternetServiceNameOutputWithContext(ctx context.Context) GetPolicyInternetServiceNameOutput {
	return o
}

// Application group names.
func (o GetPolicyInternetServiceNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceName) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceNameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceName)(nil)).Elem()
}

func (o GetPolicyInternetServiceNameArrayOutput) ToGetPolicyInternetServiceNameArrayOutput() GetPolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetPolicyInternetServiceNameArrayOutput) ToGetPolicyInternetServiceNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceNameArrayOutput {
	return o
}

func (o GetPolicyInternetServiceNameArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceName {
		return vs[0].([]GetPolicyInternetServiceName)[vs[1].(int)]
	}).(GetPolicyInternetServiceNameOutput)
}

type GetPolicyInternetServiceSrcCustom struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceSrcCustomInput is an input type that accepts GetPolicyInternetServiceSrcCustomArgs and GetPolicyInternetServiceSrcCustomOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcCustomInput` via:
//
//	GetPolicyInternetServiceSrcCustomArgs{...}
type GetPolicyInternetServiceSrcCustomInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcCustomOutput() GetPolicyInternetServiceSrcCustomOutput
	ToGetPolicyInternetServiceSrcCustomOutputWithContext(context.Context) GetPolicyInternetServiceSrcCustomOutput
}

type GetPolicyInternetServiceSrcCustomArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceSrcCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcCustomArgs) ToGetPolicyInternetServiceSrcCustomOutput() GetPolicyInternetServiceSrcCustomOutput {
	return i.ToGetPolicyInternetServiceSrcCustomOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcCustomArgs) ToGetPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcCustomOutput)
}

// GetPolicyInternetServiceSrcCustomArrayInput is an input type that accepts GetPolicyInternetServiceSrcCustomArray and GetPolicyInternetServiceSrcCustomArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcCustomArrayInput` via:
//
//	GetPolicyInternetServiceSrcCustomArray{ GetPolicyInternetServiceSrcCustomArgs{...} }
type GetPolicyInternetServiceSrcCustomArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcCustomArrayOutput() GetPolicyInternetServiceSrcCustomArrayOutput
	ToGetPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcCustomArrayOutput
}

type GetPolicyInternetServiceSrcCustomArray []GetPolicyInternetServiceSrcCustomInput

func (GetPolicyInternetServiceSrcCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcCustomArray) ToGetPolicyInternetServiceSrcCustomArrayOutput() GetPolicyInternetServiceSrcCustomArrayOutput {
	return i.ToGetPolicyInternetServiceSrcCustomArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcCustomArray) ToGetPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcCustomArrayOutput)
}

type GetPolicyInternetServiceSrcCustomOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcCustomOutput) ToGetPolicyInternetServiceSrcCustomOutput() GetPolicyInternetServiceSrcCustomOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomOutput) ToGetPolicyInternetServiceSrcCustomOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomOutput {
	return o
}

// Application group names.
func (o GetPolicyInternetServiceSrcCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcCustom) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceSrcCustomArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcCustom)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcCustomArrayOutput) ToGetPolicyInternetServiceSrcCustomArrayOutput() GetPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomArrayOutput) ToGetPolicyInternetServiceSrcCustomArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcCustom {
		return vs[0].([]GetPolicyInternetServiceSrcCustom)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcCustomOutput)
}

type GetPolicyInternetServiceSrcCustomGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceSrcCustomGroupInput is an input type that accepts GetPolicyInternetServiceSrcCustomGroupArgs and GetPolicyInternetServiceSrcCustomGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcCustomGroupInput` via:
//
//	GetPolicyInternetServiceSrcCustomGroupArgs{...}
type GetPolicyInternetServiceSrcCustomGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcCustomGroupOutput() GetPolicyInternetServiceSrcCustomGroupOutput
	ToGetPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Context) GetPolicyInternetServiceSrcCustomGroupOutput
}

type GetPolicyInternetServiceSrcCustomGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceSrcCustomGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcCustomGroupArgs) ToGetPolicyInternetServiceSrcCustomGroupOutput() GetPolicyInternetServiceSrcCustomGroupOutput {
	return i.ToGetPolicyInternetServiceSrcCustomGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcCustomGroupArgs) ToGetPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcCustomGroupOutput)
}

// GetPolicyInternetServiceSrcCustomGroupArrayInput is an input type that accepts GetPolicyInternetServiceSrcCustomGroupArray and GetPolicyInternetServiceSrcCustomGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcCustomGroupArrayInput` via:
//
//	GetPolicyInternetServiceSrcCustomGroupArray{ GetPolicyInternetServiceSrcCustomGroupArgs{...} }
type GetPolicyInternetServiceSrcCustomGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcCustomGroupArrayOutput() GetPolicyInternetServiceSrcCustomGroupArrayOutput
	ToGetPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcCustomGroupArrayOutput
}

type GetPolicyInternetServiceSrcCustomGroupArray []GetPolicyInternetServiceSrcCustomGroupInput

func (GetPolicyInternetServiceSrcCustomGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcCustomGroupArray) ToGetPolicyInternetServiceSrcCustomGroupArrayOutput() GetPolicyInternetServiceSrcCustomGroupArrayOutput {
	return i.ToGetPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcCustomGroupArray) ToGetPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcCustomGroupArrayOutput)
}

type GetPolicyInternetServiceSrcCustomGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcCustomGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcCustomGroupOutput) ToGetPolicyInternetServiceSrcCustomGroupOutput() GetPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomGroupOutput) ToGetPolicyInternetServiceSrcCustomGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomGroupOutput {
	return o
}

// Application group names.
func (o GetPolicyInternetServiceSrcCustomGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcCustomGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceSrcCustomGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcCustomGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcCustomGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcCustomGroupArrayOutput) ToGetPolicyInternetServiceSrcCustomGroupArrayOutput() GetPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomGroupArrayOutput) ToGetPolicyInternetServiceSrcCustomGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcCustomGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcCustomGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcCustomGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcCustomGroup {
		return vs[0].([]GetPolicyInternetServiceSrcCustomGroup)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcCustomGroupOutput)
}

type GetPolicyInternetServiceSrcGroup struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceSrcGroupInput is an input type that accepts GetPolicyInternetServiceSrcGroupArgs and GetPolicyInternetServiceSrcGroupOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcGroupInput` via:
//
//	GetPolicyInternetServiceSrcGroupArgs{...}
type GetPolicyInternetServiceSrcGroupInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcGroupOutput() GetPolicyInternetServiceSrcGroupOutput
	ToGetPolicyInternetServiceSrcGroupOutputWithContext(context.Context) GetPolicyInternetServiceSrcGroupOutput
}

type GetPolicyInternetServiceSrcGroupArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceSrcGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcGroupArgs) ToGetPolicyInternetServiceSrcGroupOutput() GetPolicyInternetServiceSrcGroupOutput {
	return i.ToGetPolicyInternetServiceSrcGroupOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcGroupArgs) ToGetPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcGroupOutput)
}

// GetPolicyInternetServiceSrcGroupArrayInput is an input type that accepts GetPolicyInternetServiceSrcGroupArray and GetPolicyInternetServiceSrcGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcGroupArrayInput` via:
//
//	GetPolicyInternetServiceSrcGroupArray{ GetPolicyInternetServiceSrcGroupArgs{...} }
type GetPolicyInternetServiceSrcGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcGroupArrayOutput() GetPolicyInternetServiceSrcGroupArrayOutput
	ToGetPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcGroupArrayOutput
}

type GetPolicyInternetServiceSrcGroupArray []GetPolicyInternetServiceSrcGroupInput

func (GetPolicyInternetServiceSrcGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcGroupArray) ToGetPolicyInternetServiceSrcGroupArrayOutput() GetPolicyInternetServiceSrcGroupArrayOutput {
	return i.ToGetPolicyInternetServiceSrcGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcGroupArray) ToGetPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcGroupArrayOutput)
}

type GetPolicyInternetServiceSrcGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcGroupOutput) ToGetPolicyInternetServiceSrcGroupOutput() GetPolicyInternetServiceSrcGroupOutput {
	return o
}

func (o GetPolicyInternetServiceSrcGroupOutput) ToGetPolicyInternetServiceSrcGroupOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcGroupOutput {
	return o
}

// Application group names.
func (o GetPolicyInternetServiceSrcGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceSrcGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcGroup)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcGroupArrayOutput) ToGetPolicyInternetServiceSrcGroupArrayOutput() GetPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcGroupArrayOutput) ToGetPolicyInternetServiceSrcGroupArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcGroupArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcGroup {
		return vs[0].([]GetPolicyInternetServiceSrcGroup)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcGroupOutput)
}

type GetPolicyInternetServiceSrcId struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetPolicyInternetServiceSrcIdInput is an input type that accepts GetPolicyInternetServiceSrcIdArgs and GetPolicyInternetServiceSrcIdOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcIdInput` via:
//
//	GetPolicyInternetServiceSrcIdArgs{...}
type GetPolicyInternetServiceSrcIdInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcIdOutput() GetPolicyInternetServiceSrcIdOutput
	ToGetPolicyInternetServiceSrcIdOutputWithContext(context.Context) GetPolicyInternetServiceSrcIdOutput
}

type GetPolicyInternetServiceSrcIdArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyInternetServiceSrcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcIdArgs) ToGetPolicyInternetServiceSrcIdOutput() GetPolicyInternetServiceSrcIdOutput {
	return i.ToGetPolicyInternetServiceSrcIdOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcIdArgs) ToGetPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcIdOutput)
}

// GetPolicyInternetServiceSrcIdArrayInput is an input type that accepts GetPolicyInternetServiceSrcIdArray and GetPolicyInternetServiceSrcIdArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcIdArrayInput` via:
//
//	GetPolicyInternetServiceSrcIdArray{ GetPolicyInternetServiceSrcIdArgs{...} }
type GetPolicyInternetServiceSrcIdArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcIdArrayOutput() GetPolicyInternetServiceSrcIdArrayOutput
	ToGetPolicyInternetServiceSrcIdArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcIdArrayOutput
}

type GetPolicyInternetServiceSrcIdArray []GetPolicyInternetServiceSrcIdInput

func (GetPolicyInternetServiceSrcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcId)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcIdArray) ToGetPolicyInternetServiceSrcIdArrayOutput() GetPolicyInternetServiceSrcIdArrayOutput {
	return i.ToGetPolicyInternetServiceSrcIdArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcIdArray) ToGetPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcIdArrayOutput)
}

type GetPolicyInternetServiceSrcIdOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcIdOutput) ToGetPolicyInternetServiceSrcIdOutput() GetPolicyInternetServiceSrcIdOutput {
	return o
}

func (o GetPolicyInternetServiceSrcIdOutput) ToGetPolicyInternetServiceSrcIdOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcIdOutput {
	return o
}

// URL category ID.
func (o GetPolicyInternetServiceSrcIdOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcId) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyInternetServiceSrcIdArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcId)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcIdArrayOutput) ToGetPolicyInternetServiceSrcIdArrayOutput() GetPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcIdArrayOutput) ToGetPolicyInternetServiceSrcIdArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcIdArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcIdArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcId {
		return vs[0].([]GetPolicyInternetServiceSrcId)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcIdOutput)
}

type GetPolicyInternetServiceSrcName struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyInternetServiceSrcNameInput is an input type that accepts GetPolicyInternetServiceSrcNameArgs and GetPolicyInternetServiceSrcNameOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcNameInput` via:
//
//	GetPolicyInternetServiceSrcNameArgs{...}
type GetPolicyInternetServiceSrcNameInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcNameOutput() GetPolicyInternetServiceSrcNameOutput
	ToGetPolicyInternetServiceSrcNameOutputWithContext(context.Context) GetPolicyInternetServiceSrcNameOutput
}

type GetPolicyInternetServiceSrcNameArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyInternetServiceSrcNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcNameArgs) ToGetPolicyInternetServiceSrcNameOutput() GetPolicyInternetServiceSrcNameOutput {
	return i.ToGetPolicyInternetServiceSrcNameOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcNameArgs) ToGetPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcNameOutput)
}

// GetPolicyInternetServiceSrcNameArrayInput is an input type that accepts GetPolicyInternetServiceSrcNameArray and GetPolicyInternetServiceSrcNameArrayOutput values.
// You can construct a concrete instance of `GetPolicyInternetServiceSrcNameArrayInput` via:
//
//	GetPolicyInternetServiceSrcNameArray{ GetPolicyInternetServiceSrcNameArgs{...} }
type GetPolicyInternetServiceSrcNameArrayInput interface {
	pulumi.Input

	ToGetPolicyInternetServiceSrcNameArrayOutput() GetPolicyInternetServiceSrcNameArrayOutput
	ToGetPolicyInternetServiceSrcNameArrayOutputWithContext(context.Context) GetPolicyInternetServiceSrcNameArrayOutput
}

type GetPolicyInternetServiceSrcNameArray []GetPolicyInternetServiceSrcNameInput

func (GetPolicyInternetServiceSrcNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcName)(nil)).Elem()
}

func (i GetPolicyInternetServiceSrcNameArray) ToGetPolicyInternetServiceSrcNameArrayOutput() GetPolicyInternetServiceSrcNameArrayOutput {
	return i.ToGetPolicyInternetServiceSrcNameArrayOutputWithContext(context.Background())
}

func (i GetPolicyInternetServiceSrcNameArray) ToGetPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyInternetServiceSrcNameArrayOutput)
}

type GetPolicyInternetServiceSrcNameOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcNameOutput) ToGetPolicyInternetServiceSrcNameOutput() GetPolicyInternetServiceSrcNameOutput {
	return o
}

func (o GetPolicyInternetServiceSrcNameOutput) ToGetPolicyInternetServiceSrcNameOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcNameOutput {
	return o
}

// Application group names.
func (o GetPolicyInternetServiceSrcNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyInternetServiceSrcName) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyInternetServiceSrcNameArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyInternetServiceSrcNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyInternetServiceSrcName)(nil)).Elem()
}

func (o GetPolicyInternetServiceSrcNameArrayOutput) ToGetPolicyInternetServiceSrcNameArrayOutput() GetPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcNameArrayOutput) ToGetPolicyInternetServiceSrcNameArrayOutputWithContext(ctx context.Context) GetPolicyInternetServiceSrcNameArrayOutput {
	return o
}

func (o GetPolicyInternetServiceSrcNameArrayOutput) Index(i pulumi.IntInput) GetPolicyInternetServiceSrcNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyInternetServiceSrcName {
		return vs[0].([]GetPolicyInternetServiceSrcName)[vs[1].(int)]
	}).(GetPolicyInternetServiceSrcNameOutput)
}

type GetPolicyPoolname4 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyPoolname4Input is an input type that accepts GetPolicyPoolname4Args and GetPolicyPoolname4Output values.
// You can construct a concrete instance of `GetPolicyPoolname4Input` via:
//
//	GetPolicyPoolname4Args{...}
type GetPolicyPoolname4Input interface {
	pulumi.Input

	ToGetPolicyPoolname4Output() GetPolicyPoolname4Output
	ToGetPolicyPoolname4OutputWithContext(context.Context) GetPolicyPoolname4Output
}

type GetPolicyPoolname4Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyPoolname4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPoolname4)(nil)).Elem()
}

func (i GetPolicyPoolname4Args) ToGetPolicyPoolname4Output() GetPolicyPoolname4Output {
	return i.ToGetPolicyPoolname4OutputWithContext(context.Background())
}

func (i GetPolicyPoolname4Args) ToGetPolicyPoolname4OutputWithContext(ctx context.Context) GetPolicyPoolname4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPoolname4Output)
}

// GetPolicyPoolname4ArrayInput is an input type that accepts GetPolicyPoolname4Array and GetPolicyPoolname4ArrayOutput values.
// You can construct a concrete instance of `GetPolicyPoolname4ArrayInput` via:
//
//	GetPolicyPoolname4Array{ GetPolicyPoolname4Args{...} }
type GetPolicyPoolname4ArrayInput interface {
	pulumi.Input

	ToGetPolicyPoolname4ArrayOutput() GetPolicyPoolname4ArrayOutput
	ToGetPolicyPoolname4ArrayOutputWithContext(context.Context) GetPolicyPoolname4ArrayOutput
}

type GetPolicyPoolname4Array []GetPolicyPoolname4Input

func (GetPolicyPoolname4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPoolname4)(nil)).Elem()
}

func (i GetPolicyPoolname4Array) ToGetPolicyPoolname4ArrayOutput() GetPolicyPoolname4ArrayOutput {
	return i.ToGetPolicyPoolname4ArrayOutputWithContext(context.Background())
}

func (i GetPolicyPoolname4Array) ToGetPolicyPoolname4ArrayOutputWithContext(ctx context.Context) GetPolicyPoolname4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPoolname4ArrayOutput)
}

type GetPolicyPoolname4Output struct{ *pulumi.OutputState }

func (GetPolicyPoolname4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPoolname4)(nil)).Elem()
}

func (o GetPolicyPoolname4Output) ToGetPolicyPoolname4Output() GetPolicyPoolname4Output {
	return o
}

func (o GetPolicyPoolname4Output) ToGetPolicyPoolname4OutputWithContext(ctx context.Context) GetPolicyPoolname4Output {
	return o
}

// Application group names.
func (o GetPolicyPoolname4Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPoolname4) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyPoolname4ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyPoolname4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPoolname4)(nil)).Elem()
}

func (o GetPolicyPoolname4ArrayOutput) ToGetPolicyPoolname4ArrayOutput() GetPolicyPoolname4ArrayOutput {
	return o
}

func (o GetPolicyPoolname4ArrayOutput) ToGetPolicyPoolname4ArrayOutputWithContext(ctx context.Context) GetPolicyPoolname4ArrayOutput {
	return o
}

func (o GetPolicyPoolname4ArrayOutput) Index(i pulumi.IntInput) GetPolicyPoolname4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyPoolname4 {
		return vs[0].([]GetPolicyPoolname4)[vs[1].(int)]
	}).(GetPolicyPoolname4Output)
}

type GetPolicyPoolname6 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyPoolname6Input is an input type that accepts GetPolicyPoolname6Args and GetPolicyPoolname6Output values.
// You can construct a concrete instance of `GetPolicyPoolname6Input` via:
//
//	GetPolicyPoolname6Args{...}
type GetPolicyPoolname6Input interface {
	pulumi.Input

	ToGetPolicyPoolname6Output() GetPolicyPoolname6Output
	ToGetPolicyPoolname6OutputWithContext(context.Context) GetPolicyPoolname6Output
}

type GetPolicyPoolname6Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyPoolname6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPoolname6)(nil)).Elem()
}

func (i GetPolicyPoolname6Args) ToGetPolicyPoolname6Output() GetPolicyPoolname6Output {
	return i.ToGetPolicyPoolname6OutputWithContext(context.Background())
}

func (i GetPolicyPoolname6Args) ToGetPolicyPoolname6OutputWithContext(ctx context.Context) GetPolicyPoolname6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPoolname6Output)
}

// GetPolicyPoolname6ArrayInput is an input type that accepts GetPolicyPoolname6Array and GetPolicyPoolname6ArrayOutput values.
// You can construct a concrete instance of `GetPolicyPoolname6ArrayInput` via:
//
//	GetPolicyPoolname6Array{ GetPolicyPoolname6Args{...} }
type GetPolicyPoolname6ArrayInput interface {
	pulumi.Input

	ToGetPolicyPoolname6ArrayOutput() GetPolicyPoolname6ArrayOutput
	ToGetPolicyPoolname6ArrayOutputWithContext(context.Context) GetPolicyPoolname6ArrayOutput
}

type GetPolicyPoolname6Array []GetPolicyPoolname6Input

func (GetPolicyPoolname6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPoolname6)(nil)).Elem()
}

func (i GetPolicyPoolname6Array) ToGetPolicyPoolname6ArrayOutput() GetPolicyPoolname6ArrayOutput {
	return i.ToGetPolicyPoolname6ArrayOutputWithContext(context.Background())
}

func (i GetPolicyPoolname6Array) ToGetPolicyPoolname6ArrayOutputWithContext(ctx context.Context) GetPolicyPoolname6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyPoolname6ArrayOutput)
}

type GetPolicyPoolname6Output struct{ *pulumi.OutputState }

func (GetPolicyPoolname6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyPoolname6)(nil)).Elem()
}

func (o GetPolicyPoolname6Output) ToGetPolicyPoolname6Output() GetPolicyPoolname6Output {
	return o
}

func (o GetPolicyPoolname6Output) ToGetPolicyPoolname6OutputWithContext(ctx context.Context) GetPolicyPoolname6Output {
	return o
}

// Application group names.
func (o GetPolicyPoolname6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyPoolname6) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyPoolname6ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyPoolname6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyPoolname6)(nil)).Elem()
}

func (o GetPolicyPoolname6ArrayOutput) ToGetPolicyPoolname6ArrayOutput() GetPolicyPoolname6ArrayOutput {
	return o
}

func (o GetPolicyPoolname6ArrayOutput) ToGetPolicyPoolname6ArrayOutputWithContext(ctx context.Context) GetPolicyPoolname6ArrayOutput {
	return o
}

func (o GetPolicyPoolname6ArrayOutput) Index(i pulumi.IntInput) GetPolicyPoolname6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyPoolname6 {
		return vs[0].([]GetPolicyPoolname6)[vs[1].(int)]
	}).(GetPolicyPoolname6Output)
}

type GetPolicyService struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyServiceInput is an input type that accepts GetPolicyServiceArgs and GetPolicyServiceOutput values.
// You can construct a concrete instance of `GetPolicyServiceInput` via:
//
//	GetPolicyServiceArgs{...}
type GetPolicyServiceInput interface {
	pulumi.Input

	ToGetPolicyServiceOutput() GetPolicyServiceOutput
	ToGetPolicyServiceOutputWithContext(context.Context) GetPolicyServiceOutput
}

type GetPolicyServiceArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyService)(nil)).Elem()
}

func (i GetPolicyServiceArgs) ToGetPolicyServiceOutput() GetPolicyServiceOutput {
	return i.ToGetPolicyServiceOutputWithContext(context.Background())
}

func (i GetPolicyServiceArgs) ToGetPolicyServiceOutputWithContext(ctx context.Context) GetPolicyServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyServiceOutput)
}

// GetPolicyServiceArrayInput is an input type that accepts GetPolicyServiceArray and GetPolicyServiceArrayOutput values.
// You can construct a concrete instance of `GetPolicyServiceArrayInput` via:
//
//	GetPolicyServiceArray{ GetPolicyServiceArgs{...} }
type GetPolicyServiceArrayInput interface {
	pulumi.Input

	ToGetPolicyServiceArrayOutput() GetPolicyServiceArrayOutput
	ToGetPolicyServiceArrayOutputWithContext(context.Context) GetPolicyServiceArrayOutput
}

type GetPolicyServiceArray []GetPolicyServiceInput

func (GetPolicyServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyService)(nil)).Elem()
}

func (i GetPolicyServiceArray) ToGetPolicyServiceArrayOutput() GetPolicyServiceArrayOutput {
	return i.ToGetPolicyServiceArrayOutputWithContext(context.Background())
}

func (i GetPolicyServiceArray) ToGetPolicyServiceArrayOutputWithContext(ctx context.Context) GetPolicyServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyServiceArrayOutput)
}

type GetPolicyServiceOutput struct{ *pulumi.OutputState }

func (GetPolicyServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyService)(nil)).Elem()
}

func (o GetPolicyServiceOutput) ToGetPolicyServiceOutput() GetPolicyServiceOutput {
	return o
}

func (o GetPolicyServiceOutput) ToGetPolicyServiceOutputWithContext(ctx context.Context) GetPolicyServiceOutput {
	return o
}

// Application group names.
func (o GetPolicyServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyService) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyServiceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyService)(nil)).Elem()
}

func (o GetPolicyServiceArrayOutput) ToGetPolicyServiceArrayOutput() GetPolicyServiceArrayOutput {
	return o
}

func (o GetPolicyServiceArrayOutput) ToGetPolicyServiceArrayOutputWithContext(ctx context.Context) GetPolicyServiceArrayOutput {
	return o
}

func (o GetPolicyServiceArrayOutput) Index(i pulumi.IntInput) GetPolicyServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyService {
		return vs[0].([]GetPolicyService)[vs[1].(int)]
	}).(GetPolicyServiceOutput)
}

type GetPolicySrcaddr4 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicySrcaddr4Input is an input type that accepts GetPolicySrcaddr4Args and GetPolicySrcaddr4Output values.
// You can construct a concrete instance of `GetPolicySrcaddr4Input` via:
//
//	GetPolicySrcaddr4Args{...}
type GetPolicySrcaddr4Input interface {
	pulumi.Input

	ToGetPolicySrcaddr4Output() GetPolicySrcaddr4Output
	ToGetPolicySrcaddr4OutputWithContext(context.Context) GetPolicySrcaddr4Output
}

type GetPolicySrcaddr4Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySrcaddr4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr4)(nil)).Elem()
}

func (i GetPolicySrcaddr4Args) ToGetPolicySrcaddr4Output() GetPolicySrcaddr4Output {
	return i.ToGetPolicySrcaddr4OutputWithContext(context.Background())
}

func (i GetPolicySrcaddr4Args) ToGetPolicySrcaddr4OutputWithContext(ctx context.Context) GetPolicySrcaddr4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddr4Output)
}

// GetPolicySrcaddr4ArrayInput is an input type that accepts GetPolicySrcaddr4Array and GetPolicySrcaddr4ArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcaddr4ArrayInput` via:
//
//	GetPolicySrcaddr4Array{ GetPolicySrcaddr4Args{...} }
type GetPolicySrcaddr4ArrayInput interface {
	pulumi.Input

	ToGetPolicySrcaddr4ArrayOutput() GetPolicySrcaddr4ArrayOutput
	ToGetPolicySrcaddr4ArrayOutputWithContext(context.Context) GetPolicySrcaddr4ArrayOutput
}

type GetPolicySrcaddr4Array []GetPolicySrcaddr4Input

func (GetPolicySrcaddr4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr4)(nil)).Elem()
}

func (i GetPolicySrcaddr4Array) ToGetPolicySrcaddr4ArrayOutput() GetPolicySrcaddr4ArrayOutput {
	return i.ToGetPolicySrcaddr4ArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcaddr4Array) ToGetPolicySrcaddr4ArrayOutputWithContext(ctx context.Context) GetPolicySrcaddr4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddr4ArrayOutput)
}

type GetPolicySrcaddr4Output struct{ *pulumi.OutputState }

func (GetPolicySrcaddr4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr4)(nil)).Elem()
}

func (o GetPolicySrcaddr4Output) ToGetPolicySrcaddr4Output() GetPolicySrcaddr4Output {
	return o
}

func (o GetPolicySrcaddr4Output) ToGetPolicySrcaddr4OutputWithContext(ctx context.Context) GetPolicySrcaddr4Output {
	return o
}

// Application group names.
func (o GetPolicySrcaddr4Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySrcaddr4) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySrcaddr4ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcaddr4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr4)(nil)).Elem()
}

func (o GetPolicySrcaddr4ArrayOutput) ToGetPolicySrcaddr4ArrayOutput() GetPolicySrcaddr4ArrayOutput {
	return o
}

func (o GetPolicySrcaddr4ArrayOutput) ToGetPolicySrcaddr4ArrayOutputWithContext(ctx context.Context) GetPolicySrcaddr4ArrayOutput {
	return o
}

func (o GetPolicySrcaddr4ArrayOutput) Index(i pulumi.IntInput) GetPolicySrcaddr4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrcaddr4 {
		return vs[0].([]GetPolicySrcaddr4)[vs[1].(int)]
	}).(GetPolicySrcaddr4Output)
}

type GetPolicySrcaddr6 struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicySrcaddr6Input is an input type that accepts GetPolicySrcaddr6Args and GetPolicySrcaddr6Output values.
// You can construct a concrete instance of `GetPolicySrcaddr6Input` via:
//
//	GetPolicySrcaddr6Args{...}
type GetPolicySrcaddr6Input interface {
	pulumi.Input

	ToGetPolicySrcaddr6Output() GetPolicySrcaddr6Output
	ToGetPolicySrcaddr6OutputWithContext(context.Context) GetPolicySrcaddr6Output
}

type GetPolicySrcaddr6Args struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySrcaddr6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr6)(nil)).Elem()
}

func (i GetPolicySrcaddr6Args) ToGetPolicySrcaddr6Output() GetPolicySrcaddr6Output {
	return i.ToGetPolicySrcaddr6OutputWithContext(context.Background())
}

func (i GetPolicySrcaddr6Args) ToGetPolicySrcaddr6OutputWithContext(ctx context.Context) GetPolicySrcaddr6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddr6Output)
}

// GetPolicySrcaddr6ArrayInput is an input type that accepts GetPolicySrcaddr6Array and GetPolicySrcaddr6ArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcaddr6ArrayInput` via:
//
//	GetPolicySrcaddr6Array{ GetPolicySrcaddr6Args{...} }
type GetPolicySrcaddr6ArrayInput interface {
	pulumi.Input

	ToGetPolicySrcaddr6ArrayOutput() GetPolicySrcaddr6ArrayOutput
	ToGetPolicySrcaddr6ArrayOutputWithContext(context.Context) GetPolicySrcaddr6ArrayOutput
}

type GetPolicySrcaddr6Array []GetPolicySrcaddr6Input

func (GetPolicySrcaddr6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr6)(nil)).Elem()
}

func (i GetPolicySrcaddr6Array) ToGetPolicySrcaddr6ArrayOutput() GetPolicySrcaddr6ArrayOutput {
	return i.ToGetPolicySrcaddr6ArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcaddr6Array) ToGetPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetPolicySrcaddr6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcaddr6ArrayOutput)
}

type GetPolicySrcaddr6Output struct{ *pulumi.OutputState }

func (GetPolicySrcaddr6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcaddr6)(nil)).Elem()
}

func (o GetPolicySrcaddr6Output) ToGetPolicySrcaddr6Output() GetPolicySrcaddr6Output {
	return o
}

func (o GetPolicySrcaddr6Output) ToGetPolicySrcaddr6OutputWithContext(ctx context.Context) GetPolicySrcaddr6Output {
	return o
}

// Application group names.
func (o GetPolicySrcaddr6Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySrcaddr6) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySrcaddr6ArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcaddr6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcaddr6)(nil)).Elem()
}

func (o GetPolicySrcaddr6ArrayOutput) ToGetPolicySrcaddr6ArrayOutput() GetPolicySrcaddr6ArrayOutput {
	return o
}

func (o GetPolicySrcaddr6ArrayOutput) ToGetPolicySrcaddr6ArrayOutputWithContext(ctx context.Context) GetPolicySrcaddr6ArrayOutput {
	return o
}

func (o GetPolicySrcaddr6ArrayOutput) Index(i pulumi.IntInput) GetPolicySrcaddr6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrcaddr6 {
		return vs[0].([]GetPolicySrcaddr6)[vs[1].(int)]
	}).(GetPolicySrcaddr6Output)
}

type GetPolicySrcintf struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicySrcintfInput is an input type that accepts GetPolicySrcintfArgs and GetPolicySrcintfOutput values.
// You can construct a concrete instance of `GetPolicySrcintfInput` via:
//
//	GetPolicySrcintfArgs{...}
type GetPolicySrcintfInput interface {
	pulumi.Input

	ToGetPolicySrcintfOutput() GetPolicySrcintfOutput
	ToGetPolicySrcintfOutputWithContext(context.Context) GetPolicySrcintfOutput
}

type GetPolicySrcintfArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySrcintfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcintf)(nil)).Elem()
}

func (i GetPolicySrcintfArgs) ToGetPolicySrcintfOutput() GetPolicySrcintfOutput {
	return i.ToGetPolicySrcintfOutputWithContext(context.Background())
}

func (i GetPolicySrcintfArgs) ToGetPolicySrcintfOutputWithContext(ctx context.Context) GetPolicySrcintfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcintfOutput)
}

// GetPolicySrcintfArrayInput is an input type that accepts GetPolicySrcintfArray and GetPolicySrcintfArrayOutput values.
// You can construct a concrete instance of `GetPolicySrcintfArrayInput` via:
//
//	GetPolicySrcintfArray{ GetPolicySrcintfArgs{...} }
type GetPolicySrcintfArrayInput interface {
	pulumi.Input

	ToGetPolicySrcintfArrayOutput() GetPolicySrcintfArrayOutput
	ToGetPolicySrcintfArrayOutputWithContext(context.Context) GetPolicySrcintfArrayOutput
}

type GetPolicySrcintfArray []GetPolicySrcintfInput

func (GetPolicySrcintfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcintf)(nil)).Elem()
}

func (i GetPolicySrcintfArray) ToGetPolicySrcintfArrayOutput() GetPolicySrcintfArrayOutput {
	return i.ToGetPolicySrcintfArrayOutputWithContext(context.Background())
}

func (i GetPolicySrcintfArray) ToGetPolicySrcintfArrayOutputWithContext(ctx context.Context) GetPolicySrcintfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySrcintfArrayOutput)
}

type GetPolicySrcintfOutput struct{ *pulumi.OutputState }

func (GetPolicySrcintfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySrcintf)(nil)).Elem()
}

func (o GetPolicySrcintfOutput) ToGetPolicySrcintfOutput() GetPolicySrcintfOutput {
	return o
}

func (o GetPolicySrcintfOutput) ToGetPolicySrcintfOutputWithContext(ctx context.Context) GetPolicySrcintfOutput {
	return o
}

// Application group names.
func (o GetPolicySrcintfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySrcintf) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySrcintfArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySrcintfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySrcintf)(nil)).Elem()
}

func (o GetPolicySrcintfArrayOutput) ToGetPolicySrcintfArrayOutput() GetPolicySrcintfArrayOutput {
	return o
}

func (o GetPolicySrcintfArrayOutput) ToGetPolicySrcintfArrayOutputWithContext(ctx context.Context) GetPolicySrcintfArrayOutput {
	return o
}

func (o GetPolicySrcintfArrayOutput) Index(i pulumi.IntInput) GetPolicySrcintfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySrcintf {
		return vs[0].([]GetPolicySrcintf)[vs[1].(int)]
	}).(GetPolicySrcintfOutput)
}

type GetPolicyUrlCategory struct {
	// URL category ID.
	Id int `pulumi:"id"`
}

// GetPolicyUrlCategoryInput is an input type that accepts GetPolicyUrlCategoryArgs and GetPolicyUrlCategoryOutput values.
// You can construct a concrete instance of `GetPolicyUrlCategoryInput` via:
//
//	GetPolicyUrlCategoryArgs{...}
type GetPolicyUrlCategoryInput interface {
	pulumi.Input

	ToGetPolicyUrlCategoryOutput() GetPolicyUrlCategoryOutput
	ToGetPolicyUrlCategoryOutputWithContext(context.Context) GetPolicyUrlCategoryOutput
}

type GetPolicyUrlCategoryArgs struct {
	// URL category ID.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetPolicyUrlCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyUrlCategory)(nil)).Elem()
}

func (i GetPolicyUrlCategoryArgs) ToGetPolicyUrlCategoryOutput() GetPolicyUrlCategoryOutput {
	return i.ToGetPolicyUrlCategoryOutputWithContext(context.Background())
}

func (i GetPolicyUrlCategoryArgs) ToGetPolicyUrlCategoryOutputWithContext(ctx context.Context) GetPolicyUrlCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyUrlCategoryOutput)
}

// GetPolicyUrlCategoryArrayInput is an input type that accepts GetPolicyUrlCategoryArray and GetPolicyUrlCategoryArrayOutput values.
// You can construct a concrete instance of `GetPolicyUrlCategoryArrayInput` via:
//
//	GetPolicyUrlCategoryArray{ GetPolicyUrlCategoryArgs{...} }
type GetPolicyUrlCategoryArrayInput interface {
	pulumi.Input

	ToGetPolicyUrlCategoryArrayOutput() GetPolicyUrlCategoryArrayOutput
	ToGetPolicyUrlCategoryArrayOutputWithContext(context.Context) GetPolicyUrlCategoryArrayOutput
}

type GetPolicyUrlCategoryArray []GetPolicyUrlCategoryInput

func (GetPolicyUrlCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyUrlCategory)(nil)).Elem()
}

func (i GetPolicyUrlCategoryArray) ToGetPolicyUrlCategoryArrayOutput() GetPolicyUrlCategoryArrayOutput {
	return i.ToGetPolicyUrlCategoryArrayOutputWithContext(context.Background())
}

func (i GetPolicyUrlCategoryArray) ToGetPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) GetPolicyUrlCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyUrlCategoryArrayOutput)
}

type GetPolicyUrlCategoryOutput struct{ *pulumi.OutputState }

func (GetPolicyUrlCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyUrlCategory)(nil)).Elem()
}

func (o GetPolicyUrlCategoryOutput) ToGetPolicyUrlCategoryOutput() GetPolicyUrlCategoryOutput {
	return o
}

func (o GetPolicyUrlCategoryOutput) ToGetPolicyUrlCategoryOutputWithContext(ctx context.Context) GetPolicyUrlCategoryOutput {
	return o
}

// URL category ID.
func (o GetPolicyUrlCategoryOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyUrlCategory) int { return v.Id }).(pulumi.IntOutput)
}

type GetPolicyUrlCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyUrlCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyUrlCategory)(nil)).Elem()
}

func (o GetPolicyUrlCategoryArrayOutput) ToGetPolicyUrlCategoryArrayOutput() GetPolicyUrlCategoryArrayOutput {
	return o
}

func (o GetPolicyUrlCategoryArrayOutput) ToGetPolicyUrlCategoryArrayOutputWithContext(ctx context.Context) GetPolicyUrlCategoryArrayOutput {
	return o
}

func (o GetPolicyUrlCategoryArrayOutput) Index(i pulumi.IntInput) GetPolicyUrlCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyUrlCategory {
		return vs[0].([]GetPolicyUrlCategory)[vs[1].(int)]
	}).(GetPolicyUrlCategoryOutput)
}

type GetPolicyUser struct {
	// Application group names.
	Name string `pulumi:"name"`
}

// GetPolicyUserInput is an input type that accepts GetPolicyUserArgs and GetPolicyUserOutput values.
// You can construct a concrete instance of `GetPolicyUserInput` via:
//
//	GetPolicyUserArgs{...}
type GetPolicyUserInput interface {
	pulumi.Input

	ToGetPolicyUserOutput() GetPolicyUserOutput
	ToGetPolicyUserOutputWithContext(context.Context) GetPolicyUserOutput
}

type GetPolicyUserArgs struct {
	// Application group names.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyUser)(nil)).Elem()
}

func (i GetPolicyUserArgs) ToGetPolicyUserOutput() GetPolicyUserOutput {
	return i.ToGetPolicyUserOutputWithContext(context.Background())
}

func (i GetPolicyUserArgs) ToGetPolicyUserOutputWithContext(ctx context.Context) GetPolicyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyUserOutput)
}

// GetPolicyUserArrayInput is an input type that accepts GetPolicyUserArray and GetPolicyUserArrayOutput values.
// You can construct a concrete instance of `GetPolicyUserArrayInput` via:
//
//	GetPolicyUserArray{ GetPolicyUserArgs{...} }
type GetPolicyUserArrayInput interface {
	pulumi.Input

	ToGetPolicyUserArrayOutput() GetPolicyUserArrayOutput
	ToGetPolicyUserArrayOutputWithContext(context.Context) GetPolicyUserArrayOutput
}

type GetPolicyUserArray []GetPolicyUserInput

func (GetPolicyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyUser)(nil)).Elem()
}

func (i GetPolicyUserArray) ToGetPolicyUserArrayOutput() GetPolicyUserArrayOutput {
	return i.ToGetPolicyUserArrayOutputWithContext(context.Background())
}

func (i GetPolicyUserArray) ToGetPolicyUserArrayOutputWithContext(ctx context.Context) GetPolicyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyUserArrayOutput)
}

type GetPolicyUserOutput struct{ *pulumi.OutputState }

func (GetPolicyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyUser)(nil)).Elem()
}

func (o GetPolicyUserOutput) ToGetPolicyUserOutput() GetPolicyUserOutput {
	return o
}

func (o GetPolicyUserOutput) ToGetPolicyUserOutputWithContext(ctx context.Context) GetPolicyUserOutput {
	return o
}

// Application group names.
func (o GetPolicyUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicyUserArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyUser)(nil)).Elem()
}

func (o GetPolicyUserArrayOutput) ToGetPolicyUserArrayOutput() GetPolicyUserArrayOutput {
	return o
}

func (o GetPolicyUserArrayOutput) ToGetPolicyUserArrayOutputWithContext(ctx context.Context) GetPolicyUserArrayOutput {
	return o
}

func (o GetPolicyUserArrayOutput) Index(i pulumi.IntInput) GetPolicyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyUser {
		return vs[0].([]GetPolicyUser)[vs[1].(int)]
	}).(GetPolicyUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAppCategoryInput)(nil)).Elem(), PolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAppCategoryArrayInput)(nil)).Elem(), PolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAppGroupInput)(nil)).Elem(), PolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAppGroupArrayInput)(nil)).Elem(), PolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyApplicationInput)(nil)).Elem(), PolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyApplicationArrayInput)(nil)).Elem(), PolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddr4Input)(nil)).Elem(), PolicyDstaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddr4ArrayInput)(nil)).Elem(), PolicyDstaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddr6Input)(nil)).Elem(), PolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstaddr6ArrayInput)(nil)).Elem(), PolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstintfInput)(nil)).Elem(), PolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyDstintfArrayInput)(nil)).Elem(), PolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyFssoGroupInput)(nil)).Elem(), PolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyFssoGroupArrayInput)(nil)).Elem(), PolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupInput)(nil)).Elem(), PolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupArrayInput)(nil)).Elem(), PolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomInput)(nil)).Elem(), PolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomArrayInput)(nil)).Elem(), PolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomGroupInput)(nil)).Elem(), PolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), PolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceGroupInput)(nil)).Elem(), PolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceGroupArrayInput)(nil)).Elem(), PolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceIdInput)(nil)).Elem(), PolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceIdArrayInput)(nil)).Elem(), PolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceNameInput)(nil)).Elem(), PolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceNameArrayInput)(nil)).Elem(), PolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcCustomInput)(nil)).Elem(), PolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), PolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), PolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), PolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcGroupInput)(nil)).Elem(), PolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), PolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcIdInput)(nil)).Elem(), PolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), PolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcNameInput)(nil)).Elem(), PolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), PolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPoolname4Input)(nil)).Elem(), PolicyPoolname4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPoolname4ArrayInput)(nil)).Elem(), PolicyPoolname4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPoolname6Input)(nil)).Elem(), PolicyPoolname6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyPoolname6ArrayInput)(nil)).Elem(), PolicyPoolname6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyServiceInput)(nil)).Elem(), PolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyServiceArrayInput)(nil)).Elem(), PolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddr4Input)(nil)).Elem(), PolicySrcaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddr4ArrayInput)(nil)).Elem(), PolicySrcaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddr6Input)(nil)).Elem(), PolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcaddr6ArrayInput)(nil)).Elem(), PolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcintfInput)(nil)).Elem(), PolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySrcintfArrayInput)(nil)).Elem(), PolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyUrlCategoryInput)(nil)).Elem(), PolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyUrlCategoryArrayInput)(nil)).Elem(), PolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyUserInput)(nil)).Elem(), PolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyUserArrayInput)(nil)).Elem(), PolicyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAppCategoryInput)(nil)).Elem(), GetPolicyAppCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAppCategoryArrayInput)(nil)).Elem(), GetPolicyAppCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAppGroupInput)(nil)).Elem(), GetPolicyAppGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAppGroupArrayInput)(nil)).Elem(), GetPolicyAppGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyApplicationInput)(nil)).Elem(), GetPolicyApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyApplicationArrayInput)(nil)).Elem(), GetPolicyApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddr4Input)(nil)).Elem(), GetPolicyDstaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddr4ArrayInput)(nil)).Elem(), GetPolicyDstaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddr6Input)(nil)).Elem(), GetPolicyDstaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstaddr6ArrayInput)(nil)).Elem(), GetPolicyDstaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstintfInput)(nil)).Elem(), GetPolicyDstintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDstintfArrayInput)(nil)).Elem(), GetPolicyDstintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyFssoGroupInput)(nil)).Elem(), GetPolicyFssoGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyFssoGroupArrayInput)(nil)).Elem(), GetPolicyFssoGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupInput)(nil)).Elem(), GetPolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyGroupArrayInput)(nil)).Elem(), GetPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomInput)(nil)).Elem(), GetPolicyInternetServiceCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomArrayInput)(nil)).Elem(), GetPolicyInternetServiceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomGroupInput)(nil)).Elem(), GetPolicyInternetServiceCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceCustomGroupArrayInput)(nil)).Elem(), GetPolicyInternetServiceCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceGroupInput)(nil)).Elem(), GetPolicyInternetServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceGroupArrayInput)(nil)).Elem(), GetPolicyInternetServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceIdInput)(nil)).Elem(), GetPolicyInternetServiceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceIdArrayInput)(nil)).Elem(), GetPolicyInternetServiceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceNameInput)(nil)).Elem(), GetPolicyInternetServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceNameArrayInput)(nil)).Elem(), GetPolicyInternetServiceNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcCustomInput)(nil)).Elem(), GetPolicyInternetServiceSrcCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcCustomArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcCustomGroupInput)(nil)).Elem(), GetPolicyInternetServiceSrcCustomGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcCustomGroupArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcCustomGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcGroupInput)(nil)).Elem(), GetPolicyInternetServiceSrcGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcGroupArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcIdInput)(nil)).Elem(), GetPolicyInternetServiceSrcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcIdArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcNameInput)(nil)).Elem(), GetPolicyInternetServiceSrcNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyInternetServiceSrcNameArrayInput)(nil)).Elem(), GetPolicyInternetServiceSrcNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPoolname4Input)(nil)).Elem(), GetPolicyPoolname4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPoolname4ArrayInput)(nil)).Elem(), GetPolicyPoolname4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPoolname6Input)(nil)).Elem(), GetPolicyPoolname6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyPoolname6ArrayInput)(nil)).Elem(), GetPolicyPoolname6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyServiceInput)(nil)).Elem(), GetPolicyServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyServiceArrayInput)(nil)).Elem(), GetPolicyServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddr4Input)(nil)).Elem(), GetPolicySrcaddr4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddr4ArrayInput)(nil)).Elem(), GetPolicySrcaddr4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddr6Input)(nil)).Elem(), GetPolicySrcaddr6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcaddr6ArrayInput)(nil)).Elem(), GetPolicySrcaddr6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcintfInput)(nil)).Elem(), GetPolicySrcintfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySrcintfArrayInput)(nil)).Elem(), GetPolicySrcintfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyUrlCategoryInput)(nil)).Elem(), GetPolicyUrlCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyUrlCategoryArrayInput)(nil)).Elem(), GetPolicyUrlCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyUserInput)(nil)).Elem(), GetPolicyUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyUserArrayInput)(nil)).Elem(), GetPolicyUserArray{})
	pulumi.RegisterOutputType(PolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(PolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(PolicyAppGroupOutput{})
	pulumi.RegisterOutputType(PolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyApplicationOutput{})
	pulumi.RegisterOutputType(PolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(PolicyDstaddr4Output{})
	pulumi.RegisterOutputType(PolicyDstaddr4ArrayOutput{})
	pulumi.RegisterOutputType(PolicyDstaddr6Output{})
	pulumi.RegisterOutputType(PolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(PolicyDstintfOutput{})
	pulumi.RegisterOutputType(PolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(PolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(PolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupOutput{})
	pulumi.RegisterOutputType(PolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(PolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(PolicyPoolname4Output{})
	pulumi.RegisterOutputType(PolicyPoolname4ArrayOutput{})
	pulumi.RegisterOutputType(PolicyPoolname6Output{})
	pulumi.RegisterOutputType(PolicyPoolname6ArrayOutput{})
	pulumi.RegisterOutputType(PolicyServiceOutput{})
	pulumi.RegisterOutputType(PolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcaddr4Output{})
	pulumi.RegisterOutputType(PolicySrcaddr4ArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcaddr6Output{})
	pulumi.RegisterOutputType(PolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(PolicySrcintfOutput{})
	pulumi.RegisterOutputType(PolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(PolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(PolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(PolicyUserOutput{})
	pulumi.RegisterOutputType(PolicyUserArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyAppCategoryOutput{})
	pulumi.RegisterOutputType(GetPolicyAppCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyAppGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyAppGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyApplicationOutput{})
	pulumi.RegisterOutputType(GetPolicyApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDstaddr4Output{})
	pulumi.RegisterOutputType(GetPolicyDstaddr4ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDstaddr6Output{})
	pulumi.RegisterOutputType(GetPolicyDstaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDstintfOutput{})
	pulumi.RegisterOutputType(GetPolicyDstintfArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyFssoGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyFssoGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceIdOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceIdArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceNameOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceNameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcCustomOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcCustomArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcCustomGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcCustomGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcIdOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcIdArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcNameOutput{})
	pulumi.RegisterOutputType(GetPolicyInternetServiceSrcNameArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyPoolname4Output{})
	pulumi.RegisterOutputType(GetPolicyPoolname4ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyPoolname6Output{})
	pulumi.RegisterOutputType(GetPolicyPoolname6ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyServiceOutput{})
	pulumi.RegisterOutputType(GetPolicyServiceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcaddr4Output{})
	pulumi.RegisterOutputType(GetPolicySrcaddr4ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcaddr6Output{})
	pulumi.RegisterOutputType(GetPolicySrcaddr6ArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySrcintfOutput{})
	pulumi.RegisterOutputType(GetPolicySrcintfArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyUrlCategoryOutput{})
	pulumi.RegisterOutputType(GetPolicyUrlCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyUserOutput{})
	pulumi.RegisterOutputType(GetPolicyUserArrayOutput{})
}
