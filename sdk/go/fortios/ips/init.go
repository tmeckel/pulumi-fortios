// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ips

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-fortios/sdk/go/fortios"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "fortios:ips/custom:Custom":
		r = &Custom{}
	case "fortios:ips/decoder:Decoder":
		r = &Decoder{}
	case "fortios:ips/global:Global":
		r = &Global{}
	case "fortios:ips/rule:Rule":
		r = &Rule{}
	case "fortios:ips/rulesettings:Rulesettings":
		r = &Rulesettings{}
	case "fortios:ips/sensor:Sensor":
		r = &Sensor{}
	case "fortios:ips/settings:Settings":
		r = &Settings{}
	case "fortios:ips/viewmap:Viewmap":
		r = &Viewmap{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := fortios.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"fortios",
		"ips/custom",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"ips/decoder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"ips/global",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"ips/rule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"ips/rulesettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"ips/sensor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"ips/settings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"fortios",
		"ips/viewmap",
		&module{version},
	)
}
