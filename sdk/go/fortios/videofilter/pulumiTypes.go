// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package videofilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProfileFortiguardCategory struct {
	// Configure VideoFilter FortiGuard category. The structure of `filters` block is documented below.
	Filters []ProfileFortiguardCategoryFilter `pulumi:"filters"`
}

// ProfileFortiguardCategoryInput is an input type that accepts ProfileFortiguardCategoryArgs and ProfileFortiguardCategoryOutput values.
// You can construct a concrete instance of `ProfileFortiguardCategoryInput` via:
//
//	ProfileFortiguardCategoryArgs{...}
type ProfileFortiguardCategoryInput interface {
	pulumi.Input

	ToProfileFortiguardCategoryOutput() ProfileFortiguardCategoryOutput
	ToProfileFortiguardCategoryOutputWithContext(context.Context) ProfileFortiguardCategoryOutput
}

type ProfileFortiguardCategoryArgs struct {
	// Configure VideoFilter FortiGuard category. The structure of `filters` block is documented below.
	Filters ProfileFortiguardCategoryFilterArrayInput `pulumi:"filters"`
}

func (ProfileFortiguardCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFortiguardCategory)(nil)).Elem()
}

func (i ProfileFortiguardCategoryArgs) ToProfileFortiguardCategoryOutput() ProfileFortiguardCategoryOutput {
	return i.ToProfileFortiguardCategoryOutputWithContext(context.Background())
}

func (i ProfileFortiguardCategoryArgs) ToProfileFortiguardCategoryOutputWithContext(ctx context.Context) ProfileFortiguardCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFortiguardCategoryOutput)
}

func (i ProfileFortiguardCategoryArgs) ToProfileFortiguardCategoryPtrOutput() ProfileFortiguardCategoryPtrOutput {
	return i.ToProfileFortiguardCategoryPtrOutputWithContext(context.Background())
}

func (i ProfileFortiguardCategoryArgs) ToProfileFortiguardCategoryPtrOutputWithContext(ctx context.Context) ProfileFortiguardCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFortiguardCategoryOutput).ToProfileFortiguardCategoryPtrOutputWithContext(ctx)
}

// ProfileFortiguardCategoryPtrInput is an input type that accepts ProfileFortiguardCategoryArgs, ProfileFortiguardCategoryPtr and ProfileFortiguardCategoryPtrOutput values.
// You can construct a concrete instance of `ProfileFortiguardCategoryPtrInput` via:
//
//	        ProfileFortiguardCategoryArgs{...}
//
//	or:
//
//	        nil
type ProfileFortiguardCategoryPtrInput interface {
	pulumi.Input

	ToProfileFortiguardCategoryPtrOutput() ProfileFortiguardCategoryPtrOutput
	ToProfileFortiguardCategoryPtrOutputWithContext(context.Context) ProfileFortiguardCategoryPtrOutput
}

type profileFortiguardCategoryPtrType ProfileFortiguardCategoryArgs

func ProfileFortiguardCategoryPtr(v *ProfileFortiguardCategoryArgs) ProfileFortiguardCategoryPtrInput {
	return (*profileFortiguardCategoryPtrType)(v)
}

func (*profileFortiguardCategoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileFortiguardCategory)(nil)).Elem()
}

func (i *profileFortiguardCategoryPtrType) ToProfileFortiguardCategoryPtrOutput() ProfileFortiguardCategoryPtrOutput {
	return i.ToProfileFortiguardCategoryPtrOutputWithContext(context.Background())
}

func (i *profileFortiguardCategoryPtrType) ToProfileFortiguardCategoryPtrOutputWithContext(ctx context.Context) ProfileFortiguardCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFortiguardCategoryPtrOutput)
}

type ProfileFortiguardCategoryOutput struct{ *pulumi.OutputState }

func (ProfileFortiguardCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFortiguardCategory)(nil)).Elem()
}

func (o ProfileFortiguardCategoryOutput) ToProfileFortiguardCategoryOutput() ProfileFortiguardCategoryOutput {
	return o
}

func (o ProfileFortiguardCategoryOutput) ToProfileFortiguardCategoryOutputWithContext(ctx context.Context) ProfileFortiguardCategoryOutput {
	return o
}

func (o ProfileFortiguardCategoryOutput) ToProfileFortiguardCategoryPtrOutput() ProfileFortiguardCategoryPtrOutput {
	return o.ToProfileFortiguardCategoryPtrOutputWithContext(context.Background())
}

func (o ProfileFortiguardCategoryOutput) ToProfileFortiguardCategoryPtrOutputWithContext(ctx context.Context) ProfileFortiguardCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileFortiguardCategory) *ProfileFortiguardCategory {
		return &v
	}).(ProfileFortiguardCategoryPtrOutput)
}

// Configure VideoFilter FortiGuard category. The structure of `filters` block is documented below.
func (o ProfileFortiguardCategoryOutput) Filters() ProfileFortiguardCategoryFilterArrayOutput {
	return o.ApplyT(func(v ProfileFortiguardCategory) []ProfileFortiguardCategoryFilter { return v.Filters }).(ProfileFortiguardCategoryFilterArrayOutput)
}

type ProfileFortiguardCategoryPtrOutput struct{ *pulumi.OutputState }

func (ProfileFortiguardCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileFortiguardCategory)(nil)).Elem()
}

func (o ProfileFortiguardCategoryPtrOutput) ToProfileFortiguardCategoryPtrOutput() ProfileFortiguardCategoryPtrOutput {
	return o
}

func (o ProfileFortiguardCategoryPtrOutput) ToProfileFortiguardCategoryPtrOutputWithContext(ctx context.Context) ProfileFortiguardCategoryPtrOutput {
	return o
}

func (o ProfileFortiguardCategoryPtrOutput) Elem() ProfileFortiguardCategoryOutput {
	return o.ApplyT(func(v *ProfileFortiguardCategory) ProfileFortiguardCategory {
		if v != nil {
			return *v
		}
		var ret ProfileFortiguardCategory
		return ret
	}).(ProfileFortiguardCategoryOutput)
}

// Configure VideoFilter FortiGuard category. The structure of `filters` block is documented below.
func (o ProfileFortiguardCategoryPtrOutput) Filters() ProfileFortiguardCategoryFilterArrayOutput {
	return o.ApplyT(func(v *ProfileFortiguardCategory) []ProfileFortiguardCategoryFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(ProfileFortiguardCategoryFilterArrayOutput)
}

type ProfileFortiguardCategoryFilter struct {
	// VideoFilter action. Valid values: `allow`, `monitor`, `block`.
	Action *string `pulumi:"action"`
	// Category ID.
	CategoryId *int `pulumi:"categoryId"`
	// ID.
	Id *int `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
}

// ProfileFortiguardCategoryFilterInput is an input type that accepts ProfileFortiguardCategoryFilterArgs and ProfileFortiguardCategoryFilterOutput values.
// You can construct a concrete instance of `ProfileFortiguardCategoryFilterInput` via:
//
//	ProfileFortiguardCategoryFilterArgs{...}
type ProfileFortiguardCategoryFilterInput interface {
	pulumi.Input

	ToProfileFortiguardCategoryFilterOutput() ProfileFortiguardCategoryFilterOutput
	ToProfileFortiguardCategoryFilterOutputWithContext(context.Context) ProfileFortiguardCategoryFilterOutput
}

type ProfileFortiguardCategoryFilterArgs struct {
	// VideoFilter action. Valid values: `allow`, `monitor`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Category ID.
	CategoryId pulumi.IntPtrInput `pulumi:"categoryId"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
}

func (ProfileFortiguardCategoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFortiguardCategoryFilter)(nil)).Elem()
}

func (i ProfileFortiguardCategoryFilterArgs) ToProfileFortiguardCategoryFilterOutput() ProfileFortiguardCategoryFilterOutput {
	return i.ToProfileFortiguardCategoryFilterOutputWithContext(context.Background())
}

func (i ProfileFortiguardCategoryFilterArgs) ToProfileFortiguardCategoryFilterOutputWithContext(ctx context.Context) ProfileFortiguardCategoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFortiguardCategoryFilterOutput)
}

// ProfileFortiguardCategoryFilterArrayInput is an input type that accepts ProfileFortiguardCategoryFilterArray and ProfileFortiguardCategoryFilterArrayOutput values.
// You can construct a concrete instance of `ProfileFortiguardCategoryFilterArrayInput` via:
//
//	ProfileFortiguardCategoryFilterArray{ ProfileFortiguardCategoryFilterArgs{...} }
type ProfileFortiguardCategoryFilterArrayInput interface {
	pulumi.Input

	ToProfileFortiguardCategoryFilterArrayOutput() ProfileFortiguardCategoryFilterArrayOutput
	ToProfileFortiguardCategoryFilterArrayOutputWithContext(context.Context) ProfileFortiguardCategoryFilterArrayOutput
}

type ProfileFortiguardCategoryFilterArray []ProfileFortiguardCategoryFilterInput

func (ProfileFortiguardCategoryFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFortiguardCategoryFilter)(nil)).Elem()
}

func (i ProfileFortiguardCategoryFilterArray) ToProfileFortiguardCategoryFilterArrayOutput() ProfileFortiguardCategoryFilterArrayOutput {
	return i.ToProfileFortiguardCategoryFilterArrayOutputWithContext(context.Background())
}

func (i ProfileFortiguardCategoryFilterArray) ToProfileFortiguardCategoryFilterArrayOutputWithContext(ctx context.Context) ProfileFortiguardCategoryFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFortiguardCategoryFilterArrayOutput)
}

type ProfileFortiguardCategoryFilterOutput struct{ *pulumi.OutputState }

func (ProfileFortiguardCategoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFortiguardCategoryFilter)(nil)).Elem()
}

func (o ProfileFortiguardCategoryFilterOutput) ToProfileFortiguardCategoryFilterOutput() ProfileFortiguardCategoryFilterOutput {
	return o
}

func (o ProfileFortiguardCategoryFilterOutput) ToProfileFortiguardCategoryFilterOutputWithContext(ctx context.Context) ProfileFortiguardCategoryFilterOutput {
	return o
}

// VideoFilter action. Valid values: `allow`, `monitor`, `block`.
func (o ProfileFortiguardCategoryFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFortiguardCategoryFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Category ID.
func (o ProfileFortiguardCategoryFilterOutput) CategoryId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileFortiguardCategoryFilter) *int { return v.CategoryId }).(pulumi.IntPtrOutput)
}

// ID.
func (o ProfileFortiguardCategoryFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileFortiguardCategoryFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o ProfileFortiguardCategoryFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFortiguardCategoryFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

type ProfileFortiguardCategoryFilterArrayOutput struct{ *pulumi.OutputState }

func (ProfileFortiguardCategoryFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFortiguardCategoryFilter)(nil)).Elem()
}

func (o ProfileFortiguardCategoryFilterArrayOutput) ToProfileFortiguardCategoryFilterArrayOutput() ProfileFortiguardCategoryFilterArrayOutput {
	return o
}

func (o ProfileFortiguardCategoryFilterArrayOutput) ToProfileFortiguardCategoryFilterArrayOutputWithContext(ctx context.Context) ProfileFortiguardCategoryFilterArrayOutput {
	return o
}

func (o ProfileFortiguardCategoryFilterArrayOutput) Index(i pulumi.IntInput) ProfileFortiguardCategoryFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileFortiguardCategoryFilter {
		return vs[0].([]ProfileFortiguardCategoryFilter)[vs[1].(int)]
	}).(ProfileFortiguardCategoryFilterOutput)
}

type YoutubechannelfilterEntry struct {
	// YouTube channel filter action. Valid values: `allow`, `monitor`, `block`.
	Action *string `pulumi:"action"`
	// Channel ID.
	ChannelId *string `pulumi:"channelId"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// ID.
	Id *int `pulumi:"id"`
}

// YoutubechannelfilterEntryInput is an input type that accepts YoutubechannelfilterEntryArgs and YoutubechannelfilterEntryOutput values.
// You can construct a concrete instance of `YoutubechannelfilterEntryInput` via:
//
//	YoutubechannelfilterEntryArgs{...}
type YoutubechannelfilterEntryInput interface {
	pulumi.Input

	ToYoutubechannelfilterEntryOutput() YoutubechannelfilterEntryOutput
	ToYoutubechannelfilterEntryOutputWithContext(context.Context) YoutubechannelfilterEntryOutput
}

type YoutubechannelfilterEntryArgs struct {
	// YouTube channel filter action. Valid values: `allow`, `monitor`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Channel ID.
	ChannelId pulumi.StringPtrInput `pulumi:"channelId"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (YoutubechannelfilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YoutubechannelfilterEntry)(nil)).Elem()
}

func (i YoutubechannelfilterEntryArgs) ToYoutubechannelfilterEntryOutput() YoutubechannelfilterEntryOutput {
	return i.ToYoutubechannelfilterEntryOutputWithContext(context.Background())
}

func (i YoutubechannelfilterEntryArgs) ToYoutubechannelfilterEntryOutputWithContext(ctx context.Context) YoutubechannelfilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YoutubechannelfilterEntryOutput)
}

// YoutubechannelfilterEntryArrayInput is an input type that accepts YoutubechannelfilterEntryArray and YoutubechannelfilterEntryArrayOutput values.
// You can construct a concrete instance of `YoutubechannelfilterEntryArrayInput` via:
//
//	YoutubechannelfilterEntryArray{ YoutubechannelfilterEntryArgs{...} }
type YoutubechannelfilterEntryArrayInput interface {
	pulumi.Input

	ToYoutubechannelfilterEntryArrayOutput() YoutubechannelfilterEntryArrayOutput
	ToYoutubechannelfilterEntryArrayOutputWithContext(context.Context) YoutubechannelfilterEntryArrayOutput
}

type YoutubechannelfilterEntryArray []YoutubechannelfilterEntryInput

func (YoutubechannelfilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]YoutubechannelfilterEntry)(nil)).Elem()
}

func (i YoutubechannelfilterEntryArray) ToYoutubechannelfilterEntryArrayOutput() YoutubechannelfilterEntryArrayOutput {
	return i.ToYoutubechannelfilterEntryArrayOutputWithContext(context.Background())
}

func (i YoutubechannelfilterEntryArray) ToYoutubechannelfilterEntryArrayOutputWithContext(ctx context.Context) YoutubechannelfilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YoutubechannelfilterEntryArrayOutput)
}

type YoutubechannelfilterEntryOutput struct{ *pulumi.OutputState }

func (YoutubechannelfilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YoutubechannelfilterEntry)(nil)).Elem()
}

func (o YoutubechannelfilterEntryOutput) ToYoutubechannelfilterEntryOutput() YoutubechannelfilterEntryOutput {
	return o
}

func (o YoutubechannelfilterEntryOutput) ToYoutubechannelfilterEntryOutputWithContext(ctx context.Context) YoutubechannelfilterEntryOutput {
	return o
}

// YouTube channel filter action. Valid values: `allow`, `monitor`, `block`.
func (o YoutubechannelfilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v YoutubechannelfilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Channel ID.
func (o YoutubechannelfilterEntryOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v YoutubechannelfilterEntry) *string { return v.ChannelId }).(pulumi.StringPtrOutput)
}

// Comment.
func (o YoutubechannelfilterEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v YoutubechannelfilterEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// ID.
func (o YoutubechannelfilterEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v YoutubechannelfilterEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type YoutubechannelfilterEntryArrayOutput struct{ *pulumi.OutputState }

func (YoutubechannelfilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]YoutubechannelfilterEntry)(nil)).Elem()
}

func (o YoutubechannelfilterEntryArrayOutput) ToYoutubechannelfilterEntryArrayOutput() YoutubechannelfilterEntryArrayOutput {
	return o
}

func (o YoutubechannelfilterEntryArrayOutput) ToYoutubechannelfilterEntryArrayOutputWithContext(ctx context.Context) YoutubechannelfilterEntryArrayOutput {
	return o
}

func (o YoutubechannelfilterEntryArrayOutput) Index(i pulumi.IntInput) YoutubechannelfilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) YoutubechannelfilterEntry {
		return vs[0].([]YoutubechannelfilterEntry)[vs[1].(int)]
	}).(YoutubechannelfilterEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFortiguardCategoryInput)(nil)).Elem(), ProfileFortiguardCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFortiguardCategoryPtrInput)(nil)).Elem(), ProfileFortiguardCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFortiguardCategoryFilterInput)(nil)).Elem(), ProfileFortiguardCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFortiguardCategoryFilterArrayInput)(nil)).Elem(), ProfileFortiguardCategoryFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*YoutubechannelfilterEntryInput)(nil)).Elem(), YoutubechannelfilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*YoutubechannelfilterEntryArrayInput)(nil)).Elem(), YoutubechannelfilterEntryArray{})
	pulumi.RegisterOutputType(ProfileFortiguardCategoryOutput{})
	pulumi.RegisterOutputType(ProfileFortiguardCategoryPtrOutput{})
	pulumi.RegisterOutputType(ProfileFortiguardCategoryFilterOutput{})
	pulumi.RegisterOutputType(ProfileFortiguardCategoryFilterArrayOutput{})
	pulumi.RegisterOutputType(YoutubechannelfilterEntryOutput{})
	pulumi.RegisterOutputType(YoutubechannelfilterEntryArrayOutput{})
}
