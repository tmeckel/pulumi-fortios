// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios firewall multicastaddress
func LookupMulticastaddress(ctx *pulumi.Context, args *LookupMulticastaddressArgs, opts ...pulumi.InvokeOption) (*LookupMulticastaddressResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupMulticastaddressResult
	err := ctx.Invoke("fortios:firewall/getMulticastaddress:getMulticastaddress", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMulticastaddress.
type LookupMulticastaddressArgs struct {
	// Specify the name of the desired firewall multicastaddress.
	Name string `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getMulticastaddress.
type LookupMulticastaddressResult struct {
	// Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
	AssociatedInterface string `pulumi:"associatedInterface"`
	// Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
	Color int `pulumi:"color"`
	// Comment.
	Comment string `pulumi:"comment"`
	// Final IPv4 address (inclusive) in the range for the address.
	EndIp string `pulumi:"endIp"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Tag name.
	Name string `pulumi:"name"`
	// First IPv4 address (inclusive) in the range for the address.
	StartIp string `pulumi:"startIp"`
	// Broadcast address and subnet.
	Subnet string `pulumi:"subnet"`
	// Config object tagging. The structure of `tagging` block is documented below.
	Taggings []GetMulticastaddressTagging `pulumi:"taggings"`
	// Type of address object: multicast IP address range or broadcast IP/mask to be treated as a multicast address.
	Type      string  `pulumi:"type"`
	Vdomparam *string `pulumi:"vdomparam"`
	// Enable/disable visibility of the multicast address on the GUI.
	Visibility string `pulumi:"visibility"`
}

func LookupMulticastaddressOutput(ctx *pulumi.Context, args LookupMulticastaddressOutputArgs, opts ...pulumi.InvokeOption) LookupMulticastaddressResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMulticastaddressResult, error) {
			args := v.(LookupMulticastaddressArgs)
			r, err := LookupMulticastaddress(ctx, &args, opts...)
			var s LookupMulticastaddressResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMulticastaddressResultOutput)
}

// A collection of arguments for invoking getMulticastaddress.
type LookupMulticastaddressOutputArgs struct {
	// Specify the name of the desired firewall multicastaddress.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupMulticastaddressOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMulticastaddressArgs)(nil)).Elem()
}

// A collection of values returned by getMulticastaddress.
type LookupMulticastaddressResultOutput struct{ *pulumi.OutputState }

func (LookupMulticastaddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMulticastaddressResult)(nil)).Elem()
}

func (o LookupMulticastaddressResultOutput) ToLookupMulticastaddressResultOutput() LookupMulticastaddressResultOutput {
	return o
}

func (o LookupMulticastaddressResultOutput) ToLookupMulticastaddressResultOutputWithContext(ctx context.Context) LookupMulticastaddressResultOutput {
	return o
}

// Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
func (o LookupMulticastaddressResultOutput) AssociatedInterface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.AssociatedInterface }).(pulumi.StringOutput)
}

// Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
func (o LookupMulticastaddressResultOutput) Color() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) int { return v.Color }).(pulumi.IntOutput)
}

// Comment.
func (o LookupMulticastaddressResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.Comment }).(pulumi.StringOutput)
}

// Final IPv4 address (inclusive) in the range for the address.
func (o LookupMulticastaddressResultOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.EndIp }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMulticastaddressResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.Id }).(pulumi.StringOutput)
}

// Tag name.
func (o LookupMulticastaddressResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.Name }).(pulumi.StringOutput)
}

// First IPv4 address (inclusive) in the range for the address.
func (o LookupMulticastaddressResultOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.StartIp }).(pulumi.StringOutput)
}

// Broadcast address and subnet.
func (o LookupMulticastaddressResultOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.Subnet }).(pulumi.StringOutput)
}

// Config object tagging. The structure of `tagging` block is documented below.
func (o LookupMulticastaddressResultOutput) Taggings() GetMulticastaddressTaggingArrayOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) []GetMulticastaddressTagging { return v.Taggings }).(GetMulticastaddressTaggingArrayOutput)
}

// Type of address object: multicast IP address range or broadcast IP/mask to be treated as a multicast address.
func (o LookupMulticastaddressResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupMulticastaddressResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Enable/disable visibility of the multicast address on the GUI.
func (o LookupMulticastaddressResultOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastaddressResult) string { return v.Visibility }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMulticastaddressResultOutput{})
}
