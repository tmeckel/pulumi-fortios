// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios router multicast
func LookupMulticast(ctx *pulumi.Context, args *LookupMulticastArgs, opts ...pulumi.InvokeOption) (*LookupMulticastResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupMulticastResult
	err := ctx.Invoke("fortios:router/getMulticast:getMulticast", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMulticast.
type LookupMulticastArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getMulticast.
type LookupMulticastResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// PIM interfaces. The structure of `interface` block is documented below.
	Interfaces []GetMulticastInterface `pulumi:"interfaces"`
	// Enable/disable IP multicast routing.
	MulticastRouting string `pulumi:"multicastRouting"`
	// PIM sparse-mode global settings. The structure of `pimSmGlobal` block is documented below.
	PimSmGlobals []GetMulticastPimSmGlobal `pulumi:"pimSmGlobals"`
	// Maximum number of multicast routes.
	RouteLimit int `pulumi:"routeLimit"`
	// Generate warnings when the number of multicast routes exceeds this number, must not be greater than route-limit.
	RouteThreshold int     `pulumi:"routeThreshold"`
	Vdomparam      *string `pulumi:"vdomparam"`
}

func LookupMulticastOutput(ctx *pulumi.Context, args LookupMulticastOutputArgs, opts ...pulumi.InvokeOption) LookupMulticastResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMulticastResult, error) {
			args := v.(LookupMulticastArgs)
			r, err := LookupMulticast(ctx, &args, opts...)
			var s LookupMulticastResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMulticastResultOutput)
}

// A collection of arguments for invoking getMulticast.
type LookupMulticastOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupMulticastOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMulticastArgs)(nil)).Elem()
}

// A collection of values returned by getMulticast.
type LookupMulticastResultOutput struct{ *pulumi.OutputState }

func (LookupMulticastResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMulticastResult)(nil)).Elem()
}

func (o LookupMulticastResultOutput) ToLookupMulticastResultOutput() LookupMulticastResultOutput {
	return o
}

func (o LookupMulticastResultOutput) ToLookupMulticastResultOutputWithContext(ctx context.Context) LookupMulticastResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMulticastResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastResult) string { return v.Id }).(pulumi.StringOutput)
}

// PIM interfaces. The structure of `interface` block is documented below.
func (o LookupMulticastResultOutput) Interfaces() GetMulticastInterfaceArrayOutput {
	return o.ApplyT(func(v LookupMulticastResult) []GetMulticastInterface { return v.Interfaces }).(GetMulticastInterfaceArrayOutput)
}

// Enable/disable IP multicast routing.
func (o LookupMulticastResultOutput) MulticastRouting() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastResult) string { return v.MulticastRouting }).(pulumi.StringOutput)
}

// PIM sparse-mode global settings. The structure of `pimSmGlobal` block is documented below.
func (o LookupMulticastResultOutput) PimSmGlobals() GetMulticastPimSmGlobalArrayOutput {
	return o.ApplyT(func(v LookupMulticastResult) []GetMulticastPimSmGlobal { return v.PimSmGlobals }).(GetMulticastPimSmGlobalArrayOutput)
}

// Maximum number of multicast routes.
func (o LookupMulticastResultOutput) RouteLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMulticastResult) int { return v.RouteLimit }).(pulumi.IntOutput)
}

// Generate warnings when the number of multicast routes exceeds this number, must not be greater than route-limit.
func (o LookupMulticastResultOutput) RouteThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMulticastResult) int { return v.RouteThreshold }).(pulumi.IntOutput)
}

func (o LookupMulticastResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMulticastResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMulticastResultOutput{})
}
