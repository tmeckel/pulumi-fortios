// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firewallschedule

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GroupMember struct {
	// Schedule name.
	Name *string `pulumi:"name"`
}

// GroupMemberInput is an input type that accepts GroupMemberArgs and GroupMemberOutput values.
// You can construct a concrete instance of `GroupMemberInput` via:
//
//	GroupMemberArgs{...}
type GroupMemberInput interface {
	pulumi.Input

	ToGroupMemberOutput() GroupMemberOutput
	ToGroupMemberOutputWithContext(context.Context) GroupMemberOutput
}

type GroupMemberArgs struct {
	// Schedule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMember)(nil)).Elem()
}

func (i GroupMemberArgs) ToGroupMemberOutput() GroupMemberOutput {
	return i.ToGroupMemberOutputWithContext(context.Background())
}

func (i GroupMemberArgs) ToGroupMemberOutputWithContext(ctx context.Context) GroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberOutput)
}

// GroupMemberArrayInput is an input type that accepts GroupMemberArray and GroupMemberArrayOutput values.
// You can construct a concrete instance of `GroupMemberArrayInput` via:
//
//	GroupMemberArray{ GroupMemberArgs{...} }
type GroupMemberArrayInput interface {
	pulumi.Input

	ToGroupMemberArrayOutput() GroupMemberArrayOutput
	ToGroupMemberArrayOutputWithContext(context.Context) GroupMemberArrayOutput
}

type GroupMemberArray []GroupMemberInput

func (GroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMember)(nil)).Elem()
}

func (i GroupMemberArray) ToGroupMemberArrayOutput() GroupMemberArrayOutput {
	return i.ToGroupMemberArrayOutputWithContext(context.Background())
}

func (i GroupMemberArray) ToGroupMemberArrayOutputWithContext(ctx context.Context) GroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMemberArrayOutput)
}

type GroupMemberOutput struct{ *pulumi.OutputState }

func (GroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMember)(nil)).Elem()
}

func (o GroupMemberOutput) ToGroupMemberOutput() GroupMemberOutput {
	return o
}

func (o GroupMemberOutput) ToGroupMemberOutputWithContext(ctx context.Context) GroupMemberOutput {
	return o
}

// Schedule name.
func (o GroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMember)(nil)).Elem()
}

func (o GroupMemberArrayOutput) ToGroupMemberArrayOutput() GroupMemberArrayOutput {
	return o
}

func (o GroupMemberArrayOutput) ToGroupMemberArrayOutputWithContext(ctx context.Context) GroupMemberArrayOutput {
	return o
}

func (o GroupMemberArrayOutput) Index(i pulumi.IntInput) GroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupMember {
		return vs[0].([]GroupMember)[vs[1].(int)]
	}).(GroupMemberOutput)
}

type GetGroupMember struct {
	// Specify the name of the desired firewallschedule group.
	Name string `pulumi:"name"`
}

// GetGroupMemberInput is an input type that accepts GetGroupMemberArgs and GetGroupMemberOutput values.
// You can construct a concrete instance of `GetGroupMemberInput` via:
//
//	GetGroupMemberArgs{...}
type GetGroupMemberInput interface {
	pulumi.Input

	ToGetGroupMemberOutput() GetGroupMemberOutput
	ToGetGroupMemberOutputWithContext(context.Context) GetGroupMemberOutput
}

type GetGroupMemberArgs struct {
	// Specify the name of the desired firewallschedule group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMember)(nil)).Elem()
}

func (i GetGroupMemberArgs) ToGetGroupMemberOutput() GetGroupMemberOutput {
	return i.ToGetGroupMemberOutputWithContext(context.Background())
}

func (i GetGroupMemberArgs) ToGetGroupMemberOutputWithContext(ctx context.Context) GetGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMemberOutput)
}

// GetGroupMemberArrayInput is an input type that accepts GetGroupMemberArray and GetGroupMemberArrayOutput values.
// You can construct a concrete instance of `GetGroupMemberArrayInput` via:
//
//	GetGroupMemberArray{ GetGroupMemberArgs{...} }
type GetGroupMemberArrayInput interface {
	pulumi.Input

	ToGetGroupMemberArrayOutput() GetGroupMemberArrayOutput
	ToGetGroupMemberArrayOutputWithContext(context.Context) GetGroupMemberArrayOutput
}

type GetGroupMemberArray []GetGroupMemberInput

func (GetGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMember)(nil)).Elem()
}

func (i GetGroupMemberArray) ToGetGroupMemberArrayOutput() GetGroupMemberArrayOutput {
	return i.ToGetGroupMemberArrayOutputWithContext(context.Background())
}

func (i GetGroupMemberArray) ToGetGroupMemberArrayOutputWithContext(ctx context.Context) GetGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMemberArrayOutput)
}

type GetGroupMemberOutput struct{ *pulumi.OutputState }

func (GetGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMember)(nil)).Elem()
}

func (o GetGroupMemberOutput) ToGetGroupMemberOutput() GetGroupMemberOutput {
	return o
}

func (o GetGroupMemberOutput) ToGetGroupMemberOutputWithContext(ctx context.Context) GetGroupMemberOutput {
	return o
}

// Specify the name of the desired firewallschedule group.
func (o GetGroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMember) string { return v.Name }).(pulumi.StringOutput)
}

type GetGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMember)(nil)).Elem()
}

func (o GetGroupMemberArrayOutput) ToGetGroupMemberArrayOutput() GetGroupMemberArrayOutput {
	return o
}

func (o GetGroupMemberArrayOutput) ToGetGroupMemberArrayOutputWithContext(ctx context.Context) GetGroupMemberArrayOutput {
	return o
}

func (o GetGroupMemberArrayOutput) Index(i pulumi.IntInput) GetGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMember {
		return vs[0].([]GetGroupMember)[vs[1].(int)]
	}).(GetGroupMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberInput)(nil)).Elem(), GroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMemberArrayInput)(nil)).Elem(), GroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMemberInput)(nil)).Elem(), GetGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupMemberArrayInput)(nil)).Elem(), GetGroupMemberArray{})
	pulumi.RegisterOutputType(GroupMemberOutput{})
	pulumi.RegisterOutputType(GroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMemberOutput{})
	pulumi.RegisterOutputType(GetGroupMemberArrayOutput{})
}
