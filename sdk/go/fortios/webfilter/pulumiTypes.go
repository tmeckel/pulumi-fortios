// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webfilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContentEntry struct {
	// Block or exempt word when a match is found. Valid values: `block`, `exempt`.
	Action *string `pulumi:"action"`
	// Language of banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`, `cyrillic`.
	Lang *string `pulumi:"lang"`
	// Banned word.
	Name *string `pulumi:"name"`
	// Banned word pattern type: wildcard pattern or Perl regular expression. Valid values: `wildcard`, `regexp`.
	PatternType *string `pulumi:"patternType"`
	// Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).
	Score *int `pulumi:"score"`
	// Enable/disable banned word. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// ContentEntryInput is an input type that accepts ContentEntryArgs and ContentEntryOutput values.
// You can construct a concrete instance of `ContentEntryInput` via:
//
//	ContentEntryArgs{...}
type ContentEntryInput interface {
	pulumi.Input

	ToContentEntryOutput() ContentEntryOutput
	ToContentEntryOutputWithContext(context.Context) ContentEntryOutput
}

type ContentEntryArgs struct {
	// Block or exempt word when a match is found. Valid values: `block`, `exempt`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Language of banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`, `cyrillic`.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Banned word.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Banned word pattern type: wildcard pattern or Perl regular expression. Valid values: `wildcard`, `regexp`.
	PatternType pulumi.StringPtrInput `pulumi:"patternType"`
	// Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).
	Score pulumi.IntPtrInput `pulumi:"score"`
	// Enable/disable banned word. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ContentEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentEntry)(nil)).Elem()
}

func (i ContentEntryArgs) ToContentEntryOutput() ContentEntryOutput {
	return i.ToContentEntryOutputWithContext(context.Background())
}

func (i ContentEntryArgs) ToContentEntryOutputWithContext(ctx context.Context) ContentEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentEntryOutput)
}

// ContentEntryArrayInput is an input type that accepts ContentEntryArray and ContentEntryArrayOutput values.
// You can construct a concrete instance of `ContentEntryArrayInput` via:
//
//	ContentEntryArray{ ContentEntryArgs{...} }
type ContentEntryArrayInput interface {
	pulumi.Input

	ToContentEntryArrayOutput() ContentEntryArrayOutput
	ToContentEntryArrayOutputWithContext(context.Context) ContentEntryArrayOutput
}

type ContentEntryArray []ContentEntryInput

func (ContentEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentEntry)(nil)).Elem()
}

func (i ContentEntryArray) ToContentEntryArrayOutput() ContentEntryArrayOutput {
	return i.ToContentEntryArrayOutputWithContext(context.Background())
}

func (i ContentEntryArray) ToContentEntryArrayOutputWithContext(ctx context.Context) ContentEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentEntryArrayOutput)
}

type ContentEntryOutput struct{ *pulumi.OutputState }

func (ContentEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentEntry)(nil)).Elem()
}

func (o ContentEntryOutput) ToContentEntryOutput() ContentEntryOutput {
	return o
}

func (o ContentEntryOutput) ToContentEntryOutputWithContext(ctx context.Context) ContentEntryOutput {
	return o
}

// Block or exempt word when a match is found. Valid values: `block`, `exempt`.
func (o ContentEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Language of banned word. Valid values: `western`, `simch`, `trach`, `japanese`, `korean`, `french`, `thai`, `spanish`, `cyrillic`.
func (o ContentEntryOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentEntry) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Banned word.
func (o ContentEntryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentEntry) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Banned word pattern type: wildcard pattern or Perl regular expression. Valid values: `wildcard`, `regexp`.
func (o ContentEntryOutput) PatternType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentEntry) *string { return v.PatternType }).(pulumi.StringPtrOutput)
}

// Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).
func (o ContentEntryOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContentEntry) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// Enable/disable banned word. Valid values: `enable`, `disable`.
func (o ContentEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ContentEntryArrayOutput struct{ *pulumi.OutputState }

func (ContentEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentEntry)(nil)).Elem()
}

func (o ContentEntryArrayOutput) ToContentEntryArrayOutput() ContentEntryArrayOutput {
	return o
}

func (o ContentEntryArrayOutput) ToContentEntryArrayOutputWithContext(ctx context.Context) ContentEntryArrayOutput {
	return o
}

func (o ContentEntryArrayOutput) Index(i pulumi.IntInput) ContentEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContentEntry {
		return vs[0].([]ContentEntry)[vs[1].(int)]
	}).(ContentEntryOutput)
}

type ContentheaderEntry struct {
	// Action to take for this content type. Valid values: `block`, `allow`, `exempt`.
	Action *string `pulumi:"action"`
	// Categories that this content type applies to.
	Category *string `pulumi:"category"`
	// Content type (regular expression).
	Pattern *string `pulumi:"pattern"`
}

// ContentheaderEntryInput is an input type that accepts ContentheaderEntryArgs and ContentheaderEntryOutput values.
// You can construct a concrete instance of `ContentheaderEntryInput` via:
//
//	ContentheaderEntryArgs{...}
type ContentheaderEntryInput interface {
	pulumi.Input

	ToContentheaderEntryOutput() ContentheaderEntryOutput
	ToContentheaderEntryOutputWithContext(context.Context) ContentheaderEntryOutput
}

type ContentheaderEntryArgs struct {
	// Action to take for this content type. Valid values: `block`, `allow`, `exempt`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Categories that this content type applies to.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Content type (regular expression).
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (ContentheaderEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentheaderEntry)(nil)).Elem()
}

func (i ContentheaderEntryArgs) ToContentheaderEntryOutput() ContentheaderEntryOutput {
	return i.ToContentheaderEntryOutputWithContext(context.Background())
}

func (i ContentheaderEntryArgs) ToContentheaderEntryOutputWithContext(ctx context.Context) ContentheaderEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentheaderEntryOutput)
}

// ContentheaderEntryArrayInput is an input type that accepts ContentheaderEntryArray and ContentheaderEntryArrayOutput values.
// You can construct a concrete instance of `ContentheaderEntryArrayInput` via:
//
//	ContentheaderEntryArray{ ContentheaderEntryArgs{...} }
type ContentheaderEntryArrayInput interface {
	pulumi.Input

	ToContentheaderEntryArrayOutput() ContentheaderEntryArrayOutput
	ToContentheaderEntryArrayOutputWithContext(context.Context) ContentheaderEntryArrayOutput
}

type ContentheaderEntryArray []ContentheaderEntryInput

func (ContentheaderEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentheaderEntry)(nil)).Elem()
}

func (i ContentheaderEntryArray) ToContentheaderEntryArrayOutput() ContentheaderEntryArrayOutput {
	return i.ToContentheaderEntryArrayOutputWithContext(context.Background())
}

func (i ContentheaderEntryArray) ToContentheaderEntryArrayOutputWithContext(ctx context.Context) ContentheaderEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentheaderEntryArrayOutput)
}

type ContentheaderEntryOutput struct{ *pulumi.OutputState }

func (ContentheaderEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentheaderEntry)(nil)).Elem()
}

func (o ContentheaderEntryOutput) ToContentheaderEntryOutput() ContentheaderEntryOutput {
	return o
}

func (o ContentheaderEntryOutput) ToContentheaderEntryOutputWithContext(ctx context.Context) ContentheaderEntryOutput {
	return o
}

// Action to take for this content type. Valid values: `block`, `allow`, `exempt`.
func (o ContentheaderEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentheaderEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Categories that this content type applies to.
func (o ContentheaderEntryOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentheaderEntry) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Content type (regular expression).
func (o ContentheaderEntryOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentheaderEntry) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type ContentheaderEntryArrayOutput struct{ *pulumi.OutputState }

func (ContentheaderEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentheaderEntry)(nil)).Elem()
}

func (o ContentheaderEntryArrayOutput) ToContentheaderEntryArrayOutput() ContentheaderEntryArrayOutput {
	return o
}

func (o ContentheaderEntryArrayOutput) ToContentheaderEntryArrayOutputWithContext(ctx context.Context) ContentheaderEntryArrayOutput {
	return o
}

func (o ContentheaderEntryArrayOutput) Index(i pulumi.IntInput) ContentheaderEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContentheaderEntry {
		return vs[0].([]ContentheaderEntry)[vs[1].(int)]
	}).(ContentheaderEntryOutput)
}

type ProfileAntiphish struct {
	// Authentication methods. Valid values: `domain-controller`, `ldap`.
	Authentication *string `pulumi:"authentication"`
	// Enable/disable checking of HTTP Basic Auth field for known credentials. Valid values: `enable`, `disable`.
	CheckBasicAuth *string `pulumi:"checkBasicAuth"`
	// Enable/disable checking of GET URI parameters for known credentials. Valid values: `enable`, `disable`.
	CheckUri *string `pulumi:"checkUri"`
	// Enable/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity. Valid values: `enable`, `disable`.
	CheckUsernameOnly *string `pulumi:"checkUsernameOnly"`
	// Custom username and password regex patterns. The structure of `customPatterns` block is documented below.
	CustomPatterns []ProfileAntiphishCustomPattern `pulumi:"customPatterns"`
	// Action to be taken when there is no matching rule. Valid values: `exempt`, `log`, `block`.
	DefaultAction *string `pulumi:"defaultAction"`
	// Domain for which to verify received credentials against.
	DomainController *string `pulumi:"domainController"`
	// AntiPhishing entries. The structure of `inspectionEntries` block is documented below.
	InspectionEntries []ProfileAntiphishInspectionEntry `pulumi:"inspectionEntries"`
	// LDAP server for which to verify received credentials against.
	Ldap *string `pulumi:"ldap"`
	// Maximum size of a POST body to check for credentials.
	MaxBodyLen *int `pulumi:"maxBodyLen"`
	// Toggle AntiPhishing functionality. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// ProfileAntiphishInput is an input type that accepts ProfileAntiphishArgs and ProfileAntiphishOutput values.
// You can construct a concrete instance of `ProfileAntiphishInput` via:
//
//	ProfileAntiphishArgs{...}
type ProfileAntiphishInput interface {
	pulumi.Input

	ToProfileAntiphishOutput() ProfileAntiphishOutput
	ToProfileAntiphishOutputWithContext(context.Context) ProfileAntiphishOutput
}

type ProfileAntiphishArgs struct {
	// Authentication methods. Valid values: `domain-controller`, `ldap`.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Enable/disable checking of HTTP Basic Auth field for known credentials. Valid values: `enable`, `disable`.
	CheckBasicAuth pulumi.StringPtrInput `pulumi:"checkBasicAuth"`
	// Enable/disable checking of GET URI parameters for known credentials. Valid values: `enable`, `disable`.
	CheckUri pulumi.StringPtrInput `pulumi:"checkUri"`
	// Enable/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity. Valid values: `enable`, `disable`.
	CheckUsernameOnly pulumi.StringPtrInput `pulumi:"checkUsernameOnly"`
	// Custom username and password regex patterns. The structure of `customPatterns` block is documented below.
	CustomPatterns ProfileAntiphishCustomPatternArrayInput `pulumi:"customPatterns"`
	// Action to be taken when there is no matching rule. Valid values: `exempt`, `log`, `block`.
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// Domain for which to verify received credentials against.
	DomainController pulumi.StringPtrInput `pulumi:"domainController"`
	// AntiPhishing entries. The structure of `inspectionEntries` block is documented below.
	InspectionEntries ProfileAntiphishInspectionEntryArrayInput `pulumi:"inspectionEntries"`
	// LDAP server for which to verify received credentials against.
	Ldap pulumi.StringPtrInput `pulumi:"ldap"`
	// Maximum size of a POST body to check for credentials.
	MaxBodyLen pulumi.IntPtrInput `pulumi:"maxBodyLen"`
	// Toggle AntiPhishing functionality. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ProfileAntiphishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAntiphish)(nil)).Elem()
}

func (i ProfileAntiphishArgs) ToProfileAntiphishOutput() ProfileAntiphishOutput {
	return i.ToProfileAntiphishOutputWithContext(context.Background())
}

func (i ProfileAntiphishArgs) ToProfileAntiphishOutputWithContext(ctx context.Context) ProfileAntiphishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAntiphishOutput)
}

func (i ProfileAntiphishArgs) ToProfileAntiphishPtrOutput() ProfileAntiphishPtrOutput {
	return i.ToProfileAntiphishPtrOutputWithContext(context.Background())
}

func (i ProfileAntiphishArgs) ToProfileAntiphishPtrOutputWithContext(ctx context.Context) ProfileAntiphishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAntiphishOutput).ToProfileAntiphishPtrOutputWithContext(ctx)
}

// ProfileAntiphishPtrInput is an input type that accepts ProfileAntiphishArgs, ProfileAntiphishPtr and ProfileAntiphishPtrOutput values.
// You can construct a concrete instance of `ProfileAntiphishPtrInput` via:
//
//	        ProfileAntiphishArgs{...}
//
//	or:
//
//	        nil
type ProfileAntiphishPtrInput interface {
	pulumi.Input

	ToProfileAntiphishPtrOutput() ProfileAntiphishPtrOutput
	ToProfileAntiphishPtrOutputWithContext(context.Context) ProfileAntiphishPtrOutput
}

type profileAntiphishPtrType ProfileAntiphishArgs

func ProfileAntiphishPtr(v *ProfileAntiphishArgs) ProfileAntiphishPtrInput {
	return (*profileAntiphishPtrType)(v)
}

func (*profileAntiphishPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileAntiphish)(nil)).Elem()
}

func (i *profileAntiphishPtrType) ToProfileAntiphishPtrOutput() ProfileAntiphishPtrOutput {
	return i.ToProfileAntiphishPtrOutputWithContext(context.Background())
}

func (i *profileAntiphishPtrType) ToProfileAntiphishPtrOutputWithContext(ctx context.Context) ProfileAntiphishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAntiphishPtrOutput)
}

type ProfileAntiphishOutput struct{ *pulumi.OutputState }

func (ProfileAntiphishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAntiphish)(nil)).Elem()
}

func (o ProfileAntiphishOutput) ToProfileAntiphishOutput() ProfileAntiphishOutput {
	return o
}

func (o ProfileAntiphishOutput) ToProfileAntiphishOutputWithContext(ctx context.Context) ProfileAntiphishOutput {
	return o
}

func (o ProfileAntiphishOutput) ToProfileAntiphishPtrOutput() ProfileAntiphishPtrOutput {
	return o.ToProfileAntiphishPtrOutputWithContext(context.Background())
}

func (o ProfileAntiphishOutput) ToProfileAntiphishPtrOutputWithContext(ctx context.Context) ProfileAntiphishPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileAntiphish) *ProfileAntiphish {
		return &v
	}).(ProfileAntiphishPtrOutput)
}

// Authentication methods. Valid values: `domain-controller`, `ldap`.
func (o ProfileAntiphishOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Enable/disable checking of HTTP Basic Auth field for known credentials. Valid values: `enable`, `disable`.
func (o ProfileAntiphishOutput) CheckBasicAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *string { return v.CheckBasicAuth }).(pulumi.StringPtrOutput)
}

// Enable/disable checking of GET URI parameters for known credentials. Valid values: `enable`, `disable`.
func (o ProfileAntiphishOutput) CheckUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *string { return v.CheckUri }).(pulumi.StringPtrOutput)
}

// Enable/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity. Valid values: `enable`, `disable`.
func (o ProfileAntiphishOutput) CheckUsernameOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *string { return v.CheckUsernameOnly }).(pulumi.StringPtrOutput)
}

// Custom username and password regex patterns. The structure of `customPatterns` block is documented below.
func (o ProfileAntiphishOutput) CustomPatterns() ProfileAntiphishCustomPatternArrayOutput {
	return o.ApplyT(func(v ProfileAntiphish) []ProfileAntiphishCustomPattern { return v.CustomPatterns }).(ProfileAntiphishCustomPatternArrayOutput)
}

// Action to be taken when there is no matching rule. Valid values: `exempt`, `log`, `block`.
func (o ProfileAntiphishOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// Domain for which to verify received credentials against.
func (o ProfileAntiphishOutput) DomainController() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *string { return v.DomainController }).(pulumi.StringPtrOutput)
}

// AntiPhishing entries. The structure of `inspectionEntries` block is documented below.
func (o ProfileAntiphishOutput) InspectionEntries() ProfileAntiphishInspectionEntryArrayOutput {
	return o.ApplyT(func(v ProfileAntiphish) []ProfileAntiphishInspectionEntry { return v.InspectionEntries }).(ProfileAntiphishInspectionEntryArrayOutput)
}

// LDAP server for which to verify received credentials against.
func (o ProfileAntiphishOutput) Ldap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *string { return v.Ldap }).(pulumi.StringPtrOutput)
}

// Maximum size of a POST body to check for credentials.
func (o ProfileAntiphishOutput) MaxBodyLen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *int { return v.MaxBodyLen }).(pulumi.IntPtrOutput)
}

// Toggle AntiPhishing functionality. Valid values: `enable`, `disable`.
func (o ProfileAntiphishOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphish) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProfileAntiphishPtrOutput struct{ *pulumi.OutputState }

func (ProfileAntiphishPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileAntiphish)(nil)).Elem()
}

func (o ProfileAntiphishPtrOutput) ToProfileAntiphishPtrOutput() ProfileAntiphishPtrOutput {
	return o
}

func (o ProfileAntiphishPtrOutput) ToProfileAntiphishPtrOutputWithContext(ctx context.Context) ProfileAntiphishPtrOutput {
	return o
}

func (o ProfileAntiphishPtrOutput) Elem() ProfileAntiphishOutput {
	return o.ApplyT(func(v *ProfileAntiphish) ProfileAntiphish {
		if v != nil {
			return *v
		}
		var ret ProfileAntiphish
		return ret
	}).(ProfileAntiphishOutput)
}

// Authentication methods. Valid values: `domain-controller`, `ldap`.
func (o ProfileAntiphishPtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

// Enable/disable checking of HTTP Basic Auth field for known credentials. Valid values: `enable`, `disable`.
func (o ProfileAntiphishPtrOutput) CheckBasicAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.CheckBasicAuth
	}).(pulumi.StringPtrOutput)
}

// Enable/disable checking of GET URI parameters for known credentials. Valid values: `enable`, `disable`.
func (o ProfileAntiphishPtrOutput) CheckUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.CheckUri
	}).(pulumi.StringPtrOutput)
}

// Enable/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity. Valid values: `enable`, `disable`.
func (o ProfileAntiphishPtrOutput) CheckUsernameOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.CheckUsernameOnly
	}).(pulumi.StringPtrOutput)
}

// Custom username and password regex patterns. The structure of `customPatterns` block is documented below.
func (o ProfileAntiphishPtrOutput) CustomPatterns() ProfileAntiphishCustomPatternArrayOutput {
	return o.ApplyT(func(v *ProfileAntiphish) []ProfileAntiphishCustomPattern {
		if v == nil {
			return nil
		}
		return v.CustomPatterns
	}).(ProfileAntiphishCustomPatternArrayOutput)
}

// Action to be taken when there is no matching rule. Valid values: `exempt`, `log`, `block`.
func (o ProfileAntiphishPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// Domain for which to verify received credentials against.
func (o ProfileAntiphishPtrOutput) DomainController() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.DomainController
	}).(pulumi.StringPtrOutput)
}

// AntiPhishing entries. The structure of `inspectionEntries` block is documented below.
func (o ProfileAntiphishPtrOutput) InspectionEntries() ProfileAntiphishInspectionEntryArrayOutput {
	return o.ApplyT(func(v *ProfileAntiphish) []ProfileAntiphishInspectionEntry {
		if v == nil {
			return nil
		}
		return v.InspectionEntries
	}).(ProfileAntiphishInspectionEntryArrayOutput)
}

// LDAP server for which to verify received credentials against.
func (o ProfileAntiphishPtrOutput) Ldap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.Ldap
	}).(pulumi.StringPtrOutput)
}

// Maximum size of a POST body to check for credentials.
func (o ProfileAntiphishPtrOutput) MaxBodyLen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *int {
		if v == nil {
			return nil
		}
		return v.MaxBodyLen
	}).(pulumi.IntPtrOutput)
}

// Toggle AntiPhishing functionality. Valid values: `enable`, `disable`.
func (o ProfileAntiphishPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAntiphish) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ProfileAntiphishCustomPattern struct {
	// Category that the pattern matches. Valid values: `username`, `password`.
	Category *string `pulumi:"category"`
	// Target pattern.
	Pattern *string `pulumi:"pattern"`
	// Pattern will be treated either as a regex pattern or literal string. Valid values: `regex`, `literal`.
	Type *string `pulumi:"type"`
}

// ProfileAntiphishCustomPatternInput is an input type that accepts ProfileAntiphishCustomPatternArgs and ProfileAntiphishCustomPatternOutput values.
// You can construct a concrete instance of `ProfileAntiphishCustomPatternInput` via:
//
//	ProfileAntiphishCustomPatternArgs{...}
type ProfileAntiphishCustomPatternInput interface {
	pulumi.Input

	ToProfileAntiphishCustomPatternOutput() ProfileAntiphishCustomPatternOutput
	ToProfileAntiphishCustomPatternOutputWithContext(context.Context) ProfileAntiphishCustomPatternOutput
}

type ProfileAntiphishCustomPatternArgs struct {
	// Category that the pattern matches. Valid values: `username`, `password`.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Target pattern.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Pattern will be treated either as a regex pattern or literal string. Valid values: `regex`, `literal`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProfileAntiphishCustomPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAntiphishCustomPattern)(nil)).Elem()
}

func (i ProfileAntiphishCustomPatternArgs) ToProfileAntiphishCustomPatternOutput() ProfileAntiphishCustomPatternOutput {
	return i.ToProfileAntiphishCustomPatternOutputWithContext(context.Background())
}

func (i ProfileAntiphishCustomPatternArgs) ToProfileAntiphishCustomPatternOutputWithContext(ctx context.Context) ProfileAntiphishCustomPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAntiphishCustomPatternOutput)
}

// ProfileAntiphishCustomPatternArrayInput is an input type that accepts ProfileAntiphishCustomPatternArray and ProfileAntiphishCustomPatternArrayOutput values.
// You can construct a concrete instance of `ProfileAntiphishCustomPatternArrayInput` via:
//
//	ProfileAntiphishCustomPatternArray{ ProfileAntiphishCustomPatternArgs{...} }
type ProfileAntiphishCustomPatternArrayInput interface {
	pulumi.Input

	ToProfileAntiphishCustomPatternArrayOutput() ProfileAntiphishCustomPatternArrayOutput
	ToProfileAntiphishCustomPatternArrayOutputWithContext(context.Context) ProfileAntiphishCustomPatternArrayOutput
}

type ProfileAntiphishCustomPatternArray []ProfileAntiphishCustomPatternInput

func (ProfileAntiphishCustomPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileAntiphishCustomPattern)(nil)).Elem()
}

func (i ProfileAntiphishCustomPatternArray) ToProfileAntiphishCustomPatternArrayOutput() ProfileAntiphishCustomPatternArrayOutput {
	return i.ToProfileAntiphishCustomPatternArrayOutputWithContext(context.Background())
}

func (i ProfileAntiphishCustomPatternArray) ToProfileAntiphishCustomPatternArrayOutputWithContext(ctx context.Context) ProfileAntiphishCustomPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAntiphishCustomPatternArrayOutput)
}

type ProfileAntiphishCustomPatternOutput struct{ *pulumi.OutputState }

func (ProfileAntiphishCustomPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAntiphishCustomPattern)(nil)).Elem()
}

func (o ProfileAntiphishCustomPatternOutput) ToProfileAntiphishCustomPatternOutput() ProfileAntiphishCustomPatternOutput {
	return o
}

func (o ProfileAntiphishCustomPatternOutput) ToProfileAntiphishCustomPatternOutputWithContext(ctx context.Context) ProfileAntiphishCustomPatternOutput {
	return o
}

// Category that the pattern matches. Valid values: `username`, `password`.
func (o ProfileAntiphishCustomPatternOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphishCustomPattern) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Target pattern.
func (o ProfileAntiphishCustomPatternOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphishCustomPattern) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Pattern will be treated either as a regex pattern or literal string. Valid values: `regex`, `literal`.
func (o ProfileAntiphishCustomPatternOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphishCustomPattern) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProfileAntiphishCustomPatternArrayOutput struct{ *pulumi.OutputState }

func (ProfileAntiphishCustomPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileAntiphishCustomPattern)(nil)).Elem()
}

func (o ProfileAntiphishCustomPatternArrayOutput) ToProfileAntiphishCustomPatternArrayOutput() ProfileAntiphishCustomPatternArrayOutput {
	return o
}

func (o ProfileAntiphishCustomPatternArrayOutput) ToProfileAntiphishCustomPatternArrayOutputWithContext(ctx context.Context) ProfileAntiphishCustomPatternArrayOutput {
	return o
}

func (o ProfileAntiphishCustomPatternArrayOutput) Index(i pulumi.IntInput) ProfileAntiphishCustomPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileAntiphishCustomPattern {
		return vs[0].([]ProfileAntiphishCustomPattern)[vs[1].(int)]
	}).(ProfileAntiphishCustomPatternOutput)
}

type ProfileAntiphishInspectionEntry struct {
	// Action to be taken upon an AntiPhishing match. Valid values: `exempt`, `log`, `block`.
	Action *string `pulumi:"action"`
	// FortiGuard category to match.
	FortiguardCategory *string `pulumi:"fortiguardCategory"`
	// Inspection target name.
	Name *string `pulumi:"name"`
}

// ProfileAntiphishInspectionEntryInput is an input type that accepts ProfileAntiphishInspectionEntryArgs and ProfileAntiphishInspectionEntryOutput values.
// You can construct a concrete instance of `ProfileAntiphishInspectionEntryInput` via:
//
//	ProfileAntiphishInspectionEntryArgs{...}
type ProfileAntiphishInspectionEntryInput interface {
	pulumi.Input

	ToProfileAntiphishInspectionEntryOutput() ProfileAntiphishInspectionEntryOutput
	ToProfileAntiphishInspectionEntryOutputWithContext(context.Context) ProfileAntiphishInspectionEntryOutput
}

type ProfileAntiphishInspectionEntryArgs struct {
	// Action to be taken upon an AntiPhishing match. Valid values: `exempt`, `log`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// FortiGuard category to match.
	FortiguardCategory pulumi.StringPtrInput `pulumi:"fortiguardCategory"`
	// Inspection target name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileAntiphishInspectionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAntiphishInspectionEntry)(nil)).Elem()
}

func (i ProfileAntiphishInspectionEntryArgs) ToProfileAntiphishInspectionEntryOutput() ProfileAntiphishInspectionEntryOutput {
	return i.ToProfileAntiphishInspectionEntryOutputWithContext(context.Background())
}

func (i ProfileAntiphishInspectionEntryArgs) ToProfileAntiphishInspectionEntryOutputWithContext(ctx context.Context) ProfileAntiphishInspectionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAntiphishInspectionEntryOutput)
}

// ProfileAntiphishInspectionEntryArrayInput is an input type that accepts ProfileAntiphishInspectionEntryArray and ProfileAntiphishInspectionEntryArrayOutput values.
// You can construct a concrete instance of `ProfileAntiphishInspectionEntryArrayInput` via:
//
//	ProfileAntiphishInspectionEntryArray{ ProfileAntiphishInspectionEntryArgs{...} }
type ProfileAntiphishInspectionEntryArrayInput interface {
	pulumi.Input

	ToProfileAntiphishInspectionEntryArrayOutput() ProfileAntiphishInspectionEntryArrayOutput
	ToProfileAntiphishInspectionEntryArrayOutputWithContext(context.Context) ProfileAntiphishInspectionEntryArrayOutput
}

type ProfileAntiphishInspectionEntryArray []ProfileAntiphishInspectionEntryInput

func (ProfileAntiphishInspectionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileAntiphishInspectionEntry)(nil)).Elem()
}

func (i ProfileAntiphishInspectionEntryArray) ToProfileAntiphishInspectionEntryArrayOutput() ProfileAntiphishInspectionEntryArrayOutput {
	return i.ToProfileAntiphishInspectionEntryArrayOutputWithContext(context.Background())
}

func (i ProfileAntiphishInspectionEntryArray) ToProfileAntiphishInspectionEntryArrayOutputWithContext(ctx context.Context) ProfileAntiphishInspectionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAntiphishInspectionEntryArrayOutput)
}

type ProfileAntiphishInspectionEntryOutput struct{ *pulumi.OutputState }

func (ProfileAntiphishInspectionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAntiphishInspectionEntry)(nil)).Elem()
}

func (o ProfileAntiphishInspectionEntryOutput) ToProfileAntiphishInspectionEntryOutput() ProfileAntiphishInspectionEntryOutput {
	return o
}

func (o ProfileAntiphishInspectionEntryOutput) ToProfileAntiphishInspectionEntryOutputWithContext(ctx context.Context) ProfileAntiphishInspectionEntryOutput {
	return o
}

// Action to be taken upon an AntiPhishing match. Valid values: `exempt`, `log`, `block`.
func (o ProfileAntiphishInspectionEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphishInspectionEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// FortiGuard category to match.
func (o ProfileAntiphishInspectionEntryOutput) FortiguardCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphishInspectionEntry) *string { return v.FortiguardCategory }).(pulumi.StringPtrOutput)
}

// Inspection target name.
func (o ProfileAntiphishInspectionEntryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAntiphishInspectionEntry) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileAntiphishInspectionEntryArrayOutput struct{ *pulumi.OutputState }

func (ProfileAntiphishInspectionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileAntiphishInspectionEntry)(nil)).Elem()
}

func (o ProfileAntiphishInspectionEntryArrayOutput) ToProfileAntiphishInspectionEntryArrayOutput() ProfileAntiphishInspectionEntryArrayOutput {
	return o
}

func (o ProfileAntiphishInspectionEntryArrayOutput) ToProfileAntiphishInspectionEntryArrayOutputWithContext(ctx context.Context) ProfileAntiphishInspectionEntryArrayOutput {
	return o
}

func (o ProfileAntiphishInspectionEntryArrayOutput) Index(i pulumi.IntInput) ProfileAntiphishInspectionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileAntiphishInspectionEntry {
		return vs[0].([]ProfileAntiphishInspectionEntry)[vs[1].(int)]
	}).(ProfileAntiphishInspectionEntryOutput)
}

type ProfileFileFilter struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries []ProfileFileFilterEntry `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
	ScanArchiveContents *string `pulumi:"scanArchiveContents"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
}

// ProfileFileFilterInput is an input type that accepts ProfileFileFilterArgs and ProfileFileFilterOutput values.
// You can construct a concrete instance of `ProfileFileFilterInput` via:
//
//	ProfileFileFilterArgs{...}
type ProfileFileFilterInput interface {
	pulumi.Input

	ToProfileFileFilterOutput() ProfileFileFilterOutput
	ToProfileFileFilterOutputWithContext(context.Context) ProfileFileFilterOutput
}

type ProfileFileFilterArgs struct {
	// File filter entries. The structure of `entries` block is documented below.
	Entries ProfileFileFilterEntryArrayInput `pulumi:"entries"`
	// Enable/disable file filter logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
	ScanArchiveContents pulumi.StringPtrInput `pulumi:"scanArchiveContents"`
	// Enable/disable file filter. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ProfileFileFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFileFilter)(nil)).Elem()
}

func (i ProfileFileFilterArgs) ToProfileFileFilterOutput() ProfileFileFilterOutput {
	return i.ToProfileFileFilterOutputWithContext(context.Background())
}

func (i ProfileFileFilterArgs) ToProfileFileFilterOutputWithContext(ctx context.Context) ProfileFileFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFileFilterOutput)
}

func (i ProfileFileFilterArgs) ToProfileFileFilterPtrOutput() ProfileFileFilterPtrOutput {
	return i.ToProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i ProfileFileFilterArgs) ToProfileFileFilterPtrOutputWithContext(ctx context.Context) ProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFileFilterOutput).ToProfileFileFilterPtrOutputWithContext(ctx)
}

// ProfileFileFilterPtrInput is an input type that accepts ProfileFileFilterArgs, ProfileFileFilterPtr and ProfileFileFilterPtrOutput values.
// You can construct a concrete instance of `ProfileFileFilterPtrInput` via:
//
//	        ProfileFileFilterArgs{...}
//
//	or:
//
//	        nil
type ProfileFileFilterPtrInput interface {
	pulumi.Input

	ToProfileFileFilterPtrOutput() ProfileFileFilterPtrOutput
	ToProfileFileFilterPtrOutputWithContext(context.Context) ProfileFileFilterPtrOutput
}

type profileFileFilterPtrType ProfileFileFilterArgs

func ProfileFileFilterPtr(v *ProfileFileFilterArgs) ProfileFileFilterPtrInput {
	return (*profileFileFilterPtrType)(v)
}

func (*profileFileFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileFileFilter)(nil)).Elem()
}

func (i *profileFileFilterPtrType) ToProfileFileFilterPtrOutput() ProfileFileFilterPtrOutput {
	return i.ToProfileFileFilterPtrOutputWithContext(context.Background())
}

func (i *profileFileFilterPtrType) ToProfileFileFilterPtrOutputWithContext(ctx context.Context) ProfileFileFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFileFilterPtrOutput)
}

type ProfileFileFilterOutput struct{ *pulumi.OutputState }

func (ProfileFileFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFileFilter)(nil)).Elem()
}

func (o ProfileFileFilterOutput) ToProfileFileFilterOutput() ProfileFileFilterOutput {
	return o
}

func (o ProfileFileFilterOutput) ToProfileFileFilterOutputWithContext(ctx context.Context) ProfileFileFilterOutput {
	return o
}

func (o ProfileFileFilterOutput) ToProfileFileFilterPtrOutput() ProfileFileFilterPtrOutput {
	return o.ToProfileFileFilterPtrOutputWithContext(context.Background())
}

func (o ProfileFileFilterOutput) ToProfileFileFilterPtrOutputWithContext(ctx context.Context) ProfileFileFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileFileFilter) *ProfileFileFilter {
		return &v
	}).(ProfileFileFilterPtrOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o ProfileFileFilterOutput) Entries() ProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v ProfileFileFilter) []ProfileFileFilterEntry { return v.Entries }).(ProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o ProfileFileFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
func (o ProfileFileFilterOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilter) *string { return v.ScanArchiveContents }).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o ProfileFileFilterOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilter) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProfileFileFilterPtrOutput struct{ *pulumi.OutputState }

func (ProfileFileFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileFileFilter)(nil)).Elem()
}

func (o ProfileFileFilterPtrOutput) ToProfileFileFilterPtrOutput() ProfileFileFilterPtrOutput {
	return o
}

func (o ProfileFileFilterPtrOutput) ToProfileFileFilterPtrOutputWithContext(ctx context.Context) ProfileFileFilterPtrOutput {
	return o
}

func (o ProfileFileFilterPtrOutput) Elem() ProfileFileFilterOutput {
	return o.ApplyT(func(v *ProfileFileFilter) ProfileFileFilter {
		if v != nil {
			return *v
		}
		var ret ProfileFileFilter
		return ret
	}).(ProfileFileFilterOutput)
}

// File filter entries. The structure of `entries` block is documented below.
func (o ProfileFileFilterPtrOutput) Entries() ProfileFileFilterEntryArrayOutput {
	return o.ApplyT(func(v *ProfileFileFilter) []ProfileFileFilterEntry {
		if v == nil {
			return nil
		}
		return v.Entries
	}).(ProfileFileFilterEntryArrayOutput)
}

// Enable/disable file filter logging. Valid values: `enable`, `disable`.
func (o ProfileFileFilterPtrOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Log
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter archive contents scan. Valid values: `enable`, `disable`.
func (o ProfileFileFilterPtrOutput) ScanArchiveContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.ScanArchiveContents
	}).(pulumi.StringPtrOutput)
}

// Enable/disable file filter. Valid values: `enable`, `disable`.
func (o ProfileFileFilterPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFileFilter) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ProfileFileFilterEntry struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
	Direction *string `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes []ProfileFileFilterEntryFileType `pulumi:"fileTypes"`
	// Add a file filter.
	Filter *string `pulumi:"filter"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected *string `pulumi:"passwordProtected"`
	// Protocols to apply with. Valid values: `http`, `ftp`.
	Protocol *string `pulumi:"protocol"`
}

// ProfileFileFilterEntryInput is an input type that accepts ProfileFileFilterEntryArgs and ProfileFileFilterEntryOutput values.
// You can construct a concrete instance of `ProfileFileFilterEntryInput` via:
//
//	ProfileFileFilterEntryArgs{...}
type ProfileFileFilterEntryInput interface {
	pulumi.Input

	ToProfileFileFilterEntryOutput() ProfileFileFilterEntryOutput
	ToProfileFileFilterEntryOutputWithContext(context.Context) ProfileFileFilterEntryOutput
}

type ProfileFileFilterEntryArgs struct {
	// Action taken for matched file. Valid values: `log`, `block`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Select file type. The structure of `fileType` block is documented below.
	FileTypes ProfileFileFilterEntryFileTypeArrayInput `pulumi:"fileTypes"`
	// Add a file filter.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Match password-protected files. Valid values: `yes`, `any`.
	PasswordProtected pulumi.StringPtrInput `pulumi:"passwordProtected"`
	// Protocols to apply with. Valid values: `http`, `ftp`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ProfileFileFilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFileFilterEntry)(nil)).Elem()
}

func (i ProfileFileFilterEntryArgs) ToProfileFileFilterEntryOutput() ProfileFileFilterEntryOutput {
	return i.ToProfileFileFilterEntryOutputWithContext(context.Background())
}

func (i ProfileFileFilterEntryArgs) ToProfileFileFilterEntryOutputWithContext(ctx context.Context) ProfileFileFilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFileFilterEntryOutput)
}

// ProfileFileFilterEntryArrayInput is an input type that accepts ProfileFileFilterEntryArray and ProfileFileFilterEntryArrayOutput values.
// You can construct a concrete instance of `ProfileFileFilterEntryArrayInput` via:
//
//	ProfileFileFilterEntryArray{ ProfileFileFilterEntryArgs{...} }
type ProfileFileFilterEntryArrayInput interface {
	pulumi.Input

	ToProfileFileFilterEntryArrayOutput() ProfileFileFilterEntryArrayOutput
	ToProfileFileFilterEntryArrayOutputWithContext(context.Context) ProfileFileFilterEntryArrayOutput
}

type ProfileFileFilterEntryArray []ProfileFileFilterEntryInput

func (ProfileFileFilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFileFilterEntry)(nil)).Elem()
}

func (i ProfileFileFilterEntryArray) ToProfileFileFilterEntryArrayOutput() ProfileFileFilterEntryArrayOutput {
	return i.ToProfileFileFilterEntryArrayOutputWithContext(context.Background())
}

func (i ProfileFileFilterEntryArray) ToProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) ProfileFileFilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFileFilterEntryArrayOutput)
}

type ProfileFileFilterEntryOutput struct{ *pulumi.OutputState }

func (ProfileFileFilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFileFilterEntry)(nil)).Elem()
}

func (o ProfileFileFilterEntryOutput) ToProfileFileFilterEntryOutput() ProfileFileFilterEntryOutput {
	return o
}

func (o ProfileFileFilterEntryOutput) ToProfileFileFilterEntryOutputWithContext(ctx context.Context) ProfileFileFilterEntryOutput {
	return o
}

// Action taken for matched file. Valid values: `log`, `block`.
func (o ProfileFileFilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o ProfileFileFilterEntryOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilterEntry) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Match files transmitted in the session's originating or reply direction. Valid values: `incoming`, `outgoing`, `any`.
func (o ProfileFileFilterEntryOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilterEntry) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Select file type. The structure of `fileType` block is documented below.
func (o ProfileFileFilterEntryOutput) FileTypes() ProfileFileFilterEntryFileTypeArrayOutput {
	return o.ApplyT(func(v ProfileFileFilterEntry) []ProfileFileFilterEntryFileType { return v.FileTypes }).(ProfileFileFilterEntryFileTypeArrayOutput)
}

// Add a file filter.
func (o ProfileFileFilterEntryOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilterEntry) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Match password-protected files. Valid values: `yes`, `any`.
func (o ProfileFileFilterEntryOutput) PasswordProtected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilterEntry) *string { return v.PasswordProtected }).(pulumi.StringPtrOutput)
}

// Protocols to apply with. Valid values: `http`, `ftp`.
func (o ProfileFileFilterEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilterEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ProfileFileFilterEntryArrayOutput struct{ *pulumi.OutputState }

func (ProfileFileFilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFileFilterEntry)(nil)).Elem()
}

func (o ProfileFileFilterEntryArrayOutput) ToProfileFileFilterEntryArrayOutput() ProfileFileFilterEntryArrayOutput {
	return o
}

func (o ProfileFileFilterEntryArrayOutput) ToProfileFileFilterEntryArrayOutputWithContext(ctx context.Context) ProfileFileFilterEntryArrayOutput {
	return o
}

func (o ProfileFileFilterEntryArrayOutput) Index(i pulumi.IntInput) ProfileFileFilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileFileFilterEntry {
		return vs[0].([]ProfileFileFilterEntry)[vs[1].(int)]
	}).(ProfileFileFilterEntryOutput)
}

type ProfileFileFilterEntryFileType struct {
	// File type name.
	Name *string `pulumi:"name"`
}

// ProfileFileFilterEntryFileTypeInput is an input type that accepts ProfileFileFilterEntryFileTypeArgs and ProfileFileFilterEntryFileTypeOutput values.
// You can construct a concrete instance of `ProfileFileFilterEntryFileTypeInput` via:
//
//	ProfileFileFilterEntryFileTypeArgs{...}
type ProfileFileFilterEntryFileTypeInput interface {
	pulumi.Input

	ToProfileFileFilterEntryFileTypeOutput() ProfileFileFilterEntryFileTypeOutput
	ToProfileFileFilterEntryFileTypeOutputWithContext(context.Context) ProfileFileFilterEntryFileTypeOutput
}

type ProfileFileFilterEntryFileTypeArgs struct {
	// File type name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileFileFilterEntryFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i ProfileFileFilterEntryFileTypeArgs) ToProfileFileFilterEntryFileTypeOutput() ProfileFileFilterEntryFileTypeOutput {
	return i.ToProfileFileFilterEntryFileTypeOutputWithContext(context.Background())
}

func (i ProfileFileFilterEntryFileTypeArgs) ToProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) ProfileFileFilterEntryFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFileFilterEntryFileTypeOutput)
}

// ProfileFileFilterEntryFileTypeArrayInput is an input type that accepts ProfileFileFilterEntryFileTypeArray and ProfileFileFilterEntryFileTypeArrayOutput values.
// You can construct a concrete instance of `ProfileFileFilterEntryFileTypeArrayInput` via:
//
//	ProfileFileFilterEntryFileTypeArray{ ProfileFileFilterEntryFileTypeArgs{...} }
type ProfileFileFilterEntryFileTypeArrayInput interface {
	pulumi.Input

	ToProfileFileFilterEntryFileTypeArrayOutput() ProfileFileFilterEntryFileTypeArrayOutput
	ToProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Context) ProfileFileFilterEntryFileTypeArrayOutput
}

type ProfileFileFilterEntryFileTypeArray []ProfileFileFilterEntryFileTypeInput

func (ProfileFileFilterEntryFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFileFilterEntryFileType)(nil)).Elem()
}

func (i ProfileFileFilterEntryFileTypeArray) ToProfileFileFilterEntryFileTypeArrayOutput() ProfileFileFilterEntryFileTypeArrayOutput {
	return i.ToProfileFileFilterEntryFileTypeArrayOutputWithContext(context.Background())
}

func (i ProfileFileFilterEntryFileTypeArray) ToProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) ProfileFileFilterEntryFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFileFilterEntryFileTypeArrayOutput)
}

type ProfileFileFilterEntryFileTypeOutput struct{ *pulumi.OutputState }

func (ProfileFileFilterEntryFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o ProfileFileFilterEntryFileTypeOutput) ToProfileFileFilterEntryFileTypeOutput() ProfileFileFilterEntryFileTypeOutput {
	return o
}

func (o ProfileFileFilterEntryFileTypeOutput) ToProfileFileFilterEntryFileTypeOutputWithContext(ctx context.Context) ProfileFileFilterEntryFileTypeOutput {
	return o
}

// File type name.
func (o ProfileFileFilterEntryFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFileFilterEntryFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileFileFilterEntryFileTypeArrayOutput struct{ *pulumi.OutputState }

func (ProfileFileFilterEntryFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFileFilterEntryFileType)(nil)).Elem()
}

func (o ProfileFileFilterEntryFileTypeArrayOutput) ToProfileFileFilterEntryFileTypeArrayOutput() ProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o ProfileFileFilterEntryFileTypeArrayOutput) ToProfileFileFilterEntryFileTypeArrayOutputWithContext(ctx context.Context) ProfileFileFilterEntryFileTypeArrayOutput {
	return o
}

func (o ProfileFileFilterEntryFileTypeArrayOutput) Index(i pulumi.IntInput) ProfileFileFilterEntryFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileFileFilterEntryFileType {
		return vs[0].([]ProfileFileFilterEntryFileType)[vs[1].(int)]
	}).(ProfileFileFilterEntryFileTypeOutput)
}

type ProfileFtgdWf struct {
	// Do not stop quota for these categories.
	ExemptQuota *string `pulumi:"exemptQuota"`
	// FortiGuard filters. The structure of `filters` block is documented below.
	Filters []ProfileFtgdWfFilter `pulumi:"filters"`
	// Maximum FortiGuard quota used by single page view in seconds (excludes streams).
	MaxQuotaTimeout *int `pulumi:"maxQuotaTimeout"`
	// Options for FortiGuard Web Filter. Valid values: `error-allow`, `rate-server-ip`, `connect-request-bypass`, `ftgd-disable`.
	Options *string `pulumi:"options"`
	// Allow web filter profile overrides.
	Ovrd *string `pulumi:"ovrd"`
	// FortiGuard traffic quota settings. The structure of `quota` block is documented below.
	Quotas []ProfileFtgdWfQuota `pulumi:"quotas"`
	// Enable/disable rating CRL by URL. Valid values: `disable`, `enable`.
	RateCrlUrls *string `pulumi:"rateCrlUrls"`
	// Enable/disable rating CSS by URL. Valid values: `disable`, `enable`.
	RateCssUrls *string `pulumi:"rateCssUrls"`
	// Enable/disable rating images by URL. Valid values: `disable`, `enable`.
	RateImageUrls *string `pulumi:"rateImageUrls"`
	// Enable/disable rating JavaScript by URL. Valid values: `disable`, `enable`.
	RateJavascriptUrls *string `pulumi:"rateJavascriptUrls"`
}

// ProfileFtgdWfInput is an input type that accepts ProfileFtgdWfArgs and ProfileFtgdWfOutput values.
// You can construct a concrete instance of `ProfileFtgdWfInput` via:
//
//	ProfileFtgdWfArgs{...}
type ProfileFtgdWfInput interface {
	pulumi.Input

	ToProfileFtgdWfOutput() ProfileFtgdWfOutput
	ToProfileFtgdWfOutputWithContext(context.Context) ProfileFtgdWfOutput
}

type ProfileFtgdWfArgs struct {
	// Do not stop quota for these categories.
	ExemptQuota pulumi.StringPtrInput `pulumi:"exemptQuota"`
	// FortiGuard filters. The structure of `filters` block is documented below.
	Filters ProfileFtgdWfFilterArrayInput `pulumi:"filters"`
	// Maximum FortiGuard quota used by single page view in seconds (excludes streams).
	MaxQuotaTimeout pulumi.IntPtrInput `pulumi:"maxQuotaTimeout"`
	// Options for FortiGuard Web Filter. Valid values: `error-allow`, `rate-server-ip`, `connect-request-bypass`, `ftgd-disable`.
	Options pulumi.StringPtrInput `pulumi:"options"`
	// Allow web filter profile overrides.
	Ovrd pulumi.StringPtrInput `pulumi:"ovrd"`
	// FortiGuard traffic quota settings. The structure of `quota` block is documented below.
	Quotas ProfileFtgdWfQuotaArrayInput `pulumi:"quotas"`
	// Enable/disable rating CRL by URL. Valid values: `disable`, `enable`.
	RateCrlUrls pulumi.StringPtrInput `pulumi:"rateCrlUrls"`
	// Enable/disable rating CSS by URL. Valid values: `disable`, `enable`.
	RateCssUrls pulumi.StringPtrInput `pulumi:"rateCssUrls"`
	// Enable/disable rating images by URL. Valid values: `disable`, `enable`.
	RateImageUrls pulumi.StringPtrInput `pulumi:"rateImageUrls"`
	// Enable/disable rating JavaScript by URL. Valid values: `disable`, `enable`.
	RateJavascriptUrls pulumi.StringPtrInput `pulumi:"rateJavascriptUrls"`
}

func (ProfileFtgdWfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtgdWf)(nil)).Elem()
}

func (i ProfileFtgdWfArgs) ToProfileFtgdWfOutput() ProfileFtgdWfOutput {
	return i.ToProfileFtgdWfOutputWithContext(context.Background())
}

func (i ProfileFtgdWfArgs) ToProfileFtgdWfOutputWithContext(ctx context.Context) ProfileFtgdWfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfOutput)
}

func (i ProfileFtgdWfArgs) ToProfileFtgdWfPtrOutput() ProfileFtgdWfPtrOutput {
	return i.ToProfileFtgdWfPtrOutputWithContext(context.Background())
}

func (i ProfileFtgdWfArgs) ToProfileFtgdWfPtrOutputWithContext(ctx context.Context) ProfileFtgdWfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfOutput).ToProfileFtgdWfPtrOutputWithContext(ctx)
}

// ProfileFtgdWfPtrInput is an input type that accepts ProfileFtgdWfArgs, ProfileFtgdWfPtr and ProfileFtgdWfPtrOutput values.
// You can construct a concrete instance of `ProfileFtgdWfPtrInput` via:
//
//	        ProfileFtgdWfArgs{...}
//
//	or:
//
//	        nil
type ProfileFtgdWfPtrInput interface {
	pulumi.Input

	ToProfileFtgdWfPtrOutput() ProfileFtgdWfPtrOutput
	ToProfileFtgdWfPtrOutputWithContext(context.Context) ProfileFtgdWfPtrOutput
}

type profileFtgdWfPtrType ProfileFtgdWfArgs

func ProfileFtgdWfPtr(v *ProfileFtgdWfArgs) ProfileFtgdWfPtrInput {
	return (*profileFtgdWfPtrType)(v)
}

func (*profileFtgdWfPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileFtgdWf)(nil)).Elem()
}

func (i *profileFtgdWfPtrType) ToProfileFtgdWfPtrOutput() ProfileFtgdWfPtrOutput {
	return i.ToProfileFtgdWfPtrOutputWithContext(context.Background())
}

func (i *profileFtgdWfPtrType) ToProfileFtgdWfPtrOutputWithContext(ctx context.Context) ProfileFtgdWfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfPtrOutput)
}

type ProfileFtgdWfOutput struct{ *pulumi.OutputState }

func (ProfileFtgdWfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtgdWf)(nil)).Elem()
}

func (o ProfileFtgdWfOutput) ToProfileFtgdWfOutput() ProfileFtgdWfOutput {
	return o
}

func (o ProfileFtgdWfOutput) ToProfileFtgdWfOutputWithContext(ctx context.Context) ProfileFtgdWfOutput {
	return o
}

func (o ProfileFtgdWfOutput) ToProfileFtgdWfPtrOutput() ProfileFtgdWfPtrOutput {
	return o.ToProfileFtgdWfPtrOutputWithContext(context.Background())
}

func (o ProfileFtgdWfOutput) ToProfileFtgdWfPtrOutputWithContext(ctx context.Context) ProfileFtgdWfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileFtgdWf) *ProfileFtgdWf {
		return &v
	}).(ProfileFtgdWfPtrOutput)
}

// Do not stop quota for these categories.
func (o ProfileFtgdWfOutput) ExemptQuota() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWf) *string { return v.ExemptQuota }).(pulumi.StringPtrOutput)
}

// FortiGuard filters. The structure of `filters` block is documented below.
func (o ProfileFtgdWfOutput) Filters() ProfileFtgdWfFilterArrayOutput {
	return o.ApplyT(func(v ProfileFtgdWf) []ProfileFtgdWfFilter { return v.Filters }).(ProfileFtgdWfFilterArrayOutput)
}

// Maximum FortiGuard quota used by single page view in seconds (excludes streams).
func (o ProfileFtgdWfOutput) MaxQuotaTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWf) *int { return v.MaxQuotaTimeout }).(pulumi.IntPtrOutput)
}

// Options for FortiGuard Web Filter. Valid values: `error-allow`, `rate-server-ip`, `connect-request-bypass`, `ftgd-disable`.
func (o ProfileFtgdWfOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWf) *string { return v.Options }).(pulumi.StringPtrOutput)
}

// Allow web filter profile overrides.
func (o ProfileFtgdWfOutput) Ovrd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWf) *string { return v.Ovrd }).(pulumi.StringPtrOutput)
}

// FortiGuard traffic quota settings. The structure of `quota` block is documented below.
func (o ProfileFtgdWfOutput) Quotas() ProfileFtgdWfQuotaArrayOutput {
	return o.ApplyT(func(v ProfileFtgdWf) []ProfileFtgdWfQuota { return v.Quotas }).(ProfileFtgdWfQuotaArrayOutput)
}

// Enable/disable rating CRL by URL. Valid values: `disable`, `enable`.
func (o ProfileFtgdWfOutput) RateCrlUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWf) *string { return v.RateCrlUrls }).(pulumi.StringPtrOutput)
}

// Enable/disable rating CSS by URL. Valid values: `disable`, `enable`.
func (o ProfileFtgdWfOutput) RateCssUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWf) *string { return v.RateCssUrls }).(pulumi.StringPtrOutput)
}

// Enable/disable rating images by URL. Valid values: `disable`, `enable`.
func (o ProfileFtgdWfOutput) RateImageUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWf) *string { return v.RateImageUrls }).(pulumi.StringPtrOutput)
}

// Enable/disable rating JavaScript by URL. Valid values: `disable`, `enable`.
func (o ProfileFtgdWfOutput) RateJavascriptUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWf) *string { return v.RateJavascriptUrls }).(pulumi.StringPtrOutput)
}

type ProfileFtgdWfPtrOutput struct{ *pulumi.OutputState }

func (ProfileFtgdWfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileFtgdWf)(nil)).Elem()
}

func (o ProfileFtgdWfPtrOutput) ToProfileFtgdWfPtrOutput() ProfileFtgdWfPtrOutput {
	return o
}

func (o ProfileFtgdWfPtrOutput) ToProfileFtgdWfPtrOutputWithContext(ctx context.Context) ProfileFtgdWfPtrOutput {
	return o
}

func (o ProfileFtgdWfPtrOutput) Elem() ProfileFtgdWfOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) ProfileFtgdWf {
		if v != nil {
			return *v
		}
		var ret ProfileFtgdWf
		return ret
	}).(ProfileFtgdWfOutput)
}

// Do not stop quota for these categories.
func (o ProfileFtgdWfPtrOutput) ExemptQuota() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.ExemptQuota
	}).(pulumi.StringPtrOutput)
}

// FortiGuard filters. The structure of `filters` block is documented below.
func (o ProfileFtgdWfPtrOutput) Filters() ProfileFtgdWfFilterArrayOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) []ProfileFtgdWfFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(ProfileFtgdWfFilterArrayOutput)
}

// Maximum FortiGuard quota used by single page view in seconds (excludes streams).
func (o ProfileFtgdWfPtrOutput) MaxQuotaTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) *int {
		if v == nil {
			return nil
		}
		return v.MaxQuotaTimeout
	}).(pulumi.IntPtrOutput)
}

// Options for FortiGuard Web Filter. Valid values: `error-allow`, `rate-server-ip`, `connect-request-bypass`, `ftgd-disable`.
func (o ProfileFtgdWfPtrOutput) Options() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringPtrOutput)
}

// Allow web filter profile overrides.
func (o ProfileFtgdWfPtrOutput) Ovrd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.Ovrd
	}).(pulumi.StringPtrOutput)
}

// FortiGuard traffic quota settings. The structure of `quota` block is documented below.
func (o ProfileFtgdWfPtrOutput) Quotas() ProfileFtgdWfQuotaArrayOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) []ProfileFtgdWfQuota {
		if v == nil {
			return nil
		}
		return v.Quotas
	}).(ProfileFtgdWfQuotaArrayOutput)
}

// Enable/disable rating CRL by URL. Valid values: `disable`, `enable`.
func (o ProfileFtgdWfPtrOutput) RateCrlUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.RateCrlUrls
	}).(pulumi.StringPtrOutput)
}

// Enable/disable rating CSS by URL. Valid values: `disable`, `enable`.
func (o ProfileFtgdWfPtrOutput) RateCssUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.RateCssUrls
	}).(pulumi.StringPtrOutput)
}

// Enable/disable rating images by URL. Valid values: `disable`, `enable`.
func (o ProfileFtgdWfPtrOutput) RateImageUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.RateImageUrls
	}).(pulumi.StringPtrOutput)
}

// Enable/disable rating JavaScript by URL. Valid values: `disable`, `enable`.
func (o ProfileFtgdWfPtrOutput) RateJavascriptUrls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileFtgdWf) *string {
		if v == nil {
			return nil
		}
		return v.RateJavascriptUrls
	}).(pulumi.StringPtrOutput)
}

type ProfileFtgdWfFilter struct {
	// Action to take for matches. Valid values: `block`, `authenticate`, `monitor`, `warning`.
	Action *string `pulumi:"action"`
	// Groups with permission to authenticate. The structure of `authUsrGrp` block is documented below.
	AuthUsrGrps []ProfileFtgdWfFilterAuthUsrGrp `pulumi:"authUsrGrps"`
	// Categories and groups the filter examines.
	Category *int `pulumi:"category"`
	// ID number.
	Id *int `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log *string `pulumi:"log"`
	// Override replacement message.
	OverrideReplacemsg *string `pulumi:"overrideReplacemsg"`
	// Duration of warnings.
	WarnDuration *string `pulumi:"warnDuration"`
	// Re-display warning after closing browser or after a timeout. Valid values: `session`, `timeout`.
	WarningDurationType *string `pulumi:"warningDurationType"`
	// Warning prompts in each category or each domain. Valid values: `per-domain`, `per-category`.
	WarningPrompt *string `pulumi:"warningPrompt"`
}

// ProfileFtgdWfFilterInput is an input type that accepts ProfileFtgdWfFilterArgs and ProfileFtgdWfFilterOutput values.
// You can construct a concrete instance of `ProfileFtgdWfFilterInput` via:
//
//	ProfileFtgdWfFilterArgs{...}
type ProfileFtgdWfFilterInput interface {
	pulumi.Input

	ToProfileFtgdWfFilterOutput() ProfileFtgdWfFilterOutput
	ToProfileFtgdWfFilterOutputWithContext(context.Context) ProfileFtgdWfFilterOutput
}

type ProfileFtgdWfFilterArgs struct {
	// Action to take for matches. Valid values: `block`, `authenticate`, `monitor`, `warning`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Groups with permission to authenticate. The structure of `authUsrGrp` block is documented below.
	AuthUsrGrps ProfileFtgdWfFilterAuthUsrGrpArrayInput `pulumi:"authUsrGrps"`
	// Categories and groups the filter examines.
	Category pulumi.IntPtrInput `pulumi:"category"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Enable/disable logging. Valid values: `enable`, `disable`.
	Log pulumi.StringPtrInput `pulumi:"log"`
	// Override replacement message.
	OverrideReplacemsg pulumi.StringPtrInput `pulumi:"overrideReplacemsg"`
	// Duration of warnings.
	WarnDuration pulumi.StringPtrInput `pulumi:"warnDuration"`
	// Re-display warning after closing browser or after a timeout. Valid values: `session`, `timeout`.
	WarningDurationType pulumi.StringPtrInput `pulumi:"warningDurationType"`
	// Warning prompts in each category or each domain. Valid values: `per-domain`, `per-category`.
	WarningPrompt pulumi.StringPtrInput `pulumi:"warningPrompt"`
}

func (ProfileFtgdWfFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtgdWfFilter)(nil)).Elem()
}

func (i ProfileFtgdWfFilterArgs) ToProfileFtgdWfFilterOutput() ProfileFtgdWfFilterOutput {
	return i.ToProfileFtgdWfFilterOutputWithContext(context.Background())
}

func (i ProfileFtgdWfFilterArgs) ToProfileFtgdWfFilterOutputWithContext(ctx context.Context) ProfileFtgdWfFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfFilterOutput)
}

// ProfileFtgdWfFilterArrayInput is an input type that accepts ProfileFtgdWfFilterArray and ProfileFtgdWfFilterArrayOutput values.
// You can construct a concrete instance of `ProfileFtgdWfFilterArrayInput` via:
//
//	ProfileFtgdWfFilterArray{ ProfileFtgdWfFilterArgs{...} }
type ProfileFtgdWfFilterArrayInput interface {
	pulumi.Input

	ToProfileFtgdWfFilterArrayOutput() ProfileFtgdWfFilterArrayOutput
	ToProfileFtgdWfFilterArrayOutputWithContext(context.Context) ProfileFtgdWfFilterArrayOutput
}

type ProfileFtgdWfFilterArray []ProfileFtgdWfFilterInput

func (ProfileFtgdWfFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFtgdWfFilter)(nil)).Elem()
}

func (i ProfileFtgdWfFilterArray) ToProfileFtgdWfFilterArrayOutput() ProfileFtgdWfFilterArrayOutput {
	return i.ToProfileFtgdWfFilterArrayOutputWithContext(context.Background())
}

func (i ProfileFtgdWfFilterArray) ToProfileFtgdWfFilterArrayOutputWithContext(ctx context.Context) ProfileFtgdWfFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfFilterArrayOutput)
}

type ProfileFtgdWfFilterOutput struct{ *pulumi.OutputState }

func (ProfileFtgdWfFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtgdWfFilter)(nil)).Elem()
}

func (o ProfileFtgdWfFilterOutput) ToProfileFtgdWfFilterOutput() ProfileFtgdWfFilterOutput {
	return o
}

func (o ProfileFtgdWfFilterOutput) ToProfileFtgdWfFilterOutputWithContext(ctx context.Context) ProfileFtgdWfFilterOutput {
	return o
}

// Action to take for matches. Valid values: `block`, `authenticate`, `monitor`, `warning`.
func (o ProfileFtgdWfFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Groups with permission to authenticate. The structure of `authUsrGrp` block is documented below.
func (o ProfileFtgdWfFilterOutput) AuthUsrGrps() ProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) []ProfileFtgdWfFilterAuthUsrGrp { return v.AuthUsrGrps }).(ProfileFtgdWfFilterAuthUsrGrpArrayOutput)
}

// Categories and groups the filter examines.
func (o ProfileFtgdWfFilterOutput) Category() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) *int { return v.Category }).(pulumi.IntPtrOutput)
}

// ID number.
func (o ProfileFtgdWfFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Enable/disable logging. Valid values: `enable`, `disable`.
func (o ProfileFtgdWfFilterOutput) Log() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) *string { return v.Log }).(pulumi.StringPtrOutput)
}

// Override replacement message.
func (o ProfileFtgdWfFilterOutput) OverrideReplacemsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) *string { return v.OverrideReplacemsg }).(pulumi.StringPtrOutput)
}

// Duration of warnings.
func (o ProfileFtgdWfFilterOutput) WarnDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) *string { return v.WarnDuration }).(pulumi.StringPtrOutput)
}

// Re-display warning after closing browser or after a timeout. Valid values: `session`, `timeout`.
func (o ProfileFtgdWfFilterOutput) WarningDurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) *string { return v.WarningDurationType }).(pulumi.StringPtrOutput)
}

// Warning prompts in each category or each domain. Valid values: `per-domain`, `per-category`.
func (o ProfileFtgdWfFilterOutput) WarningPrompt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilter) *string { return v.WarningPrompt }).(pulumi.StringPtrOutput)
}

type ProfileFtgdWfFilterArrayOutput struct{ *pulumi.OutputState }

func (ProfileFtgdWfFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFtgdWfFilter)(nil)).Elem()
}

func (o ProfileFtgdWfFilterArrayOutput) ToProfileFtgdWfFilterArrayOutput() ProfileFtgdWfFilterArrayOutput {
	return o
}

func (o ProfileFtgdWfFilterArrayOutput) ToProfileFtgdWfFilterArrayOutputWithContext(ctx context.Context) ProfileFtgdWfFilterArrayOutput {
	return o
}

func (o ProfileFtgdWfFilterArrayOutput) Index(i pulumi.IntInput) ProfileFtgdWfFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileFtgdWfFilter {
		return vs[0].([]ProfileFtgdWfFilter)[vs[1].(int)]
	}).(ProfileFtgdWfFilterOutput)
}

type ProfileFtgdWfFilterAuthUsrGrp struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// ProfileFtgdWfFilterAuthUsrGrpInput is an input type that accepts ProfileFtgdWfFilterAuthUsrGrpArgs and ProfileFtgdWfFilterAuthUsrGrpOutput values.
// You can construct a concrete instance of `ProfileFtgdWfFilterAuthUsrGrpInput` via:
//
//	ProfileFtgdWfFilterAuthUsrGrpArgs{...}
type ProfileFtgdWfFilterAuthUsrGrpInput interface {
	pulumi.Input

	ToProfileFtgdWfFilterAuthUsrGrpOutput() ProfileFtgdWfFilterAuthUsrGrpOutput
	ToProfileFtgdWfFilterAuthUsrGrpOutputWithContext(context.Context) ProfileFtgdWfFilterAuthUsrGrpOutput
}

type ProfileFtgdWfFilterAuthUsrGrpArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileFtgdWfFilterAuthUsrGrpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtgdWfFilterAuthUsrGrp)(nil)).Elem()
}

func (i ProfileFtgdWfFilterAuthUsrGrpArgs) ToProfileFtgdWfFilterAuthUsrGrpOutput() ProfileFtgdWfFilterAuthUsrGrpOutput {
	return i.ToProfileFtgdWfFilterAuthUsrGrpOutputWithContext(context.Background())
}

func (i ProfileFtgdWfFilterAuthUsrGrpArgs) ToProfileFtgdWfFilterAuthUsrGrpOutputWithContext(ctx context.Context) ProfileFtgdWfFilterAuthUsrGrpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfFilterAuthUsrGrpOutput)
}

// ProfileFtgdWfFilterAuthUsrGrpArrayInput is an input type that accepts ProfileFtgdWfFilterAuthUsrGrpArray and ProfileFtgdWfFilterAuthUsrGrpArrayOutput values.
// You can construct a concrete instance of `ProfileFtgdWfFilterAuthUsrGrpArrayInput` via:
//
//	ProfileFtgdWfFilterAuthUsrGrpArray{ ProfileFtgdWfFilterAuthUsrGrpArgs{...} }
type ProfileFtgdWfFilterAuthUsrGrpArrayInput interface {
	pulumi.Input

	ToProfileFtgdWfFilterAuthUsrGrpArrayOutput() ProfileFtgdWfFilterAuthUsrGrpArrayOutput
	ToProfileFtgdWfFilterAuthUsrGrpArrayOutputWithContext(context.Context) ProfileFtgdWfFilterAuthUsrGrpArrayOutput
}

type ProfileFtgdWfFilterAuthUsrGrpArray []ProfileFtgdWfFilterAuthUsrGrpInput

func (ProfileFtgdWfFilterAuthUsrGrpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFtgdWfFilterAuthUsrGrp)(nil)).Elem()
}

func (i ProfileFtgdWfFilterAuthUsrGrpArray) ToProfileFtgdWfFilterAuthUsrGrpArrayOutput() ProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return i.ToProfileFtgdWfFilterAuthUsrGrpArrayOutputWithContext(context.Background())
}

func (i ProfileFtgdWfFilterAuthUsrGrpArray) ToProfileFtgdWfFilterAuthUsrGrpArrayOutputWithContext(ctx context.Context) ProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfFilterAuthUsrGrpArrayOutput)
}

type ProfileFtgdWfFilterAuthUsrGrpOutput struct{ *pulumi.OutputState }

func (ProfileFtgdWfFilterAuthUsrGrpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtgdWfFilterAuthUsrGrp)(nil)).Elem()
}

func (o ProfileFtgdWfFilterAuthUsrGrpOutput) ToProfileFtgdWfFilterAuthUsrGrpOutput() ProfileFtgdWfFilterAuthUsrGrpOutput {
	return o
}

func (o ProfileFtgdWfFilterAuthUsrGrpOutput) ToProfileFtgdWfFilterAuthUsrGrpOutputWithContext(ctx context.Context) ProfileFtgdWfFilterAuthUsrGrpOutput {
	return o
}

// User group name.
func (o ProfileFtgdWfFilterAuthUsrGrpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfFilterAuthUsrGrp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileFtgdWfFilterAuthUsrGrpArrayOutput struct{ *pulumi.OutputState }

func (ProfileFtgdWfFilterAuthUsrGrpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFtgdWfFilterAuthUsrGrp)(nil)).Elem()
}

func (o ProfileFtgdWfFilterAuthUsrGrpArrayOutput) ToProfileFtgdWfFilterAuthUsrGrpArrayOutput() ProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return o
}

func (o ProfileFtgdWfFilterAuthUsrGrpArrayOutput) ToProfileFtgdWfFilterAuthUsrGrpArrayOutputWithContext(ctx context.Context) ProfileFtgdWfFilterAuthUsrGrpArrayOutput {
	return o
}

func (o ProfileFtgdWfFilterAuthUsrGrpArrayOutput) Index(i pulumi.IntInput) ProfileFtgdWfFilterAuthUsrGrpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileFtgdWfFilterAuthUsrGrp {
		return vs[0].([]ProfileFtgdWfFilterAuthUsrGrp)[vs[1].(int)]
	}).(ProfileFtgdWfFilterAuthUsrGrpOutput)
}

type ProfileFtgdWfQuota struct {
	// FortiGuard categories to apply quota to (category action must be set to monitor).
	Category *string `pulumi:"category"`
	// Duration of quota.
	Duration *string `pulumi:"duration"`
	// ID number.
	Id *int `pulumi:"id"`
	// Override replacement message.
	OverrideReplacemsg *string `pulumi:"overrideReplacemsg"`
	// Quota type. Valid values: `time`, `traffic`.
	Type *string `pulumi:"type"`
	// Traffic quota unit of measurement. Valid values: `B`, `KB`, `MB`, `GB`.
	Unit *string `pulumi:"unit"`
	// Traffic quota value.
	Value *int `pulumi:"value"`
}

// ProfileFtgdWfQuotaInput is an input type that accepts ProfileFtgdWfQuotaArgs and ProfileFtgdWfQuotaOutput values.
// You can construct a concrete instance of `ProfileFtgdWfQuotaInput` via:
//
//	ProfileFtgdWfQuotaArgs{...}
type ProfileFtgdWfQuotaInput interface {
	pulumi.Input

	ToProfileFtgdWfQuotaOutput() ProfileFtgdWfQuotaOutput
	ToProfileFtgdWfQuotaOutputWithContext(context.Context) ProfileFtgdWfQuotaOutput
}

type ProfileFtgdWfQuotaArgs struct {
	// FortiGuard categories to apply quota to (category action must be set to monitor).
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Duration of quota.
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// ID number.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Override replacement message.
	OverrideReplacemsg pulumi.StringPtrInput `pulumi:"overrideReplacemsg"`
	// Quota type. Valid values: `time`, `traffic`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Traffic quota unit of measurement. Valid values: `B`, `KB`, `MB`, `GB`.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Traffic quota value.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (ProfileFtgdWfQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtgdWfQuota)(nil)).Elem()
}

func (i ProfileFtgdWfQuotaArgs) ToProfileFtgdWfQuotaOutput() ProfileFtgdWfQuotaOutput {
	return i.ToProfileFtgdWfQuotaOutputWithContext(context.Background())
}

func (i ProfileFtgdWfQuotaArgs) ToProfileFtgdWfQuotaOutputWithContext(ctx context.Context) ProfileFtgdWfQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfQuotaOutput)
}

// ProfileFtgdWfQuotaArrayInput is an input type that accepts ProfileFtgdWfQuotaArray and ProfileFtgdWfQuotaArrayOutput values.
// You can construct a concrete instance of `ProfileFtgdWfQuotaArrayInput` via:
//
//	ProfileFtgdWfQuotaArray{ ProfileFtgdWfQuotaArgs{...} }
type ProfileFtgdWfQuotaArrayInput interface {
	pulumi.Input

	ToProfileFtgdWfQuotaArrayOutput() ProfileFtgdWfQuotaArrayOutput
	ToProfileFtgdWfQuotaArrayOutputWithContext(context.Context) ProfileFtgdWfQuotaArrayOutput
}

type ProfileFtgdWfQuotaArray []ProfileFtgdWfQuotaInput

func (ProfileFtgdWfQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFtgdWfQuota)(nil)).Elem()
}

func (i ProfileFtgdWfQuotaArray) ToProfileFtgdWfQuotaArrayOutput() ProfileFtgdWfQuotaArrayOutput {
	return i.ToProfileFtgdWfQuotaArrayOutputWithContext(context.Background())
}

func (i ProfileFtgdWfQuotaArray) ToProfileFtgdWfQuotaArrayOutputWithContext(ctx context.Context) ProfileFtgdWfQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileFtgdWfQuotaArrayOutput)
}

type ProfileFtgdWfQuotaOutput struct{ *pulumi.OutputState }

func (ProfileFtgdWfQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileFtgdWfQuota)(nil)).Elem()
}

func (o ProfileFtgdWfQuotaOutput) ToProfileFtgdWfQuotaOutput() ProfileFtgdWfQuotaOutput {
	return o
}

func (o ProfileFtgdWfQuotaOutput) ToProfileFtgdWfQuotaOutputWithContext(ctx context.Context) ProfileFtgdWfQuotaOutput {
	return o
}

// FortiGuard categories to apply quota to (category action must be set to monitor).
func (o ProfileFtgdWfQuotaOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfQuota) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Duration of quota.
func (o ProfileFtgdWfQuotaOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfQuota) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// ID number.
func (o ProfileFtgdWfQuotaOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfQuota) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Override replacement message.
func (o ProfileFtgdWfQuotaOutput) OverrideReplacemsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfQuota) *string { return v.OverrideReplacemsg }).(pulumi.StringPtrOutput)
}

// Quota type. Valid values: `time`, `traffic`.
func (o ProfileFtgdWfQuotaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfQuota) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Traffic quota unit of measurement. Valid values: `B`, `KB`, `MB`, `GB`.
func (o ProfileFtgdWfQuotaOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfQuota) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Traffic quota value.
func (o ProfileFtgdWfQuotaOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileFtgdWfQuota) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ProfileFtgdWfQuotaArrayOutput struct{ *pulumi.OutputState }

func (ProfileFtgdWfQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileFtgdWfQuota)(nil)).Elem()
}

func (o ProfileFtgdWfQuotaArrayOutput) ToProfileFtgdWfQuotaArrayOutput() ProfileFtgdWfQuotaArrayOutput {
	return o
}

func (o ProfileFtgdWfQuotaArrayOutput) ToProfileFtgdWfQuotaArrayOutputWithContext(ctx context.Context) ProfileFtgdWfQuotaArrayOutput {
	return o
}

func (o ProfileFtgdWfQuotaArrayOutput) Index(i pulumi.IntInput) ProfileFtgdWfQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileFtgdWfQuota {
		return vs[0].([]ProfileFtgdWfQuota)[vs[1].(int)]
	}).(ProfileFtgdWfQuotaOutput)
}

type ProfileOverride struct {
	// Allow/deny browser-based (cookie) overrides. Valid values: `allow`, `deny`.
	OvrdCookie *string `pulumi:"ovrdCookie"`
	// Override duration.
	OvrdDur *string `pulumi:"ovrdDur"`
	// Override duration mode. Valid values: `constant`, `ask`.
	OvrdDurMode *string `pulumi:"ovrdDurMode"`
	// Override scope. Valid values: `user`, `user-group`, `ip`, `browser`, `ask`.
	OvrdScope *string `pulumi:"ovrdScope"`
	// User groups with permission to use the override. The structure of `ovrdUserGroup` block is documented below.
	OvrdUserGroups []ProfileOverrideOvrdUserGroup `pulumi:"ovrdUserGroups"`
	// Profile attribute to retrieve from the RADIUS server. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	ProfileAttribute *string `pulumi:"profileAttribute"`
	// Override profile type. Valid values: `list`, `radius`.
	ProfileType *string `pulumi:"profileType"`
	// Web filter profile with permission to create overrides. The structure of `profile` block is documented below.
	Profiles []ProfileOverrideProfile `pulumi:"profiles"`
}

// ProfileOverrideInput is an input type that accepts ProfileOverrideArgs and ProfileOverrideOutput values.
// You can construct a concrete instance of `ProfileOverrideInput` via:
//
//	ProfileOverrideArgs{...}
type ProfileOverrideInput interface {
	pulumi.Input

	ToProfileOverrideOutput() ProfileOverrideOutput
	ToProfileOverrideOutputWithContext(context.Context) ProfileOverrideOutput
}

type ProfileOverrideArgs struct {
	// Allow/deny browser-based (cookie) overrides. Valid values: `allow`, `deny`.
	OvrdCookie pulumi.StringPtrInput `pulumi:"ovrdCookie"`
	// Override duration.
	OvrdDur pulumi.StringPtrInput `pulumi:"ovrdDur"`
	// Override duration mode. Valid values: `constant`, `ask`.
	OvrdDurMode pulumi.StringPtrInput `pulumi:"ovrdDurMode"`
	// Override scope. Valid values: `user`, `user-group`, `ip`, `browser`, `ask`.
	OvrdScope pulumi.StringPtrInput `pulumi:"ovrdScope"`
	// User groups with permission to use the override. The structure of `ovrdUserGroup` block is documented below.
	OvrdUserGroups ProfileOverrideOvrdUserGroupArrayInput `pulumi:"ovrdUserGroups"`
	// Profile attribute to retrieve from the RADIUS server. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
	ProfileAttribute pulumi.StringPtrInput `pulumi:"profileAttribute"`
	// Override profile type. Valid values: `list`, `radius`.
	ProfileType pulumi.StringPtrInput `pulumi:"profileType"`
	// Web filter profile with permission to create overrides. The structure of `profile` block is documented below.
	Profiles ProfileOverrideProfileArrayInput `pulumi:"profiles"`
}

func (ProfileOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileOverride)(nil)).Elem()
}

func (i ProfileOverrideArgs) ToProfileOverrideOutput() ProfileOverrideOutput {
	return i.ToProfileOverrideOutputWithContext(context.Background())
}

func (i ProfileOverrideArgs) ToProfileOverrideOutputWithContext(ctx context.Context) ProfileOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOverrideOutput)
}

func (i ProfileOverrideArgs) ToProfileOverridePtrOutput() ProfileOverridePtrOutput {
	return i.ToProfileOverridePtrOutputWithContext(context.Background())
}

func (i ProfileOverrideArgs) ToProfileOverridePtrOutputWithContext(ctx context.Context) ProfileOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOverrideOutput).ToProfileOverridePtrOutputWithContext(ctx)
}

// ProfileOverridePtrInput is an input type that accepts ProfileOverrideArgs, ProfileOverridePtr and ProfileOverridePtrOutput values.
// You can construct a concrete instance of `ProfileOverridePtrInput` via:
//
//	        ProfileOverrideArgs{...}
//
//	or:
//
//	        nil
type ProfileOverridePtrInput interface {
	pulumi.Input

	ToProfileOverridePtrOutput() ProfileOverridePtrOutput
	ToProfileOverridePtrOutputWithContext(context.Context) ProfileOverridePtrOutput
}

type profileOverridePtrType ProfileOverrideArgs

func ProfileOverridePtr(v *ProfileOverrideArgs) ProfileOverridePtrInput {
	return (*profileOverridePtrType)(v)
}

func (*profileOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileOverride)(nil)).Elem()
}

func (i *profileOverridePtrType) ToProfileOverridePtrOutput() ProfileOverridePtrOutput {
	return i.ToProfileOverridePtrOutputWithContext(context.Background())
}

func (i *profileOverridePtrType) ToProfileOverridePtrOutputWithContext(ctx context.Context) ProfileOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOverridePtrOutput)
}

type ProfileOverrideOutput struct{ *pulumi.OutputState }

func (ProfileOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileOverride)(nil)).Elem()
}

func (o ProfileOverrideOutput) ToProfileOverrideOutput() ProfileOverrideOutput {
	return o
}

func (o ProfileOverrideOutput) ToProfileOverrideOutputWithContext(ctx context.Context) ProfileOverrideOutput {
	return o
}

func (o ProfileOverrideOutput) ToProfileOverridePtrOutput() ProfileOverridePtrOutput {
	return o.ToProfileOverridePtrOutputWithContext(context.Background())
}

func (o ProfileOverrideOutput) ToProfileOverridePtrOutputWithContext(ctx context.Context) ProfileOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileOverride) *ProfileOverride {
		return &v
	}).(ProfileOverridePtrOutput)
}

// Allow/deny browser-based (cookie) overrides. Valid values: `allow`, `deny`.
func (o ProfileOverrideOutput) OvrdCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOverride) *string { return v.OvrdCookie }).(pulumi.StringPtrOutput)
}

// Override duration.
func (o ProfileOverrideOutput) OvrdDur() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOverride) *string { return v.OvrdDur }).(pulumi.StringPtrOutput)
}

// Override duration mode. Valid values: `constant`, `ask`.
func (o ProfileOverrideOutput) OvrdDurMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOverride) *string { return v.OvrdDurMode }).(pulumi.StringPtrOutput)
}

// Override scope. Valid values: `user`, `user-group`, `ip`, `browser`, `ask`.
func (o ProfileOverrideOutput) OvrdScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOverride) *string { return v.OvrdScope }).(pulumi.StringPtrOutput)
}

// User groups with permission to use the override. The structure of `ovrdUserGroup` block is documented below.
func (o ProfileOverrideOutput) OvrdUserGroups() ProfileOverrideOvrdUserGroupArrayOutput {
	return o.ApplyT(func(v ProfileOverride) []ProfileOverrideOvrdUserGroup { return v.OvrdUserGroups }).(ProfileOverrideOvrdUserGroupArrayOutput)
}

// Profile attribute to retrieve from the RADIUS server. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
func (o ProfileOverrideOutput) ProfileAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOverride) *string { return v.ProfileAttribute }).(pulumi.StringPtrOutput)
}

// Override profile type. Valid values: `list`, `radius`.
func (o ProfileOverrideOutput) ProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOverride) *string { return v.ProfileType }).(pulumi.StringPtrOutput)
}

// Web filter profile with permission to create overrides. The structure of `profile` block is documented below.
func (o ProfileOverrideOutput) Profiles() ProfileOverrideProfileArrayOutput {
	return o.ApplyT(func(v ProfileOverride) []ProfileOverrideProfile { return v.Profiles }).(ProfileOverrideProfileArrayOutput)
}

type ProfileOverridePtrOutput struct{ *pulumi.OutputState }

func (ProfileOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileOverride)(nil)).Elem()
}

func (o ProfileOverridePtrOutput) ToProfileOverridePtrOutput() ProfileOverridePtrOutput {
	return o
}

func (o ProfileOverridePtrOutput) ToProfileOverridePtrOutputWithContext(ctx context.Context) ProfileOverridePtrOutput {
	return o
}

func (o ProfileOverridePtrOutput) Elem() ProfileOverrideOutput {
	return o.ApplyT(func(v *ProfileOverride) ProfileOverride {
		if v != nil {
			return *v
		}
		var ret ProfileOverride
		return ret
	}).(ProfileOverrideOutput)
}

// Allow/deny browser-based (cookie) overrides. Valid values: `allow`, `deny`.
func (o ProfileOverridePtrOutput) OvrdCookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.OvrdCookie
	}).(pulumi.StringPtrOutput)
}

// Override duration.
func (o ProfileOverridePtrOutput) OvrdDur() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.OvrdDur
	}).(pulumi.StringPtrOutput)
}

// Override duration mode. Valid values: `constant`, `ask`.
func (o ProfileOverridePtrOutput) OvrdDurMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.OvrdDurMode
	}).(pulumi.StringPtrOutput)
}

// Override scope. Valid values: `user`, `user-group`, `ip`, `browser`, `ask`.
func (o ProfileOverridePtrOutput) OvrdScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.OvrdScope
	}).(pulumi.StringPtrOutput)
}

// User groups with permission to use the override. The structure of `ovrdUserGroup` block is documented below.
func (o ProfileOverridePtrOutput) OvrdUserGroups() ProfileOverrideOvrdUserGroupArrayOutput {
	return o.ApplyT(func(v *ProfileOverride) []ProfileOverrideOvrdUserGroup {
		if v == nil {
			return nil
		}
		return v.OvrdUserGroups
	}).(ProfileOverrideOvrdUserGroupArrayOutput)
}

// Profile attribute to retrieve from the RADIUS server. Valid values: `User-Name`, `NAS-IP-Address`, `Framed-IP-Address`, `Framed-IP-Netmask`, `Filter-Id`, `Login-IP-Host`, `Reply-Message`, `Callback-Number`, `Callback-Id`, `Framed-Route`, `Framed-IPX-Network`, `Class`, `Called-Station-Id`, `Calling-Station-Id`, `NAS-Identifier`, `Proxy-State`, `Login-LAT-Service`, `Login-LAT-Node`, `Login-LAT-Group`, `Framed-AppleTalk-Zone`, `Acct-Session-Id`, `Acct-Multi-Session-Id`.
func (o ProfileOverridePtrOutput) ProfileAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.ProfileAttribute
	}).(pulumi.StringPtrOutput)
}

// Override profile type. Valid values: `list`, `radius`.
func (o ProfileOverridePtrOutput) ProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileOverride) *string {
		if v == nil {
			return nil
		}
		return v.ProfileType
	}).(pulumi.StringPtrOutput)
}

// Web filter profile with permission to create overrides. The structure of `profile` block is documented below.
func (o ProfileOverridePtrOutput) Profiles() ProfileOverrideProfileArrayOutput {
	return o.ApplyT(func(v *ProfileOverride) []ProfileOverrideProfile {
		if v == nil {
			return nil
		}
		return v.Profiles
	}).(ProfileOverrideProfileArrayOutput)
}

type ProfileOverrideOvrdUserGroup struct {
	// User group name.
	Name *string `pulumi:"name"`
}

// ProfileOverrideOvrdUserGroupInput is an input type that accepts ProfileOverrideOvrdUserGroupArgs and ProfileOverrideOvrdUserGroupOutput values.
// You can construct a concrete instance of `ProfileOverrideOvrdUserGroupInput` via:
//
//	ProfileOverrideOvrdUserGroupArgs{...}
type ProfileOverrideOvrdUserGroupInput interface {
	pulumi.Input

	ToProfileOverrideOvrdUserGroupOutput() ProfileOverrideOvrdUserGroupOutput
	ToProfileOverrideOvrdUserGroupOutputWithContext(context.Context) ProfileOverrideOvrdUserGroupOutput
}

type ProfileOverrideOvrdUserGroupArgs struct {
	// User group name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileOverrideOvrdUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileOverrideOvrdUserGroup)(nil)).Elem()
}

func (i ProfileOverrideOvrdUserGroupArgs) ToProfileOverrideOvrdUserGroupOutput() ProfileOverrideOvrdUserGroupOutput {
	return i.ToProfileOverrideOvrdUserGroupOutputWithContext(context.Background())
}

func (i ProfileOverrideOvrdUserGroupArgs) ToProfileOverrideOvrdUserGroupOutputWithContext(ctx context.Context) ProfileOverrideOvrdUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOverrideOvrdUserGroupOutput)
}

// ProfileOverrideOvrdUserGroupArrayInput is an input type that accepts ProfileOverrideOvrdUserGroupArray and ProfileOverrideOvrdUserGroupArrayOutput values.
// You can construct a concrete instance of `ProfileOverrideOvrdUserGroupArrayInput` via:
//
//	ProfileOverrideOvrdUserGroupArray{ ProfileOverrideOvrdUserGroupArgs{...} }
type ProfileOverrideOvrdUserGroupArrayInput interface {
	pulumi.Input

	ToProfileOverrideOvrdUserGroupArrayOutput() ProfileOverrideOvrdUserGroupArrayOutput
	ToProfileOverrideOvrdUserGroupArrayOutputWithContext(context.Context) ProfileOverrideOvrdUserGroupArrayOutput
}

type ProfileOverrideOvrdUserGroupArray []ProfileOverrideOvrdUserGroupInput

func (ProfileOverrideOvrdUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileOverrideOvrdUserGroup)(nil)).Elem()
}

func (i ProfileOverrideOvrdUserGroupArray) ToProfileOverrideOvrdUserGroupArrayOutput() ProfileOverrideOvrdUserGroupArrayOutput {
	return i.ToProfileOverrideOvrdUserGroupArrayOutputWithContext(context.Background())
}

func (i ProfileOverrideOvrdUserGroupArray) ToProfileOverrideOvrdUserGroupArrayOutputWithContext(ctx context.Context) ProfileOverrideOvrdUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOverrideOvrdUserGroupArrayOutput)
}

type ProfileOverrideOvrdUserGroupOutput struct{ *pulumi.OutputState }

func (ProfileOverrideOvrdUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileOverrideOvrdUserGroup)(nil)).Elem()
}

func (o ProfileOverrideOvrdUserGroupOutput) ToProfileOverrideOvrdUserGroupOutput() ProfileOverrideOvrdUserGroupOutput {
	return o
}

func (o ProfileOverrideOvrdUserGroupOutput) ToProfileOverrideOvrdUserGroupOutputWithContext(ctx context.Context) ProfileOverrideOvrdUserGroupOutput {
	return o
}

// User group name.
func (o ProfileOverrideOvrdUserGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOverrideOvrdUserGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileOverrideOvrdUserGroupArrayOutput struct{ *pulumi.OutputState }

func (ProfileOverrideOvrdUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileOverrideOvrdUserGroup)(nil)).Elem()
}

func (o ProfileOverrideOvrdUserGroupArrayOutput) ToProfileOverrideOvrdUserGroupArrayOutput() ProfileOverrideOvrdUserGroupArrayOutput {
	return o
}

func (o ProfileOverrideOvrdUserGroupArrayOutput) ToProfileOverrideOvrdUserGroupArrayOutputWithContext(ctx context.Context) ProfileOverrideOvrdUserGroupArrayOutput {
	return o
}

func (o ProfileOverrideOvrdUserGroupArrayOutput) Index(i pulumi.IntInput) ProfileOverrideOvrdUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileOverrideOvrdUserGroup {
		return vs[0].([]ProfileOverrideOvrdUserGroup)[vs[1].(int)]
	}).(ProfileOverrideOvrdUserGroupOutput)
}

type ProfileOverrideProfile struct {
	// Web profile.
	Name *string `pulumi:"name"`
}

// ProfileOverrideProfileInput is an input type that accepts ProfileOverrideProfileArgs and ProfileOverrideProfileOutput values.
// You can construct a concrete instance of `ProfileOverrideProfileInput` via:
//
//	ProfileOverrideProfileArgs{...}
type ProfileOverrideProfileInput interface {
	pulumi.Input

	ToProfileOverrideProfileOutput() ProfileOverrideProfileOutput
	ToProfileOverrideProfileOutputWithContext(context.Context) ProfileOverrideProfileOutput
}

type ProfileOverrideProfileArgs struct {
	// Web profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileOverrideProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileOverrideProfile)(nil)).Elem()
}

func (i ProfileOverrideProfileArgs) ToProfileOverrideProfileOutput() ProfileOverrideProfileOutput {
	return i.ToProfileOverrideProfileOutputWithContext(context.Background())
}

func (i ProfileOverrideProfileArgs) ToProfileOverrideProfileOutputWithContext(ctx context.Context) ProfileOverrideProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOverrideProfileOutput)
}

// ProfileOverrideProfileArrayInput is an input type that accepts ProfileOverrideProfileArray and ProfileOverrideProfileArrayOutput values.
// You can construct a concrete instance of `ProfileOverrideProfileArrayInput` via:
//
//	ProfileOverrideProfileArray{ ProfileOverrideProfileArgs{...} }
type ProfileOverrideProfileArrayInput interface {
	pulumi.Input

	ToProfileOverrideProfileArrayOutput() ProfileOverrideProfileArrayOutput
	ToProfileOverrideProfileArrayOutputWithContext(context.Context) ProfileOverrideProfileArrayOutput
}

type ProfileOverrideProfileArray []ProfileOverrideProfileInput

func (ProfileOverrideProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileOverrideProfile)(nil)).Elem()
}

func (i ProfileOverrideProfileArray) ToProfileOverrideProfileArrayOutput() ProfileOverrideProfileArrayOutput {
	return i.ToProfileOverrideProfileArrayOutputWithContext(context.Background())
}

func (i ProfileOverrideProfileArray) ToProfileOverrideProfileArrayOutputWithContext(ctx context.Context) ProfileOverrideProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOverrideProfileArrayOutput)
}

type ProfileOverrideProfileOutput struct{ *pulumi.OutputState }

func (ProfileOverrideProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileOverrideProfile)(nil)).Elem()
}

func (o ProfileOverrideProfileOutput) ToProfileOverrideProfileOutput() ProfileOverrideProfileOutput {
	return o
}

func (o ProfileOverrideProfileOutput) ToProfileOverrideProfileOutputWithContext(ctx context.Context) ProfileOverrideProfileOutput {
	return o
}

// Web profile.
func (o ProfileOverrideProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileOverrideProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileOverrideProfileArrayOutput struct{ *pulumi.OutputState }

func (ProfileOverrideProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileOverrideProfile)(nil)).Elem()
}

func (o ProfileOverrideProfileArrayOutput) ToProfileOverrideProfileArrayOutput() ProfileOverrideProfileArrayOutput {
	return o
}

func (o ProfileOverrideProfileArrayOutput) ToProfileOverrideProfileArrayOutputWithContext(ctx context.Context) ProfileOverrideProfileArrayOutput {
	return o
}

func (o ProfileOverrideProfileArrayOutput) Index(i pulumi.IntInput) ProfileOverrideProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileOverrideProfile {
		return vs[0].([]ProfileOverrideProfile)[vs[1].(int)]
	}).(ProfileOverrideProfileOutput)
}

type ProfileWeb struct {
	// FortiGuard allowlist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
	Allowlist *string `pulumi:"allowlist"`
	// Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist. Valid values: `enable`, `disable`.
	Blacklist *string `pulumi:"blacklist"`
	// Enable/disable automatic addition of URLs detected by FortiSandbox to blocklist. Valid values: `enable`, `disable`.
	Blocklist *string `pulumi:"blocklist"`
	// Banned word table ID.
	BwordTable *int `pulumi:"bwordTable"`
	// Banned word score threshold.
	BwordThreshold *int `pulumi:"bwordThreshold"`
	// Content header list.
	ContentHeaderList *int `pulumi:"contentHeaderList"`
	// Search keywords to log when match is found. The structure of `keywordMatch` block is documented below.
	KeywordMatches []ProfileWebKeywordMatch `pulumi:"keywordMatches"`
	// Enable/disable logging all search phrases. Valid values: `enable`, `disable`.
	LogSearch *string `pulumi:"logSearch"`
	// Safe search type. Valid values: `url`, `header`.
	SafeSearch *string `pulumi:"safeSearch"`
	// URL filter table ID.
	UrlfilterTable *int `pulumi:"urlfilterTable"`
	// Set Vimeo-restrict ("7" = don't show mature content, "134" = don't show unrated and mature content). A value of cookie "contentRating".
	VimeoRestrict *string `pulumi:"vimeoRestrict"`
	// FortiGuard whitelist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
	Whitelist *string `pulumi:"whitelist"`
	// YouTube EDU filter level. Valid values: `none`, `strict`, `moderate`.
	YoutubeRestrict *string `pulumi:"youtubeRestrict"`
}

// ProfileWebInput is an input type that accepts ProfileWebArgs and ProfileWebOutput values.
// You can construct a concrete instance of `ProfileWebInput` via:
//
//	ProfileWebArgs{...}
type ProfileWebInput interface {
	pulumi.Input

	ToProfileWebOutput() ProfileWebOutput
	ToProfileWebOutputWithContext(context.Context) ProfileWebOutput
}

type ProfileWebArgs struct {
	// FortiGuard allowlist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
	Allowlist pulumi.StringPtrInput `pulumi:"allowlist"`
	// Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist. Valid values: `enable`, `disable`.
	Blacklist pulumi.StringPtrInput `pulumi:"blacklist"`
	// Enable/disable automatic addition of URLs detected by FortiSandbox to blocklist. Valid values: `enable`, `disable`.
	Blocklist pulumi.StringPtrInput `pulumi:"blocklist"`
	// Banned word table ID.
	BwordTable pulumi.IntPtrInput `pulumi:"bwordTable"`
	// Banned word score threshold.
	BwordThreshold pulumi.IntPtrInput `pulumi:"bwordThreshold"`
	// Content header list.
	ContentHeaderList pulumi.IntPtrInput `pulumi:"contentHeaderList"`
	// Search keywords to log when match is found. The structure of `keywordMatch` block is documented below.
	KeywordMatches ProfileWebKeywordMatchArrayInput `pulumi:"keywordMatches"`
	// Enable/disable logging all search phrases. Valid values: `enable`, `disable`.
	LogSearch pulumi.StringPtrInput `pulumi:"logSearch"`
	// Safe search type. Valid values: `url`, `header`.
	SafeSearch pulumi.StringPtrInput `pulumi:"safeSearch"`
	// URL filter table ID.
	UrlfilterTable pulumi.IntPtrInput `pulumi:"urlfilterTable"`
	// Set Vimeo-restrict ("7" = don't show mature content, "134" = don't show unrated and mature content). A value of cookie "contentRating".
	VimeoRestrict pulumi.StringPtrInput `pulumi:"vimeoRestrict"`
	// FortiGuard whitelist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
	Whitelist pulumi.StringPtrInput `pulumi:"whitelist"`
	// YouTube EDU filter level. Valid values: `none`, `strict`, `moderate`.
	YoutubeRestrict pulumi.StringPtrInput `pulumi:"youtubeRestrict"`
}

func (ProfileWebArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileWeb)(nil)).Elem()
}

func (i ProfileWebArgs) ToProfileWebOutput() ProfileWebOutput {
	return i.ToProfileWebOutputWithContext(context.Background())
}

func (i ProfileWebArgs) ToProfileWebOutputWithContext(ctx context.Context) ProfileWebOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWebOutput)
}

func (i ProfileWebArgs) ToProfileWebPtrOutput() ProfileWebPtrOutput {
	return i.ToProfileWebPtrOutputWithContext(context.Background())
}

func (i ProfileWebArgs) ToProfileWebPtrOutputWithContext(ctx context.Context) ProfileWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWebOutput).ToProfileWebPtrOutputWithContext(ctx)
}

// ProfileWebPtrInput is an input type that accepts ProfileWebArgs, ProfileWebPtr and ProfileWebPtrOutput values.
// You can construct a concrete instance of `ProfileWebPtrInput` via:
//
//	        ProfileWebArgs{...}
//
//	or:
//
//	        nil
type ProfileWebPtrInput interface {
	pulumi.Input

	ToProfileWebPtrOutput() ProfileWebPtrOutput
	ToProfileWebPtrOutputWithContext(context.Context) ProfileWebPtrOutput
}

type profileWebPtrType ProfileWebArgs

func ProfileWebPtr(v *ProfileWebArgs) ProfileWebPtrInput {
	return (*profileWebPtrType)(v)
}

func (*profileWebPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileWeb)(nil)).Elem()
}

func (i *profileWebPtrType) ToProfileWebPtrOutput() ProfileWebPtrOutput {
	return i.ToProfileWebPtrOutputWithContext(context.Background())
}

func (i *profileWebPtrType) ToProfileWebPtrOutputWithContext(ctx context.Context) ProfileWebPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWebPtrOutput)
}

type ProfileWebOutput struct{ *pulumi.OutputState }

func (ProfileWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileWeb)(nil)).Elem()
}

func (o ProfileWebOutput) ToProfileWebOutput() ProfileWebOutput {
	return o
}

func (o ProfileWebOutput) ToProfileWebOutputWithContext(ctx context.Context) ProfileWebOutput {
	return o
}

func (o ProfileWebOutput) ToProfileWebPtrOutput() ProfileWebPtrOutput {
	return o.ToProfileWebPtrOutputWithContext(context.Background())
}

func (o ProfileWebOutput) ToProfileWebPtrOutputWithContext(ctx context.Context) ProfileWebPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileWeb) *ProfileWeb {
		return &v
	}).(ProfileWebPtrOutput)
}

// FortiGuard allowlist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
func (o ProfileWebOutput) Allowlist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *string { return v.Allowlist }).(pulumi.StringPtrOutput)
}

// Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist. Valid values: `enable`, `disable`.
func (o ProfileWebOutput) Blacklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *string { return v.Blacklist }).(pulumi.StringPtrOutput)
}

// Enable/disable automatic addition of URLs detected by FortiSandbox to blocklist. Valid values: `enable`, `disable`.
func (o ProfileWebOutput) Blocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *string { return v.Blocklist }).(pulumi.StringPtrOutput)
}

// Banned word table ID.
func (o ProfileWebOutput) BwordTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *int { return v.BwordTable }).(pulumi.IntPtrOutput)
}

// Banned word score threshold.
func (o ProfileWebOutput) BwordThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *int { return v.BwordThreshold }).(pulumi.IntPtrOutput)
}

// Content header list.
func (o ProfileWebOutput) ContentHeaderList() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *int { return v.ContentHeaderList }).(pulumi.IntPtrOutput)
}

// Search keywords to log when match is found. The structure of `keywordMatch` block is documented below.
func (o ProfileWebOutput) KeywordMatches() ProfileWebKeywordMatchArrayOutput {
	return o.ApplyT(func(v ProfileWeb) []ProfileWebKeywordMatch { return v.KeywordMatches }).(ProfileWebKeywordMatchArrayOutput)
}

// Enable/disable logging all search phrases. Valid values: `enable`, `disable`.
func (o ProfileWebOutput) LogSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *string { return v.LogSearch }).(pulumi.StringPtrOutput)
}

// Safe search type. Valid values: `url`, `header`.
func (o ProfileWebOutput) SafeSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *string { return v.SafeSearch }).(pulumi.StringPtrOutput)
}

// URL filter table ID.
func (o ProfileWebOutput) UrlfilterTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *int { return v.UrlfilterTable }).(pulumi.IntPtrOutput)
}

// Set Vimeo-restrict ("7" = don't show mature content, "134" = don't show unrated and mature content). A value of cookie "contentRating".
func (o ProfileWebOutput) VimeoRestrict() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *string { return v.VimeoRestrict }).(pulumi.StringPtrOutput)
}

// FortiGuard whitelist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
func (o ProfileWebOutput) Whitelist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *string { return v.Whitelist }).(pulumi.StringPtrOutput)
}

// YouTube EDU filter level. Valid values: `none`, `strict`, `moderate`.
func (o ProfileWebOutput) YoutubeRestrict() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWeb) *string { return v.YoutubeRestrict }).(pulumi.StringPtrOutput)
}

type ProfileWebPtrOutput struct{ *pulumi.OutputState }

func (ProfileWebPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileWeb)(nil)).Elem()
}

func (o ProfileWebPtrOutput) ToProfileWebPtrOutput() ProfileWebPtrOutput {
	return o
}

func (o ProfileWebPtrOutput) ToProfileWebPtrOutputWithContext(ctx context.Context) ProfileWebPtrOutput {
	return o
}

func (o ProfileWebPtrOutput) Elem() ProfileWebOutput {
	return o.ApplyT(func(v *ProfileWeb) ProfileWeb {
		if v != nil {
			return *v
		}
		var ret ProfileWeb
		return ret
	}).(ProfileWebOutput)
}

// FortiGuard allowlist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
func (o ProfileWebPtrOutput) Allowlist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.Allowlist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist. Valid values: `enable`, `disable`.
func (o ProfileWebPtrOutput) Blacklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.Blacklist
	}).(pulumi.StringPtrOutput)
}

// Enable/disable automatic addition of URLs detected by FortiSandbox to blocklist. Valid values: `enable`, `disable`.
func (o ProfileWebPtrOutput) Blocklist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.Blocklist
	}).(pulumi.StringPtrOutput)
}

// Banned word table ID.
func (o ProfileWebPtrOutput) BwordTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *int {
		if v == nil {
			return nil
		}
		return v.BwordTable
	}).(pulumi.IntPtrOutput)
}

// Banned word score threshold.
func (o ProfileWebPtrOutput) BwordThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *int {
		if v == nil {
			return nil
		}
		return v.BwordThreshold
	}).(pulumi.IntPtrOutput)
}

// Content header list.
func (o ProfileWebPtrOutput) ContentHeaderList() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *int {
		if v == nil {
			return nil
		}
		return v.ContentHeaderList
	}).(pulumi.IntPtrOutput)
}

// Search keywords to log when match is found. The structure of `keywordMatch` block is documented below.
func (o ProfileWebPtrOutput) KeywordMatches() ProfileWebKeywordMatchArrayOutput {
	return o.ApplyT(func(v *ProfileWeb) []ProfileWebKeywordMatch {
		if v == nil {
			return nil
		}
		return v.KeywordMatches
	}).(ProfileWebKeywordMatchArrayOutput)
}

// Enable/disable logging all search phrases. Valid values: `enable`, `disable`.
func (o ProfileWebPtrOutput) LogSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.LogSearch
	}).(pulumi.StringPtrOutput)
}

// Safe search type. Valid values: `url`, `header`.
func (o ProfileWebPtrOutput) SafeSearch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.SafeSearch
	}).(pulumi.StringPtrOutput)
}

// URL filter table ID.
func (o ProfileWebPtrOutput) UrlfilterTable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *int {
		if v == nil {
			return nil
		}
		return v.UrlfilterTable
	}).(pulumi.IntPtrOutput)
}

// Set Vimeo-restrict ("7" = don't show mature content, "134" = don't show unrated and mature content). A value of cookie "contentRating".
func (o ProfileWebPtrOutput) VimeoRestrict() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.VimeoRestrict
	}).(pulumi.StringPtrOutput)
}

// FortiGuard whitelist settings. Valid values: `exempt-av`, `exempt-webcontent`, `exempt-activex-java-cookie`, `exempt-dlp`, `exempt-rangeblock`, `extended-log-others`.
func (o ProfileWebPtrOutput) Whitelist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.Whitelist
	}).(pulumi.StringPtrOutput)
}

// YouTube EDU filter level. Valid values: `none`, `strict`, `moderate`.
func (o ProfileWebPtrOutput) YoutubeRestrict() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileWeb) *string {
		if v == nil {
			return nil
		}
		return v.YoutubeRestrict
	}).(pulumi.StringPtrOutput)
}

type ProfileWebKeywordMatch struct {
	// Pattern/keyword to search for.
	Pattern *string `pulumi:"pattern"`
}

// ProfileWebKeywordMatchInput is an input type that accepts ProfileWebKeywordMatchArgs and ProfileWebKeywordMatchOutput values.
// You can construct a concrete instance of `ProfileWebKeywordMatchInput` via:
//
//	ProfileWebKeywordMatchArgs{...}
type ProfileWebKeywordMatchInput interface {
	pulumi.Input

	ToProfileWebKeywordMatchOutput() ProfileWebKeywordMatchOutput
	ToProfileWebKeywordMatchOutputWithContext(context.Context) ProfileWebKeywordMatchOutput
}

type ProfileWebKeywordMatchArgs struct {
	// Pattern/keyword to search for.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (ProfileWebKeywordMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileWebKeywordMatch)(nil)).Elem()
}

func (i ProfileWebKeywordMatchArgs) ToProfileWebKeywordMatchOutput() ProfileWebKeywordMatchOutput {
	return i.ToProfileWebKeywordMatchOutputWithContext(context.Background())
}

func (i ProfileWebKeywordMatchArgs) ToProfileWebKeywordMatchOutputWithContext(ctx context.Context) ProfileWebKeywordMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWebKeywordMatchOutput)
}

// ProfileWebKeywordMatchArrayInput is an input type that accepts ProfileWebKeywordMatchArray and ProfileWebKeywordMatchArrayOutput values.
// You can construct a concrete instance of `ProfileWebKeywordMatchArrayInput` via:
//
//	ProfileWebKeywordMatchArray{ ProfileWebKeywordMatchArgs{...} }
type ProfileWebKeywordMatchArrayInput interface {
	pulumi.Input

	ToProfileWebKeywordMatchArrayOutput() ProfileWebKeywordMatchArrayOutput
	ToProfileWebKeywordMatchArrayOutputWithContext(context.Context) ProfileWebKeywordMatchArrayOutput
}

type ProfileWebKeywordMatchArray []ProfileWebKeywordMatchInput

func (ProfileWebKeywordMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileWebKeywordMatch)(nil)).Elem()
}

func (i ProfileWebKeywordMatchArray) ToProfileWebKeywordMatchArrayOutput() ProfileWebKeywordMatchArrayOutput {
	return i.ToProfileWebKeywordMatchArrayOutputWithContext(context.Background())
}

func (i ProfileWebKeywordMatchArray) ToProfileWebKeywordMatchArrayOutputWithContext(ctx context.Context) ProfileWebKeywordMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWebKeywordMatchArrayOutput)
}

type ProfileWebKeywordMatchOutput struct{ *pulumi.OutputState }

func (ProfileWebKeywordMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileWebKeywordMatch)(nil)).Elem()
}

func (o ProfileWebKeywordMatchOutput) ToProfileWebKeywordMatchOutput() ProfileWebKeywordMatchOutput {
	return o
}

func (o ProfileWebKeywordMatchOutput) ToProfileWebKeywordMatchOutputWithContext(ctx context.Context) ProfileWebKeywordMatchOutput {
	return o
}

// Pattern/keyword to search for.
func (o ProfileWebKeywordMatchOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWebKeywordMatch) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type ProfileWebKeywordMatchArrayOutput struct{ *pulumi.OutputState }

func (ProfileWebKeywordMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileWebKeywordMatch)(nil)).Elem()
}

func (o ProfileWebKeywordMatchArrayOutput) ToProfileWebKeywordMatchArrayOutput() ProfileWebKeywordMatchArrayOutput {
	return o
}

func (o ProfileWebKeywordMatchArrayOutput) ToProfileWebKeywordMatchArrayOutputWithContext(ctx context.Context) ProfileWebKeywordMatchArrayOutput {
	return o
}

func (o ProfileWebKeywordMatchArrayOutput) Index(i pulumi.IntInput) ProfileWebKeywordMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileWebKeywordMatch {
		return vs[0].([]ProfileWebKeywordMatch)[vs[1].(int)]
	}).(ProfileWebKeywordMatchOutput)
}

type ProfileWispServer struct {
	// Server name.
	Name *string `pulumi:"name"`
}

// ProfileWispServerInput is an input type that accepts ProfileWispServerArgs and ProfileWispServerOutput values.
// You can construct a concrete instance of `ProfileWispServerInput` via:
//
//	ProfileWispServerArgs{...}
type ProfileWispServerInput interface {
	pulumi.Input

	ToProfileWispServerOutput() ProfileWispServerOutput
	ToProfileWispServerOutputWithContext(context.Context) ProfileWispServerOutput
}

type ProfileWispServerArgs struct {
	// Server name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProfileWispServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileWispServer)(nil)).Elem()
}

func (i ProfileWispServerArgs) ToProfileWispServerOutput() ProfileWispServerOutput {
	return i.ToProfileWispServerOutputWithContext(context.Background())
}

func (i ProfileWispServerArgs) ToProfileWispServerOutputWithContext(ctx context.Context) ProfileWispServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWispServerOutput)
}

// ProfileWispServerArrayInput is an input type that accepts ProfileWispServerArray and ProfileWispServerArrayOutput values.
// You can construct a concrete instance of `ProfileWispServerArrayInput` via:
//
//	ProfileWispServerArray{ ProfileWispServerArgs{...} }
type ProfileWispServerArrayInput interface {
	pulumi.Input

	ToProfileWispServerArrayOutput() ProfileWispServerArrayOutput
	ToProfileWispServerArrayOutputWithContext(context.Context) ProfileWispServerArrayOutput
}

type ProfileWispServerArray []ProfileWispServerInput

func (ProfileWispServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileWispServer)(nil)).Elem()
}

func (i ProfileWispServerArray) ToProfileWispServerArrayOutput() ProfileWispServerArrayOutput {
	return i.ToProfileWispServerArrayOutputWithContext(context.Background())
}

func (i ProfileWispServerArray) ToProfileWispServerArrayOutputWithContext(ctx context.Context) ProfileWispServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWispServerArrayOutput)
}

type ProfileWispServerOutput struct{ *pulumi.OutputState }

func (ProfileWispServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileWispServer)(nil)).Elem()
}

func (o ProfileWispServerOutput) ToProfileWispServerOutput() ProfileWispServerOutput {
	return o
}

func (o ProfileWispServerOutput) ToProfileWispServerOutputWithContext(ctx context.Context) ProfileWispServerOutput {
	return o
}

// Server name.
func (o ProfileWispServerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileWispServer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProfileWispServerArrayOutput struct{ *pulumi.OutputState }

func (ProfileWispServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileWispServer)(nil)).Elem()
}

func (o ProfileWispServerArrayOutput) ToProfileWispServerArrayOutput() ProfileWispServerArrayOutput {
	return o
}

func (o ProfileWispServerArrayOutput) ToProfileWispServerArrayOutputWithContext(ctx context.Context) ProfileWispServerArrayOutput {
	return o
}

func (o ProfileWispServerArrayOutput) Index(i pulumi.IntInput) ProfileWispServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileWispServer {
		return vs[0].([]ProfileWispServer)[vs[1].(int)]
	}).(ProfileWispServerOutput)
}

type ProfileYoutubeChannelFilter struct {
	// YouTube channel ID to be filtered.
	ChannelId *string `pulumi:"channelId"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// ID.
	Id *int `pulumi:"id"`
}

// ProfileYoutubeChannelFilterInput is an input type that accepts ProfileYoutubeChannelFilterArgs and ProfileYoutubeChannelFilterOutput values.
// You can construct a concrete instance of `ProfileYoutubeChannelFilterInput` via:
//
//	ProfileYoutubeChannelFilterArgs{...}
type ProfileYoutubeChannelFilterInput interface {
	pulumi.Input

	ToProfileYoutubeChannelFilterOutput() ProfileYoutubeChannelFilterOutput
	ToProfileYoutubeChannelFilterOutputWithContext(context.Context) ProfileYoutubeChannelFilterOutput
}

type ProfileYoutubeChannelFilterArgs struct {
	// YouTube channel ID to be filtered.
	ChannelId pulumi.StringPtrInput `pulumi:"channelId"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
}

func (ProfileYoutubeChannelFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileYoutubeChannelFilter)(nil)).Elem()
}

func (i ProfileYoutubeChannelFilterArgs) ToProfileYoutubeChannelFilterOutput() ProfileYoutubeChannelFilterOutput {
	return i.ToProfileYoutubeChannelFilterOutputWithContext(context.Background())
}

func (i ProfileYoutubeChannelFilterArgs) ToProfileYoutubeChannelFilterOutputWithContext(ctx context.Context) ProfileYoutubeChannelFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileYoutubeChannelFilterOutput)
}

// ProfileYoutubeChannelFilterArrayInput is an input type that accepts ProfileYoutubeChannelFilterArray and ProfileYoutubeChannelFilterArrayOutput values.
// You can construct a concrete instance of `ProfileYoutubeChannelFilterArrayInput` via:
//
//	ProfileYoutubeChannelFilterArray{ ProfileYoutubeChannelFilterArgs{...} }
type ProfileYoutubeChannelFilterArrayInput interface {
	pulumi.Input

	ToProfileYoutubeChannelFilterArrayOutput() ProfileYoutubeChannelFilterArrayOutput
	ToProfileYoutubeChannelFilterArrayOutputWithContext(context.Context) ProfileYoutubeChannelFilterArrayOutput
}

type ProfileYoutubeChannelFilterArray []ProfileYoutubeChannelFilterInput

func (ProfileYoutubeChannelFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileYoutubeChannelFilter)(nil)).Elem()
}

func (i ProfileYoutubeChannelFilterArray) ToProfileYoutubeChannelFilterArrayOutput() ProfileYoutubeChannelFilterArrayOutput {
	return i.ToProfileYoutubeChannelFilterArrayOutputWithContext(context.Background())
}

func (i ProfileYoutubeChannelFilterArray) ToProfileYoutubeChannelFilterArrayOutputWithContext(ctx context.Context) ProfileYoutubeChannelFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileYoutubeChannelFilterArrayOutput)
}

type ProfileYoutubeChannelFilterOutput struct{ *pulumi.OutputState }

func (ProfileYoutubeChannelFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileYoutubeChannelFilter)(nil)).Elem()
}

func (o ProfileYoutubeChannelFilterOutput) ToProfileYoutubeChannelFilterOutput() ProfileYoutubeChannelFilterOutput {
	return o
}

func (o ProfileYoutubeChannelFilterOutput) ToProfileYoutubeChannelFilterOutputWithContext(ctx context.Context) ProfileYoutubeChannelFilterOutput {
	return o
}

// YouTube channel ID to be filtered.
func (o ProfileYoutubeChannelFilterOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileYoutubeChannelFilter) *string { return v.ChannelId }).(pulumi.StringPtrOutput)
}

// Comment.
func (o ProfileYoutubeChannelFilterOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileYoutubeChannelFilter) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// ID.
func (o ProfileYoutubeChannelFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfileYoutubeChannelFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

type ProfileYoutubeChannelFilterArrayOutput struct{ *pulumi.OutputState }

func (ProfileYoutubeChannelFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileYoutubeChannelFilter)(nil)).Elem()
}

func (o ProfileYoutubeChannelFilterArrayOutput) ToProfileYoutubeChannelFilterArrayOutput() ProfileYoutubeChannelFilterArrayOutput {
	return o
}

func (o ProfileYoutubeChannelFilterArrayOutput) ToProfileYoutubeChannelFilterArrayOutputWithContext(ctx context.Context) ProfileYoutubeChannelFilterArrayOutput {
	return o
}

func (o ProfileYoutubeChannelFilterArrayOutput) Index(i pulumi.IntInput) ProfileYoutubeChannelFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileYoutubeChannelFilter {
		return vs[0].([]ProfileYoutubeChannelFilter)[vs[1].(int)]
	}).(ProfileYoutubeChannelFilterOutput)
}

type UrlfilterEntry struct {
	// Action to take for URL filter matches. Valid values: `exempt`, `block`, `allow`, `monitor`.
	Action *string `pulumi:"action"`
	// Action to take for AntiPhishing matches. Valid values: `block`, `log`.
	AntiphishAction *string `pulumi:"antiphishAction"`
	// Resolve IPv4 address, IPv6 address, or both from DNS server. Valid values: `ipv4`, `ipv6`, `both`.
	DnsAddressFamily *string `pulumi:"dnsAddressFamily"`
	// If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.
	Exempt *string `pulumi:"exempt"`
	// Id.
	Id *int `pulumi:"id"`
	// Referrer host name.
	ReferrerHost *string `pulumi:"referrerHost"`
	// Enable/disable this URL filter. Valid values: `enable`, `disable`.
	Status *string `pulumi:"status"`
	// Filter type (simple, regex, or wildcard). Valid values: `simple`, `regex`, `wildcard`.
	Type *string `pulumi:"type"`
	// URL to be filtered.
	Url *string `pulumi:"url"`
	// Web proxy profile.
	WebProxyProfile *string `pulumi:"webProxyProfile"`
}

// UrlfilterEntryInput is an input type that accepts UrlfilterEntryArgs and UrlfilterEntryOutput values.
// You can construct a concrete instance of `UrlfilterEntryInput` via:
//
//	UrlfilterEntryArgs{...}
type UrlfilterEntryInput interface {
	pulumi.Input

	ToUrlfilterEntryOutput() UrlfilterEntryOutput
	ToUrlfilterEntryOutputWithContext(context.Context) UrlfilterEntryOutput
}

type UrlfilterEntryArgs struct {
	// Action to take for URL filter matches. Valid values: `exempt`, `block`, `allow`, `monitor`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Action to take for AntiPhishing matches. Valid values: `block`, `log`.
	AntiphishAction pulumi.StringPtrInput `pulumi:"antiphishAction"`
	// Resolve IPv4 address, IPv6 address, or both from DNS server. Valid values: `ipv4`, `ipv6`, `both`.
	DnsAddressFamily pulumi.StringPtrInput `pulumi:"dnsAddressFamily"`
	// If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.
	Exempt pulumi.StringPtrInput `pulumi:"exempt"`
	// Id.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Referrer host name.
	ReferrerHost pulumi.StringPtrInput `pulumi:"referrerHost"`
	// Enable/disable this URL filter. Valid values: `enable`, `disable`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Filter type (simple, regex, or wildcard). Valid values: `simple`, `regex`, `wildcard`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// URL to be filtered.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Web proxy profile.
	WebProxyProfile pulumi.StringPtrInput `pulumi:"webProxyProfile"`
}

func (UrlfilterEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlfilterEntry)(nil)).Elem()
}

func (i UrlfilterEntryArgs) ToUrlfilterEntryOutput() UrlfilterEntryOutput {
	return i.ToUrlfilterEntryOutputWithContext(context.Background())
}

func (i UrlfilterEntryArgs) ToUrlfilterEntryOutputWithContext(ctx context.Context) UrlfilterEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlfilterEntryOutput)
}

// UrlfilterEntryArrayInput is an input type that accepts UrlfilterEntryArray and UrlfilterEntryArrayOutput values.
// You can construct a concrete instance of `UrlfilterEntryArrayInput` via:
//
//	UrlfilterEntryArray{ UrlfilterEntryArgs{...} }
type UrlfilterEntryArrayInput interface {
	pulumi.Input

	ToUrlfilterEntryArrayOutput() UrlfilterEntryArrayOutput
	ToUrlfilterEntryArrayOutputWithContext(context.Context) UrlfilterEntryArrayOutput
}

type UrlfilterEntryArray []UrlfilterEntryInput

func (UrlfilterEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlfilterEntry)(nil)).Elem()
}

func (i UrlfilterEntryArray) ToUrlfilterEntryArrayOutput() UrlfilterEntryArrayOutput {
	return i.ToUrlfilterEntryArrayOutputWithContext(context.Background())
}

func (i UrlfilterEntryArray) ToUrlfilterEntryArrayOutputWithContext(ctx context.Context) UrlfilterEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlfilterEntryArrayOutput)
}

type UrlfilterEntryOutput struct{ *pulumi.OutputState }

func (UrlfilterEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlfilterEntry)(nil)).Elem()
}

func (o UrlfilterEntryOutput) ToUrlfilterEntryOutput() UrlfilterEntryOutput {
	return o
}

func (o UrlfilterEntryOutput) ToUrlfilterEntryOutputWithContext(ctx context.Context) UrlfilterEntryOutput {
	return o
}

// Action to take for URL filter matches. Valid values: `exempt`, `block`, `allow`, `monitor`.
func (o UrlfilterEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Action to take for AntiPhishing matches. Valid values: `block`, `log`.
func (o UrlfilterEntryOutput) AntiphishAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.AntiphishAction }).(pulumi.StringPtrOutput)
}

// Resolve IPv4 address, IPv6 address, or both from DNS server. Valid values: `ipv4`, `ipv6`, `both`.
func (o UrlfilterEntryOutput) DnsAddressFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.DnsAddressFamily }).(pulumi.StringPtrOutput)
}

// If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.
func (o UrlfilterEntryOutput) Exempt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.Exempt }).(pulumi.StringPtrOutput)
}

// Id.
func (o UrlfilterEntryOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Referrer host name.
func (o UrlfilterEntryOutput) ReferrerHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.ReferrerHost }).(pulumi.StringPtrOutput)
}

// Enable/disable this URL filter. Valid values: `enable`, `disable`.
func (o UrlfilterEntryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Filter type (simple, regex, or wildcard). Valid values: `simple`, `regex`, `wildcard`.
func (o UrlfilterEntryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// URL to be filtered.
func (o UrlfilterEntryOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Web proxy profile.
func (o UrlfilterEntryOutput) WebProxyProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlfilterEntry) *string { return v.WebProxyProfile }).(pulumi.StringPtrOutput)
}

type UrlfilterEntryArrayOutput struct{ *pulumi.OutputState }

func (UrlfilterEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlfilterEntry)(nil)).Elem()
}

func (o UrlfilterEntryArrayOutput) ToUrlfilterEntryArrayOutput() UrlfilterEntryArrayOutput {
	return o
}

func (o UrlfilterEntryArrayOutput) ToUrlfilterEntryArrayOutputWithContext(ctx context.Context) UrlfilterEntryArrayOutput {
	return o
}

func (o UrlfilterEntryArrayOutput) Index(i pulumi.IntInput) UrlfilterEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlfilterEntry {
		return vs[0].([]UrlfilterEntry)[vs[1].(int)]
	}).(UrlfilterEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContentEntryInput)(nil)).Elem(), ContentEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentEntryArrayInput)(nil)).Elem(), ContentEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentheaderEntryInput)(nil)).Elem(), ContentheaderEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentheaderEntryArrayInput)(nil)).Elem(), ContentheaderEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAntiphishInput)(nil)).Elem(), ProfileAntiphishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAntiphishPtrInput)(nil)).Elem(), ProfileAntiphishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAntiphishCustomPatternInput)(nil)).Elem(), ProfileAntiphishCustomPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAntiphishCustomPatternArrayInput)(nil)).Elem(), ProfileAntiphishCustomPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAntiphishInspectionEntryInput)(nil)).Elem(), ProfileAntiphishInspectionEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAntiphishInspectionEntryArrayInput)(nil)).Elem(), ProfileAntiphishInspectionEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFileFilterInput)(nil)).Elem(), ProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFileFilterPtrInput)(nil)).Elem(), ProfileFileFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFileFilterEntryInput)(nil)).Elem(), ProfileFileFilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFileFilterEntryArrayInput)(nil)).Elem(), ProfileFileFilterEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFileFilterEntryFileTypeInput)(nil)).Elem(), ProfileFileFilterEntryFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFileFilterEntryFileTypeArrayInput)(nil)).Elem(), ProfileFileFilterEntryFileTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtgdWfInput)(nil)).Elem(), ProfileFtgdWfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtgdWfPtrInput)(nil)).Elem(), ProfileFtgdWfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtgdWfFilterInput)(nil)).Elem(), ProfileFtgdWfFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtgdWfFilterArrayInput)(nil)).Elem(), ProfileFtgdWfFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtgdWfFilterAuthUsrGrpInput)(nil)).Elem(), ProfileFtgdWfFilterAuthUsrGrpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtgdWfFilterAuthUsrGrpArrayInput)(nil)).Elem(), ProfileFtgdWfFilterAuthUsrGrpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtgdWfQuotaInput)(nil)).Elem(), ProfileFtgdWfQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileFtgdWfQuotaArrayInput)(nil)).Elem(), ProfileFtgdWfQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileOverrideInput)(nil)).Elem(), ProfileOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileOverridePtrInput)(nil)).Elem(), ProfileOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileOverrideOvrdUserGroupInput)(nil)).Elem(), ProfileOverrideOvrdUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileOverrideOvrdUserGroupArrayInput)(nil)).Elem(), ProfileOverrideOvrdUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileOverrideProfileInput)(nil)).Elem(), ProfileOverrideProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileOverrideProfileArrayInput)(nil)).Elem(), ProfileOverrideProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWebInput)(nil)).Elem(), ProfileWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWebPtrInput)(nil)).Elem(), ProfileWebArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWebKeywordMatchInput)(nil)).Elem(), ProfileWebKeywordMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWebKeywordMatchArrayInput)(nil)).Elem(), ProfileWebKeywordMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWispServerInput)(nil)).Elem(), ProfileWispServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWispServerArrayInput)(nil)).Elem(), ProfileWispServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileYoutubeChannelFilterInput)(nil)).Elem(), ProfileYoutubeChannelFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileYoutubeChannelFilterArrayInput)(nil)).Elem(), ProfileYoutubeChannelFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlfilterEntryInput)(nil)).Elem(), UrlfilterEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlfilterEntryArrayInput)(nil)).Elem(), UrlfilterEntryArray{})
	pulumi.RegisterOutputType(ContentEntryOutput{})
	pulumi.RegisterOutputType(ContentEntryArrayOutput{})
	pulumi.RegisterOutputType(ContentheaderEntryOutput{})
	pulumi.RegisterOutputType(ContentheaderEntryArrayOutput{})
	pulumi.RegisterOutputType(ProfileAntiphishOutput{})
	pulumi.RegisterOutputType(ProfileAntiphishPtrOutput{})
	pulumi.RegisterOutputType(ProfileAntiphishCustomPatternOutput{})
	pulumi.RegisterOutputType(ProfileAntiphishCustomPatternArrayOutput{})
	pulumi.RegisterOutputType(ProfileAntiphishInspectionEntryOutput{})
	pulumi.RegisterOutputType(ProfileAntiphishInspectionEntryArrayOutput{})
	pulumi.RegisterOutputType(ProfileFileFilterOutput{})
	pulumi.RegisterOutputType(ProfileFileFilterPtrOutput{})
	pulumi.RegisterOutputType(ProfileFileFilterEntryOutput{})
	pulumi.RegisterOutputType(ProfileFileFilterEntryArrayOutput{})
	pulumi.RegisterOutputType(ProfileFileFilterEntryFileTypeOutput{})
	pulumi.RegisterOutputType(ProfileFileFilterEntryFileTypeArrayOutput{})
	pulumi.RegisterOutputType(ProfileFtgdWfOutput{})
	pulumi.RegisterOutputType(ProfileFtgdWfPtrOutput{})
	pulumi.RegisterOutputType(ProfileFtgdWfFilterOutput{})
	pulumi.RegisterOutputType(ProfileFtgdWfFilterArrayOutput{})
	pulumi.RegisterOutputType(ProfileFtgdWfFilterAuthUsrGrpOutput{})
	pulumi.RegisterOutputType(ProfileFtgdWfFilterAuthUsrGrpArrayOutput{})
	pulumi.RegisterOutputType(ProfileFtgdWfQuotaOutput{})
	pulumi.RegisterOutputType(ProfileFtgdWfQuotaArrayOutput{})
	pulumi.RegisterOutputType(ProfileOverrideOutput{})
	pulumi.RegisterOutputType(ProfileOverridePtrOutput{})
	pulumi.RegisterOutputType(ProfileOverrideOvrdUserGroupOutput{})
	pulumi.RegisterOutputType(ProfileOverrideOvrdUserGroupArrayOutput{})
	pulumi.RegisterOutputType(ProfileOverrideProfileOutput{})
	pulumi.RegisterOutputType(ProfileOverrideProfileArrayOutput{})
	pulumi.RegisterOutputType(ProfileWebOutput{})
	pulumi.RegisterOutputType(ProfileWebPtrOutput{})
	pulumi.RegisterOutputType(ProfileWebKeywordMatchOutput{})
	pulumi.RegisterOutputType(ProfileWebKeywordMatchArrayOutput{})
	pulumi.RegisterOutputType(ProfileWispServerOutput{})
	pulumi.RegisterOutputType(ProfileWispServerArrayOutput{})
	pulumi.RegisterOutputType(ProfileYoutubeChannelFilterOutput{})
	pulumi.RegisterOutputType(ProfileYoutubeChannelFilterArrayOutput{})
	pulumi.RegisterOutputType(UrlfilterEntryOutput{})
	pulumi.RegisterOutputType(UrlfilterEntryArrayOutput{})
}
