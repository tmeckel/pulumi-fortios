// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nsxt

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServicechainServiceIndex struct {
	// Service index.
	Id *int `pulumi:"id"`
	// Index name.
	Name *string `pulumi:"name"`
	// Reverse service index.
	ReverseIndex *int `pulumi:"reverseIndex"`
	// VDOM name.
	Vd *string `pulumi:"vd"`
}

// ServicechainServiceIndexInput is an input type that accepts ServicechainServiceIndexArgs and ServicechainServiceIndexOutput values.
// You can construct a concrete instance of `ServicechainServiceIndexInput` via:
//
//	ServicechainServiceIndexArgs{...}
type ServicechainServiceIndexInput interface {
	pulumi.Input

	ToServicechainServiceIndexOutput() ServicechainServiceIndexOutput
	ToServicechainServiceIndexOutputWithContext(context.Context) ServicechainServiceIndexOutput
}

type ServicechainServiceIndexArgs struct {
	// Service index.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Index name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reverse service index.
	ReverseIndex pulumi.IntPtrInput `pulumi:"reverseIndex"`
	// VDOM name.
	Vd pulumi.StringPtrInput `pulumi:"vd"`
}

func (ServicechainServiceIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicechainServiceIndex)(nil)).Elem()
}

func (i ServicechainServiceIndexArgs) ToServicechainServiceIndexOutput() ServicechainServiceIndexOutput {
	return i.ToServicechainServiceIndexOutputWithContext(context.Background())
}

func (i ServicechainServiceIndexArgs) ToServicechainServiceIndexOutputWithContext(ctx context.Context) ServicechainServiceIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicechainServiceIndexOutput)
}

// ServicechainServiceIndexArrayInput is an input type that accepts ServicechainServiceIndexArray and ServicechainServiceIndexArrayOutput values.
// You can construct a concrete instance of `ServicechainServiceIndexArrayInput` via:
//
//	ServicechainServiceIndexArray{ ServicechainServiceIndexArgs{...} }
type ServicechainServiceIndexArrayInput interface {
	pulumi.Input

	ToServicechainServiceIndexArrayOutput() ServicechainServiceIndexArrayOutput
	ToServicechainServiceIndexArrayOutputWithContext(context.Context) ServicechainServiceIndexArrayOutput
}

type ServicechainServiceIndexArray []ServicechainServiceIndexInput

func (ServicechainServiceIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicechainServiceIndex)(nil)).Elem()
}

func (i ServicechainServiceIndexArray) ToServicechainServiceIndexArrayOutput() ServicechainServiceIndexArrayOutput {
	return i.ToServicechainServiceIndexArrayOutputWithContext(context.Background())
}

func (i ServicechainServiceIndexArray) ToServicechainServiceIndexArrayOutputWithContext(ctx context.Context) ServicechainServiceIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicechainServiceIndexArrayOutput)
}

type ServicechainServiceIndexOutput struct{ *pulumi.OutputState }

func (ServicechainServiceIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicechainServiceIndex)(nil)).Elem()
}

func (o ServicechainServiceIndexOutput) ToServicechainServiceIndexOutput() ServicechainServiceIndexOutput {
	return o
}

func (o ServicechainServiceIndexOutput) ToServicechainServiceIndexOutputWithContext(ctx context.Context) ServicechainServiceIndexOutput {
	return o
}

// Service index.
func (o ServicechainServiceIndexOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServicechainServiceIndex) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Index name.
func (o ServicechainServiceIndexOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicechainServiceIndex) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reverse service index.
func (o ServicechainServiceIndexOutput) ReverseIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServicechainServiceIndex) *int { return v.ReverseIndex }).(pulumi.IntPtrOutput)
}

// VDOM name.
func (o ServicechainServiceIndexOutput) Vd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicechainServiceIndex) *string { return v.Vd }).(pulumi.StringPtrOutput)
}

type ServicechainServiceIndexArrayOutput struct{ *pulumi.OutputState }

func (ServicechainServiceIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicechainServiceIndex)(nil)).Elem()
}

func (o ServicechainServiceIndexArrayOutput) ToServicechainServiceIndexArrayOutput() ServicechainServiceIndexArrayOutput {
	return o
}

func (o ServicechainServiceIndexArrayOutput) ToServicechainServiceIndexArrayOutputWithContext(ctx context.Context) ServicechainServiceIndexArrayOutput {
	return o
}

func (o ServicechainServiceIndexArrayOutput) Index(i pulumi.IntInput) ServicechainServiceIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicechainServiceIndex {
		return vs[0].([]ServicechainServiceIndex)[vs[1].(int)]
	}).(ServicechainServiceIndexOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicechainServiceIndexInput)(nil)).Elem(), ServicechainServiceIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicechainServiceIndexArrayInput)(nil)).Elem(), ServicechainServiceIndexArray{})
	pulumi.RegisterOutputType(ServicechainServiceIndexOutput{})
	pulumi.RegisterOutputType(ServicechainServiceIndexArrayOutput{})
}
