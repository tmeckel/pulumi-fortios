// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wirelesscontrollerhotspot20

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Anqp3gppcellularMccMncList struct {
	// ID.
	Id *int `pulumi:"id"`
	// Mobile country code.
	Mcc *string `pulumi:"mcc"`
	// Mobile network code.
	Mnc *string `pulumi:"mnc"`
}

// Anqp3gppcellularMccMncListInput is an input type that accepts Anqp3gppcellularMccMncListArgs and Anqp3gppcellularMccMncListOutput values.
// You can construct a concrete instance of `Anqp3gppcellularMccMncListInput` via:
//
//	Anqp3gppcellularMccMncListArgs{...}
type Anqp3gppcellularMccMncListInput interface {
	pulumi.Input

	ToAnqp3gppcellularMccMncListOutput() Anqp3gppcellularMccMncListOutput
	ToAnqp3gppcellularMccMncListOutputWithContext(context.Context) Anqp3gppcellularMccMncListOutput
}

type Anqp3gppcellularMccMncListArgs struct {
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Mobile country code.
	Mcc pulumi.StringPtrInput `pulumi:"mcc"`
	// Mobile network code.
	Mnc pulumi.StringPtrInput `pulumi:"mnc"`
}

func (Anqp3gppcellularMccMncListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Anqp3gppcellularMccMncList)(nil)).Elem()
}

func (i Anqp3gppcellularMccMncListArgs) ToAnqp3gppcellularMccMncListOutput() Anqp3gppcellularMccMncListOutput {
	return i.ToAnqp3gppcellularMccMncListOutputWithContext(context.Background())
}

func (i Anqp3gppcellularMccMncListArgs) ToAnqp3gppcellularMccMncListOutputWithContext(ctx context.Context) Anqp3gppcellularMccMncListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Anqp3gppcellularMccMncListOutput)
}

// Anqp3gppcellularMccMncListArrayInput is an input type that accepts Anqp3gppcellularMccMncListArray and Anqp3gppcellularMccMncListArrayOutput values.
// You can construct a concrete instance of `Anqp3gppcellularMccMncListArrayInput` via:
//
//	Anqp3gppcellularMccMncListArray{ Anqp3gppcellularMccMncListArgs{...} }
type Anqp3gppcellularMccMncListArrayInput interface {
	pulumi.Input

	ToAnqp3gppcellularMccMncListArrayOutput() Anqp3gppcellularMccMncListArrayOutput
	ToAnqp3gppcellularMccMncListArrayOutputWithContext(context.Context) Anqp3gppcellularMccMncListArrayOutput
}

type Anqp3gppcellularMccMncListArray []Anqp3gppcellularMccMncListInput

func (Anqp3gppcellularMccMncListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Anqp3gppcellularMccMncList)(nil)).Elem()
}

func (i Anqp3gppcellularMccMncListArray) ToAnqp3gppcellularMccMncListArrayOutput() Anqp3gppcellularMccMncListArrayOutput {
	return i.ToAnqp3gppcellularMccMncListArrayOutputWithContext(context.Background())
}

func (i Anqp3gppcellularMccMncListArray) ToAnqp3gppcellularMccMncListArrayOutputWithContext(ctx context.Context) Anqp3gppcellularMccMncListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Anqp3gppcellularMccMncListArrayOutput)
}

type Anqp3gppcellularMccMncListOutput struct{ *pulumi.OutputState }

func (Anqp3gppcellularMccMncListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Anqp3gppcellularMccMncList)(nil)).Elem()
}

func (o Anqp3gppcellularMccMncListOutput) ToAnqp3gppcellularMccMncListOutput() Anqp3gppcellularMccMncListOutput {
	return o
}

func (o Anqp3gppcellularMccMncListOutput) ToAnqp3gppcellularMccMncListOutputWithContext(ctx context.Context) Anqp3gppcellularMccMncListOutput {
	return o
}

// ID.
func (o Anqp3gppcellularMccMncListOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Anqp3gppcellularMccMncList) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Mobile country code.
func (o Anqp3gppcellularMccMncListOutput) Mcc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Anqp3gppcellularMccMncList) *string { return v.Mcc }).(pulumi.StringPtrOutput)
}

// Mobile network code.
func (o Anqp3gppcellularMccMncListOutput) Mnc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Anqp3gppcellularMccMncList) *string { return v.Mnc }).(pulumi.StringPtrOutput)
}

type Anqp3gppcellularMccMncListArrayOutput struct{ *pulumi.OutputState }

func (Anqp3gppcellularMccMncListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Anqp3gppcellularMccMncList)(nil)).Elem()
}

func (o Anqp3gppcellularMccMncListArrayOutput) ToAnqp3gppcellularMccMncListArrayOutput() Anqp3gppcellularMccMncListArrayOutput {
	return o
}

func (o Anqp3gppcellularMccMncListArrayOutput) ToAnqp3gppcellularMccMncListArrayOutputWithContext(ctx context.Context) Anqp3gppcellularMccMncListArrayOutput {
	return o
}

func (o Anqp3gppcellularMccMncListArrayOutput) Index(i pulumi.IntInput) Anqp3gppcellularMccMncListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Anqp3gppcellularMccMncList {
		return vs[0].([]Anqp3gppcellularMccMncList)[vs[1].(int)]
	}).(Anqp3gppcellularMccMncListOutput)
}

type AnqpnairealmNaiList struct {
	// EAP Methods. The structure of `eapMethod` block is documented below.
	EapMethods []AnqpnairealmNaiListEapMethod `pulumi:"eapMethods"`
	// Enable/disable format in accordance with IETF RFC 4282. Valid values: `disable`, `enable`.
	Encoding *string `pulumi:"encoding"`
	// Configure NAI realms (delimited by a semi-colon character).
	NaiRealm *string `pulumi:"naiRealm"`
	// NAI realm name.
	Name *string `pulumi:"name"`
}

// AnqpnairealmNaiListInput is an input type that accepts AnqpnairealmNaiListArgs and AnqpnairealmNaiListOutput values.
// You can construct a concrete instance of `AnqpnairealmNaiListInput` via:
//
//	AnqpnairealmNaiListArgs{...}
type AnqpnairealmNaiListInput interface {
	pulumi.Input

	ToAnqpnairealmNaiListOutput() AnqpnairealmNaiListOutput
	ToAnqpnairealmNaiListOutputWithContext(context.Context) AnqpnairealmNaiListOutput
}

type AnqpnairealmNaiListArgs struct {
	// EAP Methods. The structure of `eapMethod` block is documented below.
	EapMethods AnqpnairealmNaiListEapMethodArrayInput `pulumi:"eapMethods"`
	// Enable/disable format in accordance with IETF RFC 4282. Valid values: `disable`, `enable`.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// Configure NAI realms (delimited by a semi-colon character).
	NaiRealm pulumi.StringPtrInput `pulumi:"naiRealm"`
	// NAI realm name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AnqpnairealmNaiListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpnairealmNaiList)(nil)).Elem()
}

func (i AnqpnairealmNaiListArgs) ToAnqpnairealmNaiListOutput() AnqpnairealmNaiListOutput {
	return i.ToAnqpnairealmNaiListOutputWithContext(context.Background())
}

func (i AnqpnairealmNaiListArgs) ToAnqpnairealmNaiListOutputWithContext(ctx context.Context) AnqpnairealmNaiListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmNaiListOutput)
}

// AnqpnairealmNaiListArrayInput is an input type that accepts AnqpnairealmNaiListArray and AnqpnairealmNaiListArrayOutput values.
// You can construct a concrete instance of `AnqpnairealmNaiListArrayInput` via:
//
//	AnqpnairealmNaiListArray{ AnqpnairealmNaiListArgs{...} }
type AnqpnairealmNaiListArrayInput interface {
	pulumi.Input

	ToAnqpnairealmNaiListArrayOutput() AnqpnairealmNaiListArrayOutput
	ToAnqpnairealmNaiListArrayOutputWithContext(context.Context) AnqpnairealmNaiListArrayOutput
}

type AnqpnairealmNaiListArray []AnqpnairealmNaiListInput

func (AnqpnairealmNaiListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpnairealmNaiList)(nil)).Elem()
}

func (i AnqpnairealmNaiListArray) ToAnqpnairealmNaiListArrayOutput() AnqpnairealmNaiListArrayOutput {
	return i.ToAnqpnairealmNaiListArrayOutputWithContext(context.Background())
}

func (i AnqpnairealmNaiListArray) ToAnqpnairealmNaiListArrayOutputWithContext(ctx context.Context) AnqpnairealmNaiListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmNaiListArrayOutput)
}

type AnqpnairealmNaiListOutput struct{ *pulumi.OutputState }

func (AnqpnairealmNaiListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpnairealmNaiList)(nil)).Elem()
}

func (o AnqpnairealmNaiListOutput) ToAnqpnairealmNaiListOutput() AnqpnairealmNaiListOutput {
	return o
}

func (o AnqpnairealmNaiListOutput) ToAnqpnairealmNaiListOutputWithContext(ctx context.Context) AnqpnairealmNaiListOutput {
	return o
}

// EAP Methods. The structure of `eapMethod` block is documented below.
func (o AnqpnairealmNaiListOutput) EapMethods() AnqpnairealmNaiListEapMethodArrayOutput {
	return o.ApplyT(func(v AnqpnairealmNaiList) []AnqpnairealmNaiListEapMethod { return v.EapMethods }).(AnqpnairealmNaiListEapMethodArrayOutput)
}

// Enable/disable format in accordance with IETF RFC 4282. Valid values: `disable`, `enable`.
func (o AnqpnairealmNaiListOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpnairealmNaiList) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Configure NAI realms (delimited by a semi-colon character).
func (o AnqpnairealmNaiListOutput) NaiRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpnairealmNaiList) *string { return v.NaiRealm }).(pulumi.StringPtrOutput)
}

// NAI realm name.
func (o AnqpnairealmNaiListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpnairealmNaiList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AnqpnairealmNaiListArrayOutput struct{ *pulumi.OutputState }

func (AnqpnairealmNaiListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpnairealmNaiList)(nil)).Elem()
}

func (o AnqpnairealmNaiListArrayOutput) ToAnqpnairealmNaiListArrayOutput() AnqpnairealmNaiListArrayOutput {
	return o
}

func (o AnqpnairealmNaiListArrayOutput) ToAnqpnairealmNaiListArrayOutputWithContext(ctx context.Context) AnqpnairealmNaiListArrayOutput {
	return o
}

func (o AnqpnairealmNaiListArrayOutput) Index(i pulumi.IntInput) AnqpnairealmNaiListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnqpnairealmNaiList {
		return vs[0].([]AnqpnairealmNaiList)[vs[1].(int)]
	}).(AnqpnairealmNaiListOutput)
}

type AnqpnairealmNaiListEapMethod struct {
	// EAP auth param. The structure of `authParam` block is documented below.
	AuthParams []AnqpnairealmNaiListEapMethodAuthParam `pulumi:"authParams"`
	// EAP method index.
	Index *int `pulumi:"index"`
	// EAP method type. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`.
	Method *string `pulumi:"method"`
}

// AnqpnairealmNaiListEapMethodInput is an input type that accepts AnqpnairealmNaiListEapMethodArgs and AnqpnairealmNaiListEapMethodOutput values.
// You can construct a concrete instance of `AnqpnairealmNaiListEapMethodInput` via:
//
//	AnqpnairealmNaiListEapMethodArgs{...}
type AnqpnairealmNaiListEapMethodInput interface {
	pulumi.Input

	ToAnqpnairealmNaiListEapMethodOutput() AnqpnairealmNaiListEapMethodOutput
	ToAnqpnairealmNaiListEapMethodOutputWithContext(context.Context) AnqpnairealmNaiListEapMethodOutput
}

type AnqpnairealmNaiListEapMethodArgs struct {
	// EAP auth param. The structure of `authParam` block is documented below.
	AuthParams AnqpnairealmNaiListEapMethodAuthParamArrayInput `pulumi:"authParams"`
	// EAP method index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// EAP method type. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`.
	Method pulumi.StringPtrInput `pulumi:"method"`
}

func (AnqpnairealmNaiListEapMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpnairealmNaiListEapMethod)(nil)).Elem()
}

func (i AnqpnairealmNaiListEapMethodArgs) ToAnqpnairealmNaiListEapMethodOutput() AnqpnairealmNaiListEapMethodOutput {
	return i.ToAnqpnairealmNaiListEapMethodOutputWithContext(context.Background())
}

func (i AnqpnairealmNaiListEapMethodArgs) ToAnqpnairealmNaiListEapMethodOutputWithContext(ctx context.Context) AnqpnairealmNaiListEapMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmNaiListEapMethodOutput)
}

// AnqpnairealmNaiListEapMethodArrayInput is an input type that accepts AnqpnairealmNaiListEapMethodArray and AnqpnairealmNaiListEapMethodArrayOutput values.
// You can construct a concrete instance of `AnqpnairealmNaiListEapMethodArrayInput` via:
//
//	AnqpnairealmNaiListEapMethodArray{ AnqpnairealmNaiListEapMethodArgs{...} }
type AnqpnairealmNaiListEapMethodArrayInput interface {
	pulumi.Input

	ToAnqpnairealmNaiListEapMethodArrayOutput() AnqpnairealmNaiListEapMethodArrayOutput
	ToAnqpnairealmNaiListEapMethodArrayOutputWithContext(context.Context) AnqpnairealmNaiListEapMethodArrayOutput
}

type AnqpnairealmNaiListEapMethodArray []AnqpnairealmNaiListEapMethodInput

func (AnqpnairealmNaiListEapMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpnairealmNaiListEapMethod)(nil)).Elem()
}

func (i AnqpnairealmNaiListEapMethodArray) ToAnqpnairealmNaiListEapMethodArrayOutput() AnqpnairealmNaiListEapMethodArrayOutput {
	return i.ToAnqpnairealmNaiListEapMethodArrayOutputWithContext(context.Background())
}

func (i AnqpnairealmNaiListEapMethodArray) ToAnqpnairealmNaiListEapMethodArrayOutputWithContext(ctx context.Context) AnqpnairealmNaiListEapMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmNaiListEapMethodArrayOutput)
}

type AnqpnairealmNaiListEapMethodOutput struct{ *pulumi.OutputState }

func (AnqpnairealmNaiListEapMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpnairealmNaiListEapMethod)(nil)).Elem()
}

func (o AnqpnairealmNaiListEapMethodOutput) ToAnqpnairealmNaiListEapMethodOutput() AnqpnairealmNaiListEapMethodOutput {
	return o
}

func (o AnqpnairealmNaiListEapMethodOutput) ToAnqpnairealmNaiListEapMethodOutputWithContext(ctx context.Context) AnqpnairealmNaiListEapMethodOutput {
	return o
}

// EAP auth param. The structure of `authParam` block is documented below.
func (o AnqpnairealmNaiListEapMethodOutput) AuthParams() AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return o.ApplyT(func(v AnqpnairealmNaiListEapMethod) []AnqpnairealmNaiListEapMethodAuthParam { return v.AuthParams }).(AnqpnairealmNaiListEapMethodAuthParamArrayOutput)
}

// EAP method index.
func (o AnqpnairealmNaiListEapMethodOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnqpnairealmNaiListEapMethod) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// EAP method type. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`.
func (o AnqpnairealmNaiListEapMethodOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpnairealmNaiListEapMethod) *string { return v.Method }).(pulumi.StringPtrOutput)
}

type AnqpnairealmNaiListEapMethodArrayOutput struct{ *pulumi.OutputState }

func (AnqpnairealmNaiListEapMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpnairealmNaiListEapMethod)(nil)).Elem()
}

func (o AnqpnairealmNaiListEapMethodArrayOutput) ToAnqpnairealmNaiListEapMethodArrayOutput() AnqpnairealmNaiListEapMethodArrayOutput {
	return o
}

func (o AnqpnairealmNaiListEapMethodArrayOutput) ToAnqpnairealmNaiListEapMethodArrayOutputWithContext(ctx context.Context) AnqpnairealmNaiListEapMethodArrayOutput {
	return o
}

func (o AnqpnairealmNaiListEapMethodArrayOutput) Index(i pulumi.IntInput) AnqpnairealmNaiListEapMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnqpnairealmNaiListEapMethod {
		return vs[0].([]AnqpnairealmNaiListEapMethod)[vs[1].(int)]
	}).(AnqpnairealmNaiListEapMethodOutput)
}

type AnqpnairealmNaiListEapMethodAuthParam struct {
	// ID of authentication parameter. Valid values: `non-eap-inner-auth`, `inner-auth-eap`, `credential`, `tunneled-credential`.
	Id *string `pulumi:"id"`
	// Param index.
	Index *int `pulumi:"index"`
	// Value of authentication parameter. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`, `non-eap-pap`, `non-eap-chap`, `non-eap-mschap`, `non-eap-mschapv2`, `cred-sim`, `cred-usim`, `cred-nfc`, `cred-hardware-token`, `cred-softoken`, `cred-certificate`, `cred-user-pwd`, `cred-none`, `cred-vendor-specific`, `tun-cred-sim`, `tun-cred-usim`, `tun-cred-nfc`, `tun-cred-hardware-token`, `tun-cred-softoken`, `tun-cred-certificate`, `tun-cred-user-pwd`, `tun-cred-anonymous`, `tun-cred-vendor-specific`.
	Val *string `pulumi:"val"`
}

// AnqpnairealmNaiListEapMethodAuthParamInput is an input type that accepts AnqpnairealmNaiListEapMethodAuthParamArgs and AnqpnairealmNaiListEapMethodAuthParamOutput values.
// You can construct a concrete instance of `AnqpnairealmNaiListEapMethodAuthParamInput` via:
//
//	AnqpnairealmNaiListEapMethodAuthParamArgs{...}
type AnqpnairealmNaiListEapMethodAuthParamInput interface {
	pulumi.Input

	ToAnqpnairealmNaiListEapMethodAuthParamOutput() AnqpnairealmNaiListEapMethodAuthParamOutput
	ToAnqpnairealmNaiListEapMethodAuthParamOutputWithContext(context.Context) AnqpnairealmNaiListEapMethodAuthParamOutput
}

type AnqpnairealmNaiListEapMethodAuthParamArgs struct {
	// ID of authentication parameter. Valid values: `non-eap-inner-auth`, `inner-auth-eap`, `credential`, `tunneled-credential`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Param index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Value of authentication parameter. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`, `non-eap-pap`, `non-eap-chap`, `non-eap-mschap`, `non-eap-mschapv2`, `cred-sim`, `cred-usim`, `cred-nfc`, `cred-hardware-token`, `cred-softoken`, `cred-certificate`, `cred-user-pwd`, `cred-none`, `cred-vendor-specific`, `tun-cred-sim`, `tun-cred-usim`, `tun-cred-nfc`, `tun-cred-hardware-token`, `tun-cred-softoken`, `tun-cred-certificate`, `tun-cred-user-pwd`, `tun-cred-anonymous`, `tun-cred-vendor-specific`.
	Val pulumi.StringPtrInput `pulumi:"val"`
}

func (AnqpnairealmNaiListEapMethodAuthParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpnairealmNaiListEapMethodAuthParam)(nil)).Elem()
}

func (i AnqpnairealmNaiListEapMethodAuthParamArgs) ToAnqpnairealmNaiListEapMethodAuthParamOutput() AnqpnairealmNaiListEapMethodAuthParamOutput {
	return i.ToAnqpnairealmNaiListEapMethodAuthParamOutputWithContext(context.Background())
}

func (i AnqpnairealmNaiListEapMethodAuthParamArgs) ToAnqpnairealmNaiListEapMethodAuthParamOutputWithContext(ctx context.Context) AnqpnairealmNaiListEapMethodAuthParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmNaiListEapMethodAuthParamOutput)
}

// AnqpnairealmNaiListEapMethodAuthParamArrayInput is an input type that accepts AnqpnairealmNaiListEapMethodAuthParamArray and AnqpnairealmNaiListEapMethodAuthParamArrayOutput values.
// You can construct a concrete instance of `AnqpnairealmNaiListEapMethodAuthParamArrayInput` via:
//
//	AnqpnairealmNaiListEapMethodAuthParamArray{ AnqpnairealmNaiListEapMethodAuthParamArgs{...} }
type AnqpnairealmNaiListEapMethodAuthParamArrayInput interface {
	pulumi.Input

	ToAnqpnairealmNaiListEapMethodAuthParamArrayOutput() AnqpnairealmNaiListEapMethodAuthParamArrayOutput
	ToAnqpnairealmNaiListEapMethodAuthParamArrayOutputWithContext(context.Context) AnqpnairealmNaiListEapMethodAuthParamArrayOutput
}

type AnqpnairealmNaiListEapMethodAuthParamArray []AnqpnairealmNaiListEapMethodAuthParamInput

func (AnqpnairealmNaiListEapMethodAuthParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpnairealmNaiListEapMethodAuthParam)(nil)).Elem()
}

func (i AnqpnairealmNaiListEapMethodAuthParamArray) ToAnqpnairealmNaiListEapMethodAuthParamArrayOutput() AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return i.ToAnqpnairealmNaiListEapMethodAuthParamArrayOutputWithContext(context.Background())
}

func (i AnqpnairealmNaiListEapMethodAuthParamArray) ToAnqpnairealmNaiListEapMethodAuthParamArrayOutputWithContext(ctx context.Context) AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpnairealmNaiListEapMethodAuthParamArrayOutput)
}

type AnqpnairealmNaiListEapMethodAuthParamOutput struct{ *pulumi.OutputState }

func (AnqpnairealmNaiListEapMethodAuthParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpnairealmNaiListEapMethodAuthParam)(nil)).Elem()
}

func (o AnqpnairealmNaiListEapMethodAuthParamOutput) ToAnqpnairealmNaiListEapMethodAuthParamOutput() AnqpnairealmNaiListEapMethodAuthParamOutput {
	return o
}

func (o AnqpnairealmNaiListEapMethodAuthParamOutput) ToAnqpnairealmNaiListEapMethodAuthParamOutputWithContext(ctx context.Context) AnqpnairealmNaiListEapMethodAuthParamOutput {
	return o
}

// ID of authentication parameter. Valid values: `non-eap-inner-auth`, `inner-auth-eap`, `credential`, `tunneled-credential`.
func (o AnqpnairealmNaiListEapMethodAuthParamOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpnairealmNaiListEapMethodAuthParam) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Param index.
func (o AnqpnairealmNaiListEapMethodAuthParamOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnqpnairealmNaiListEapMethodAuthParam) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Value of authentication parameter. Valid values: `eap-identity`, `eap-md5`, `eap-tls`, `eap-ttls`, `eap-peap`, `eap-sim`, `eap-aka`, `eap-aka-prime`, `non-eap-pap`, `non-eap-chap`, `non-eap-mschap`, `non-eap-mschapv2`, `cred-sim`, `cred-usim`, `cred-nfc`, `cred-hardware-token`, `cred-softoken`, `cred-certificate`, `cred-user-pwd`, `cred-none`, `cred-vendor-specific`, `tun-cred-sim`, `tun-cred-usim`, `tun-cred-nfc`, `tun-cred-hardware-token`, `tun-cred-softoken`, `tun-cred-certificate`, `tun-cred-user-pwd`, `tun-cred-anonymous`, `tun-cred-vendor-specific`.
func (o AnqpnairealmNaiListEapMethodAuthParamOutput) Val() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpnairealmNaiListEapMethodAuthParam) *string { return v.Val }).(pulumi.StringPtrOutput)
}

type AnqpnairealmNaiListEapMethodAuthParamArrayOutput struct{ *pulumi.OutputState }

func (AnqpnairealmNaiListEapMethodAuthParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpnairealmNaiListEapMethodAuthParam)(nil)).Elem()
}

func (o AnqpnairealmNaiListEapMethodAuthParamArrayOutput) ToAnqpnairealmNaiListEapMethodAuthParamArrayOutput() AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return o
}

func (o AnqpnairealmNaiListEapMethodAuthParamArrayOutput) ToAnqpnairealmNaiListEapMethodAuthParamArrayOutputWithContext(ctx context.Context) AnqpnairealmNaiListEapMethodAuthParamArrayOutput {
	return o
}

func (o AnqpnairealmNaiListEapMethodAuthParamArrayOutput) Index(i pulumi.IntInput) AnqpnairealmNaiListEapMethodAuthParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnqpnairealmNaiListEapMethodAuthParam {
		return vs[0].([]AnqpnairealmNaiListEapMethodAuthParam)[vs[1].(int)]
	}).(AnqpnairealmNaiListEapMethodAuthParamOutput)
}

type AnqproamingconsortiumOiList struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// OI index.
	Index *int `pulumi:"index"`
	// Organization identifier.
	Oi *string `pulumi:"oi"`
}

// AnqproamingconsortiumOiListInput is an input type that accepts AnqproamingconsortiumOiListArgs and AnqproamingconsortiumOiListOutput values.
// You can construct a concrete instance of `AnqproamingconsortiumOiListInput` via:
//
//	AnqproamingconsortiumOiListArgs{...}
type AnqproamingconsortiumOiListInput interface {
	pulumi.Input

	ToAnqproamingconsortiumOiListOutput() AnqproamingconsortiumOiListOutput
	ToAnqproamingconsortiumOiListOutputWithContext(context.Context) AnqproamingconsortiumOiListOutput
}

type AnqproamingconsortiumOiListArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// OI index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Organization identifier.
	Oi pulumi.StringPtrInput `pulumi:"oi"`
}

func (AnqproamingconsortiumOiListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqproamingconsortiumOiList)(nil)).Elem()
}

func (i AnqproamingconsortiumOiListArgs) ToAnqproamingconsortiumOiListOutput() AnqproamingconsortiumOiListOutput {
	return i.ToAnqproamingconsortiumOiListOutputWithContext(context.Background())
}

func (i AnqproamingconsortiumOiListArgs) ToAnqproamingconsortiumOiListOutputWithContext(ctx context.Context) AnqproamingconsortiumOiListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqproamingconsortiumOiListOutput)
}

// AnqproamingconsortiumOiListArrayInput is an input type that accepts AnqproamingconsortiumOiListArray and AnqproamingconsortiumOiListArrayOutput values.
// You can construct a concrete instance of `AnqproamingconsortiumOiListArrayInput` via:
//
//	AnqproamingconsortiumOiListArray{ AnqproamingconsortiumOiListArgs{...} }
type AnqproamingconsortiumOiListArrayInput interface {
	pulumi.Input

	ToAnqproamingconsortiumOiListArrayOutput() AnqproamingconsortiumOiListArrayOutput
	ToAnqproamingconsortiumOiListArrayOutputWithContext(context.Context) AnqproamingconsortiumOiListArrayOutput
}

type AnqproamingconsortiumOiListArray []AnqproamingconsortiumOiListInput

func (AnqproamingconsortiumOiListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqproamingconsortiumOiList)(nil)).Elem()
}

func (i AnqproamingconsortiumOiListArray) ToAnqproamingconsortiumOiListArrayOutput() AnqproamingconsortiumOiListArrayOutput {
	return i.ToAnqproamingconsortiumOiListArrayOutputWithContext(context.Background())
}

func (i AnqproamingconsortiumOiListArray) ToAnqproamingconsortiumOiListArrayOutputWithContext(ctx context.Context) AnqproamingconsortiumOiListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqproamingconsortiumOiListArrayOutput)
}

type AnqproamingconsortiumOiListOutput struct{ *pulumi.OutputState }

func (AnqproamingconsortiumOiListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqproamingconsortiumOiList)(nil)).Elem()
}

func (o AnqproamingconsortiumOiListOutput) ToAnqproamingconsortiumOiListOutput() AnqproamingconsortiumOiListOutput {
	return o
}

func (o AnqproamingconsortiumOiListOutput) ToAnqproamingconsortiumOiListOutputWithContext(ctx context.Context) AnqproamingconsortiumOiListOutput {
	return o
}

// Comment.
func (o AnqproamingconsortiumOiListOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqproamingconsortiumOiList) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// OI index.
func (o AnqproamingconsortiumOiListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnqproamingconsortiumOiList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Organization identifier.
func (o AnqproamingconsortiumOiListOutput) Oi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqproamingconsortiumOiList) *string { return v.Oi }).(pulumi.StringPtrOutput)
}

type AnqproamingconsortiumOiListArrayOutput struct{ *pulumi.OutputState }

func (AnqproamingconsortiumOiListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqproamingconsortiumOiList)(nil)).Elem()
}

func (o AnqproamingconsortiumOiListArrayOutput) ToAnqproamingconsortiumOiListArrayOutput() AnqproamingconsortiumOiListArrayOutput {
	return o
}

func (o AnqproamingconsortiumOiListArrayOutput) ToAnqproamingconsortiumOiListArrayOutputWithContext(ctx context.Context) AnqproamingconsortiumOiListArrayOutput {
	return o
}

func (o AnqproamingconsortiumOiListArrayOutput) Index(i pulumi.IntInput) AnqproamingconsortiumOiListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnqproamingconsortiumOiList {
		return vs[0].([]AnqproamingconsortiumOiList)[vs[1].(int)]
	}).(AnqproamingconsortiumOiListOutput)
}

type AnqpvenuenameValueList struct {
	// Value index.
	Index *int `pulumi:"index"`
	// Language code.
	Lang *string `pulumi:"lang"`
	// Venue name value.
	Value *string `pulumi:"value"`
}

// AnqpvenuenameValueListInput is an input type that accepts AnqpvenuenameValueListArgs and AnqpvenuenameValueListOutput values.
// You can construct a concrete instance of `AnqpvenuenameValueListInput` via:
//
//	AnqpvenuenameValueListArgs{...}
type AnqpvenuenameValueListInput interface {
	pulumi.Input

	ToAnqpvenuenameValueListOutput() AnqpvenuenameValueListOutput
	ToAnqpvenuenameValueListOutputWithContext(context.Context) AnqpvenuenameValueListOutput
}

type AnqpvenuenameValueListArgs struct {
	// Value index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Venue name value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AnqpvenuenameValueListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpvenuenameValueList)(nil)).Elem()
}

func (i AnqpvenuenameValueListArgs) ToAnqpvenuenameValueListOutput() AnqpvenuenameValueListOutput {
	return i.ToAnqpvenuenameValueListOutputWithContext(context.Background())
}

func (i AnqpvenuenameValueListArgs) ToAnqpvenuenameValueListOutputWithContext(ctx context.Context) AnqpvenuenameValueListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpvenuenameValueListOutput)
}

// AnqpvenuenameValueListArrayInput is an input type that accepts AnqpvenuenameValueListArray and AnqpvenuenameValueListArrayOutput values.
// You can construct a concrete instance of `AnqpvenuenameValueListArrayInput` via:
//
//	AnqpvenuenameValueListArray{ AnqpvenuenameValueListArgs{...} }
type AnqpvenuenameValueListArrayInput interface {
	pulumi.Input

	ToAnqpvenuenameValueListArrayOutput() AnqpvenuenameValueListArrayOutput
	ToAnqpvenuenameValueListArrayOutputWithContext(context.Context) AnqpvenuenameValueListArrayOutput
}

type AnqpvenuenameValueListArray []AnqpvenuenameValueListInput

func (AnqpvenuenameValueListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpvenuenameValueList)(nil)).Elem()
}

func (i AnqpvenuenameValueListArray) ToAnqpvenuenameValueListArrayOutput() AnqpvenuenameValueListArrayOutput {
	return i.ToAnqpvenuenameValueListArrayOutputWithContext(context.Background())
}

func (i AnqpvenuenameValueListArray) ToAnqpvenuenameValueListArrayOutputWithContext(ctx context.Context) AnqpvenuenameValueListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpvenuenameValueListArrayOutput)
}

type AnqpvenuenameValueListOutput struct{ *pulumi.OutputState }

func (AnqpvenuenameValueListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpvenuenameValueList)(nil)).Elem()
}

func (o AnqpvenuenameValueListOutput) ToAnqpvenuenameValueListOutput() AnqpvenuenameValueListOutput {
	return o
}

func (o AnqpvenuenameValueListOutput) ToAnqpvenuenameValueListOutputWithContext(ctx context.Context) AnqpvenuenameValueListOutput {
	return o
}

// Value index.
func (o AnqpvenuenameValueListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnqpvenuenameValueList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Language code.
func (o AnqpvenuenameValueListOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpvenuenameValueList) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Venue name value.
func (o AnqpvenuenameValueListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpvenuenameValueList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AnqpvenuenameValueListArrayOutput struct{ *pulumi.OutputState }

func (AnqpvenuenameValueListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpvenuenameValueList)(nil)).Elem()
}

func (o AnqpvenuenameValueListArrayOutput) ToAnqpvenuenameValueListArrayOutput() AnqpvenuenameValueListArrayOutput {
	return o
}

func (o AnqpvenuenameValueListArrayOutput) ToAnqpvenuenameValueListArrayOutputWithContext(ctx context.Context) AnqpvenuenameValueListArrayOutput {
	return o
}

func (o AnqpvenuenameValueListArrayOutput) Index(i pulumi.IntInput) AnqpvenuenameValueListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnqpvenuenameValueList {
		return vs[0].([]AnqpvenuenameValueList)[vs[1].(int)]
	}).(AnqpvenuenameValueListOutput)
}

type AnqpvenueurlValueList struct {
	// URL index.
	Index *int `pulumi:"index"`
	// Venue number.
	Number *int `pulumi:"number"`
	// Venue URL value.
	Value *string `pulumi:"value"`
}

// AnqpvenueurlValueListInput is an input type that accepts AnqpvenueurlValueListArgs and AnqpvenueurlValueListOutput values.
// You can construct a concrete instance of `AnqpvenueurlValueListInput` via:
//
//	AnqpvenueurlValueListArgs{...}
type AnqpvenueurlValueListInput interface {
	pulumi.Input

	ToAnqpvenueurlValueListOutput() AnqpvenueurlValueListOutput
	ToAnqpvenueurlValueListOutputWithContext(context.Context) AnqpvenueurlValueListOutput
}

type AnqpvenueurlValueListArgs struct {
	// URL index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Venue number.
	Number pulumi.IntPtrInput `pulumi:"number"`
	// Venue URL value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AnqpvenueurlValueListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpvenueurlValueList)(nil)).Elem()
}

func (i AnqpvenueurlValueListArgs) ToAnqpvenueurlValueListOutput() AnqpvenueurlValueListOutput {
	return i.ToAnqpvenueurlValueListOutputWithContext(context.Background())
}

func (i AnqpvenueurlValueListArgs) ToAnqpvenueurlValueListOutputWithContext(ctx context.Context) AnqpvenueurlValueListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpvenueurlValueListOutput)
}

// AnqpvenueurlValueListArrayInput is an input type that accepts AnqpvenueurlValueListArray and AnqpvenueurlValueListArrayOutput values.
// You can construct a concrete instance of `AnqpvenueurlValueListArrayInput` via:
//
//	AnqpvenueurlValueListArray{ AnqpvenueurlValueListArgs{...} }
type AnqpvenueurlValueListArrayInput interface {
	pulumi.Input

	ToAnqpvenueurlValueListArrayOutput() AnqpvenueurlValueListArrayOutput
	ToAnqpvenueurlValueListArrayOutputWithContext(context.Context) AnqpvenueurlValueListArrayOutput
}

type AnqpvenueurlValueListArray []AnqpvenueurlValueListInput

func (AnqpvenueurlValueListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpvenueurlValueList)(nil)).Elem()
}

func (i AnqpvenueurlValueListArray) ToAnqpvenueurlValueListArrayOutput() AnqpvenueurlValueListArrayOutput {
	return i.ToAnqpvenueurlValueListArrayOutputWithContext(context.Background())
}

func (i AnqpvenueurlValueListArray) ToAnqpvenueurlValueListArrayOutputWithContext(ctx context.Context) AnqpvenueurlValueListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnqpvenueurlValueListArrayOutput)
}

type AnqpvenueurlValueListOutput struct{ *pulumi.OutputState }

func (AnqpvenueurlValueListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnqpvenueurlValueList)(nil)).Elem()
}

func (o AnqpvenueurlValueListOutput) ToAnqpvenueurlValueListOutput() AnqpvenueurlValueListOutput {
	return o
}

func (o AnqpvenueurlValueListOutput) ToAnqpvenueurlValueListOutputWithContext(ctx context.Context) AnqpvenueurlValueListOutput {
	return o
}

// URL index.
func (o AnqpvenueurlValueListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnqpvenueurlValueList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Venue number.
func (o AnqpvenueurlValueListOutput) Number() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnqpvenueurlValueList) *int { return v.Number }).(pulumi.IntPtrOutput)
}

// Venue URL value.
func (o AnqpvenueurlValueListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnqpvenueurlValueList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AnqpvenueurlValueListArrayOutput struct{ *pulumi.OutputState }

func (AnqpvenueurlValueListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnqpvenueurlValueList)(nil)).Elem()
}

func (o AnqpvenueurlValueListArrayOutput) ToAnqpvenueurlValueListArrayOutput() AnqpvenueurlValueListArrayOutput {
	return o
}

func (o AnqpvenueurlValueListArrayOutput) ToAnqpvenueurlValueListArrayOutputWithContext(ctx context.Context) AnqpvenueurlValueListArrayOutput {
	return o
}

func (o AnqpvenueurlValueListArrayOutput) Index(i pulumi.IntInput) AnqpvenueurlValueListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnqpvenueurlValueList {
		return vs[0].([]AnqpvenueurlValueList)[vs[1].(int)]
	}).(AnqpvenueurlValueListOutput)
}

type H2qpadviceofchargeAocList struct {
	// NAI realm list name.
	NaiRealm *string `pulumi:"naiRealm"`
	// NAI realm encoding.
	NaiRealmEncoding *string `pulumi:"naiRealmEncoding"`
	// Advice of charge ID.
	Name *string `pulumi:"name"`
	// Plan info. The structure of `planInfo` block is documented below.
	PlanInfos []H2qpadviceofchargeAocListPlanInfo `pulumi:"planInfos"`
	// Usage charge type. Valid values: `time-based`, `volume-based`, `time-and-volume-based`, `unlimited`.
	Type *string `pulumi:"type"`
}

// H2qpadviceofchargeAocListInput is an input type that accepts H2qpadviceofchargeAocListArgs and H2qpadviceofchargeAocListOutput values.
// You can construct a concrete instance of `H2qpadviceofchargeAocListInput` via:
//
//	H2qpadviceofchargeAocListArgs{...}
type H2qpadviceofchargeAocListInput interface {
	pulumi.Input

	ToH2qpadviceofchargeAocListOutput() H2qpadviceofchargeAocListOutput
	ToH2qpadviceofchargeAocListOutputWithContext(context.Context) H2qpadviceofchargeAocListOutput
}

type H2qpadviceofchargeAocListArgs struct {
	// NAI realm list name.
	NaiRealm pulumi.StringPtrInput `pulumi:"naiRealm"`
	// NAI realm encoding.
	NaiRealmEncoding pulumi.StringPtrInput `pulumi:"naiRealmEncoding"`
	// Advice of charge ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Plan info. The structure of `planInfo` block is documented below.
	PlanInfos H2qpadviceofchargeAocListPlanInfoArrayInput `pulumi:"planInfos"`
	// Usage charge type. Valid values: `time-based`, `volume-based`, `time-and-volume-based`, `unlimited`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (H2qpadviceofchargeAocListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qpadviceofchargeAocList)(nil)).Elem()
}

func (i H2qpadviceofchargeAocListArgs) ToH2qpadviceofchargeAocListOutput() H2qpadviceofchargeAocListOutput {
	return i.ToH2qpadviceofchargeAocListOutputWithContext(context.Background())
}

func (i H2qpadviceofchargeAocListArgs) ToH2qpadviceofchargeAocListOutputWithContext(ctx context.Context) H2qpadviceofchargeAocListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpadviceofchargeAocListOutput)
}

// H2qpadviceofchargeAocListArrayInput is an input type that accepts H2qpadviceofchargeAocListArray and H2qpadviceofchargeAocListArrayOutput values.
// You can construct a concrete instance of `H2qpadviceofchargeAocListArrayInput` via:
//
//	H2qpadviceofchargeAocListArray{ H2qpadviceofchargeAocListArgs{...} }
type H2qpadviceofchargeAocListArrayInput interface {
	pulumi.Input

	ToH2qpadviceofchargeAocListArrayOutput() H2qpadviceofchargeAocListArrayOutput
	ToH2qpadviceofchargeAocListArrayOutputWithContext(context.Context) H2qpadviceofchargeAocListArrayOutput
}

type H2qpadviceofchargeAocListArray []H2qpadviceofchargeAocListInput

func (H2qpadviceofchargeAocListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qpadviceofchargeAocList)(nil)).Elem()
}

func (i H2qpadviceofchargeAocListArray) ToH2qpadviceofchargeAocListArrayOutput() H2qpadviceofchargeAocListArrayOutput {
	return i.ToH2qpadviceofchargeAocListArrayOutputWithContext(context.Background())
}

func (i H2qpadviceofchargeAocListArray) ToH2qpadviceofchargeAocListArrayOutputWithContext(ctx context.Context) H2qpadviceofchargeAocListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpadviceofchargeAocListArrayOutput)
}

type H2qpadviceofchargeAocListOutput struct{ *pulumi.OutputState }

func (H2qpadviceofchargeAocListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qpadviceofchargeAocList)(nil)).Elem()
}

func (o H2qpadviceofchargeAocListOutput) ToH2qpadviceofchargeAocListOutput() H2qpadviceofchargeAocListOutput {
	return o
}

func (o H2qpadviceofchargeAocListOutput) ToH2qpadviceofchargeAocListOutputWithContext(ctx context.Context) H2qpadviceofchargeAocListOutput {
	return o
}

// NAI realm list name.
func (o H2qpadviceofchargeAocListOutput) NaiRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocList) *string { return v.NaiRealm }).(pulumi.StringPtrOutput)
}

// NAI realm encoding.
func (o H2qpadviceofchargeAocListOutput) NaiRealmEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocList) *string { return v.NaiRealmEncoding }).(pulumi.StringPtrOutput)
}

// Advice of charge ID.
func (o H2qpadviceofchargeAocListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Plan info. The structure of `planInfo` block is documented below.
func (o H2qpadviceofchargeAocListOutput) PlanInfos() H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocList) []H2qpadviceofchargeAocListPlanInfo { return v.PlanInfos }).(H2qpadviceofchargeAocListPlanInfoArrayOutput)
}

// Usage charge type. Valid values: `time-based`, `volume-based`, `time-and-volume-based`, `unlimited`.
func (o H2qpadviceofchargeAocListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type H2qpadviceofchargeAocListArrayOutput struct{ *pulumi.OutputState }

func (H2qpadviceofchargeAocListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qpadviceofchargeAocList)(nil)).Elem()
}

func (o H2qpadviceofchargeAocListArrayOutput) ToH2qpadviceofchargeAocListArrayOutput() H2qpadviceofchargeAocListArrayOutput {
	return o
}

func (o H2qpadviceofchargeAocListArrayOutput) ToH2qpadviceofchargeAocListArrayOutputWithContext(ctx context.Context) H2qpadviceofchargeAocListArrayOutput {
	return o
}

func (o H2qpadviceofchargeAocListArrayOutput) Index(i pulumi.IntInput) H2qpadviceofchargeAocListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) H2qpadviceofchargeAocList {
		return vs[0].([]H2qpadviceofchargeAocList)[vs[1].(int)]
	}).(H2qpadviceofchargeAocListOutput)
}

type H2qpadviceofchargeAocListPlanInfo struct {
	// Currency code.
	Currency *string `pulumi:"currency"`
	// Info file.
	InfoFile *string `pulumi:"infoFile"`
	// Languague code.
	Lang *string `pulumi:"lang"`
	// Plan name.
	Name *string `pulumi:"name"`
}

// H2qpadviceofchargeAocListPlanInfoInput is an input type that accepts H2qpadviceofchargeAocListPlanInfoArgs and H2qpadviceofchargeAocListPlanInfoOutput values.
// You can construct a concrete instance of `H2qpadviceofchargeAocListPlanInfoInput` via:
//
//	H2qpadviceofchargeAocListPlanInfoArgs{...}
type H2qpadviceofchargeAocListPlanInfoInput interface {
	pulumi.Input

	ToH2qpadviceofchargeAocListPlanInfoOutput() H2qpadviceofchargeAocListPlanInfoOutput
	ToH2qpadviceofchargeAocListPlanInfoOutputWithContext(context.Context) H2qpadviceofchargeAocListPlanInfoOutput
}

type H2qpadviceofchargeAocListPlanInfoArgs struct {
	// Currency code.
	Currency pulumi.StringPtrInput `pulumi:"currency"`
	// Info file.
	InfoFile pulumi.StringPtrInput `pulumi:"infoFile"`
	// Languague code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Plan name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (H2qpadviceofchargeAocListPlanInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qpadviceofchargeAocListPlanInfo)(nil)).Elem()
}

func (i H2qpadviceofchargeAocListPlanInfoArgs) ToH2qpadviceofchargeAocListPlanInfoOutput() H2qpadviceofchargeAocListPlanInfoOutput {
	return i.ToH2qpadviceofchargeAocListPlanInfoOutputWithContext(context.Background())
}

func (i H2qpadviceofchargeAocListPlanInfoArgs) ToH2qpadviceofchargeAocListPlanInfoOutputWithContext(ctx context.Context) H2qpadviceofchargeAocListPlanInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpadviceofchargeAocListPlanInfoOutput)
}

// H2qpadviceofchargeAocListPlanInfoArrayInput is an input type that accepts H2qpadviceofchargeAocListPlanInfoArray and H2qpadviceofchargeAocListPlanInfoArrayOutput values.
// You can construct a concrete instance of `H2qpadviceofchargeAocListPlanInfoArrayInput` via:
//
//	H2qpadviceofchargeAocListPlanInfoArray{ H2qpadviceofchargeAocListPlanInfoArgs{...} }
type H2qpadviceofchargeAocListPlanInfoArrayInput interface {
	pulumi.Input

	ToH2qpadviceofchargeAocListPlanInfoArrayOutput() H2qpadviceofchargeAocListPlanInfoArrayOutput
	ToH2qpadviceofchargeAocListPlanInfoArrayOutputWithContext(context.Context) H2qpadviceofchargeAocListPlanInfoArrayOutput
}

type H2qpadviceofchargeAocListPlanInfoArray []H2qpadviceofchargeAocListPlanInfoInput

func (H2qpadviceofchargeAocListPlanInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qpadviceofchargeAocListPlanInfo)(nil)).Elem()
}

func (i H2qpadviceofchargeAocListPlanInfoArray) ToH2qpadviceofchargeAocListPlanInfoArrayOutput() H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return i.ToH2qpadviceofchargeAocListPlanInfoArrayOutputWithContext(context.Background())
}

func (i H2qpadviceofchargeAocListPlanInfoArray) ToH2qpadviceofchargeAocListPlanInfoArrayOutputWithContext(ctx context.Context) H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpadviceofchargeAocListPlanInfoArrayOutput)
}

type H2qpadviceofchargeAocListPlanInfoOutput struct{ *pulumi.OutputState }

func (H2qpadviceofchargeAocListPlanInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qpadviceofchargeAocListPlanInfo)(nil)).Elem()
}

func (o H2qpadviceofchargeAocListPlanInfoOutput) ToH2qpadviceofchargeAocListPlanInfoOutput() H2qpadviceofchargeAocListPlanInfoOutput {
	return o
}

func (o H2qpadviceofchargeAocListPlanInfoOutput) ToH2qpadviceofchargeAocListPlanInfoOutputWithContext(ctx context.Context) H2qpadviceofchargeAocListPlanInfoOutput {
	return o
}

// Currency code.
func (o H2qpadviceofchargeAocListPlanInfoOutput) Currency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocListPlanInfo) *string { return v.Currency }).(pulumi.StringPtrOutput)
}

// Info file.
func (o H2qpadviceofchargeAocListPlanInfoOutput) InfoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocListPlanInfo) *string { return v.InfoFile }).(pulumi.StringPtrOutput)
}

// Languague code.
func (o H2qpadviceofchargeAocListPlanInfoOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocListPlanInfo) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Plan name.
func (o H2qpadviceofchargeAocListPlanInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpadviceofchargeAocListPlanInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type H2qpadviceofchargeAocListPlanInfoArrayOutput struct{ *pulumi.OutputState }

func (H2qpadviceofchargeAocListPlanInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qpadviceofchargeAocListPlanInfo)(nil)).Elem()
}

func (o H2qpadviceofchargeAocListPlanInfoArrayOutput) ToH2qpadviceofchargeAocListPlanInfoArrayOutput() H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return o
}

func (o H2qpadviceofchargeAocListPlanInfoArrayOutput) ToH2qpadviceofchargeAocListPlanInfoArrayOutputWithContext(ctx context.Context) H2qpadviceofchargeAocListPlanInfoArrayOutput {
	return o
}

func (o H2qpadviceofchargeAocListPlanInfoArrayOutput) Index(i pulumi.IntInput) H2qpadviceofchargeAocListPlanInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) H2qpadviceofchargeAocListPlanInfo {
		return vs[0].([]H2qpadviceofchargeAocListPlanInfo)[vs[1].(int)]
	}).(H2qpadviceofchargeAocListPlanInfoOutput)
}

type H2qpoperatornameValueList struct {
	// Value index.
	Index *int `pulumi:"index"`
	// Language code.
	Lang *string `pulumi:"lang"`
	// Friendly name value.
	Value *string `pulumi:"value"`
}

// H2qpoperatornameValueListInput is an input type that accepts H2qpoperatornameValueListArgs and H2qpoperatornameValueListOutput values.
// You can construct a concrete instance of `H2qpoperatornameValueListInput` via:
//
//	H2qpoperatornameValueListArgs{...}
type H2qpoperatornameValueListInput interface {
	pulumi.Input

	ToH2qpoperatornameValueListOutput() H2qpoperatornameValueListOutput
	ToH2qpoperatornameValueListOutputWithContext(context.Context) H2qpoperatornameValueListOutput
}

type H2qpoperatornameValueListArgs struct {
	// Value index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Friendly name value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (H2qpoperatornameValueListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qpoperatornameValueList)(nil)).Elem()
}

func (i H2qpoperatornameValueListArgs) ToH2qpoperatornameValueListOutput() H2qpoperatornameValueListOutput {
	return i.ToH2qpoperatornameValueListOutputWithContext(context.Background())
}

func (i H2qpoperatornameValueListArgs) ToH2qpoperatornameValueListOutputWithContext(ctx context.Context) H2qpoperatornameValueListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpoperatornameValueListOutput)
}

// H2qpoperatornameValueListArrayInput is an input type that accepts H2qpoperatornameValueListArray and H2qpoperatornameValueListArrayOutput values.
// You can construct a concrete instance of `H2qpoperatornameValueListArrayInput` via:
//
//	H2qpoperatornameValueListArray{ H2qpoperatornameValueListArgs{...} }
type H2qpoperatornameValueListArrayInput interface {
	pulumi.Input

	ToH2qpoperatornameValueListArrayOutput() H2qpoperatornameValueListArrayOutput
	ToH2qpoperatornameValueListArrayOutputWithContext(context.Context) H2qpoperatornameValueListArrayOutput
}

type H2qpoperatornameValueListArray []H2qpoperatornameValueListInput

func (H2qpoperatornameValueListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qpoperatornameValueList)(nil)).Elem()
}

func (i H2qpoperatornameValueListArray) ToH2qpoperatornameValueListArrayOutput() H2qpoperatornameValueListArrayOutput {
	return i.ToH2qpoperatornameValueListArrayOutputWithContext(context.Background())
}

func (i H2qpoperatornameValueListArray) ToH2qpoperatornameValueListArrayOutputWithContext(ctx context.Context) H2qpoperatornameValueListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qpoperatornameValueListArrayOutput)
}

type H2qpoperatornameValueListOutput struct{ *pulumi.OutputState }

func (H2qpoperatornameValueListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qpoperatornameValueList)(nil)).Elem()
}

func (o H2qpoperatornameValueListOutput) ToH2qpoperatornameValueListOutput() H2qpoperatornameValueListOutput {
	return o
}

func (o H2qpoperatornameValueListOutput) ToH2qpoperatornameValueListOutputWithContext(ctx context.Context) H2qpoperatornameValueListOutput {
	return o
}

// Value index.
func (o H2qpoperatornameValueListOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v H2qpoperatornameValueList) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Language code.
func (o H2qpoperatornameValueListOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpoperatornameValueList) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Friendly name value.
func (o H2qpoperatornameValueListOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qpoperatornameValueList) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type H2qpoperatornameValueListArrayOutput struct{ *pulumi.OutputState }

func (H2qpoperatornameValueListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qpoperatornameValueList)(nil)).Elem()
}

func (o H2qpoperatornameValueListArrayOutput) ToH2qpoperatornameValueListArrayOutput() H2qpoperatornameValueListArrayOutput {
	return o
}

func (o H2qpoperatornameValueListArrayOutput) ToH2qpoperatornameValueListArrayOutputWithContext(ctx context.Context) H2qpoperatornameValueListArrayOutput {
	return o
}

func (o H2qpoperatornameValueListArrayOutput) Index(i pulumi.IntInput) H2qpoperatornameValueListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) H2qpoperatornameValueList {
		return vs[0].([]H2qpoperatornameValueList)[vs[1].(int)]
	}).(H2qpoperatornameValueListOutput)
}

type H2qposuproviderFriendlyName struct {
	// OSU provider friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// OSU provider friendly name index.
	Index *int `pulumi:"index"`
	// Language code.
	Lang *string `pulumi:"lang"`
}

// H2qposuproviderFriendlyNameInput is an input type that accepts H2qposuproviderFriendlyNameArgs and H2qposuproviderFriendlyNameOutput values.
// You can construct a concrete instance of `H2qposuproviderFriendlyNameInput` via:
//
//	H2qposuproviderFriendlyNameArgs{...}
type H2qposuproviderFriendlyNameInput interface {
	pulumi.Input

	ToH2qposuproviderFriendlyNameOutput() H2qposuproviderFriendlyNameOutput
	ToH2qposuproviderFriendlyNameOutputWithContext(context.Context) H2qposuproviderFriendlyNameOutput
}

type H2qposuproviderFriendlyNameArgs struct {
	// OSU provider friendly name.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// OSU provider friendly name index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
}

func (H2qposuproviderFriendlyNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qposuproviderFriendlyName)(nil)).Elem()
}

func (i H2qposuproviderFriendlyNameArgs) ToH2qposuproviderFriendlyNameOutput() H2qposuproviderFriendlyNameOutput {
	return i.ToH2qposuproviderFriendlyNameOutputWithContext(context.Background())
}

func (i H2qposuproviderFriendlyNameArgs) ToH2qposuproviderFriendlyNameOutputWithContext(ctx context.Context) H2qposuproviderFriendlyNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qposuproviderFriendlyNameOutput)
}

// H2qposuproviderFriendlyNameArrayInput is an input type that accepts H2qposuproviderFriendlyNameArray and H2qposuproviderFriendlyNameArrayOutput values.
// You can construct a concrete instance of `H2qposuproviderFriendlyNameArrayInput` via:
//
//	H2qposuproviderFriendlyNameArray{ H2qposuproviderFriendlyNameArgs{...} }
type H2qposuproviderFriendlyNameArrayInput interface {
	pulumi.Input

	ToH2qposuproviderFriendlyNameArrayOutput() H2qposuproviderFriendlyNameArrayOutput
	ToH2qposuproviderFriendlyNameArrayOutputWithContext(context.Context) H2qposuproviderFriendlyNameArrayOutput
}

type H2qposuproviderFriendlyNameArray []H2qposuproviderFriendlyNameInput

func (H2qposuproviderFriendlyNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qposuproviderFriendlyName)(nil)).Elem()
}

func (i H2qposuproviderFriendlyNameArray) ToH2qposuproviderFriendlyNameArrayOutput() H2qposuproviderFriendlyNameArrayOutput {
	return i.ToH2qposuproviderFriendlyNameArrayOutputWithContext(context.Background())
}

func (i H2qposuproviderFriendlyNameArray) ToH2qposuproviderFriendlyNameArrayOutputWithContext(ctx context.Context) H2qposuproviderFriendlyNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qposuproviderFriendlyNameArrayOutput)
}

type H2qposuproviderFriendlyNameOutput struct{ *pulumi.OutputState }

func (H2qposuproviderFriendlyNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qposuproviderFriendlyName)(nil)).Elem()
}

func (o H2qposuproviderFriendlyNameOutput) ToH2qposuproviderFriendlyNameOutput() H2qposuproviderFriendlyNameOutput {
	return o
}

func (o H2qposuproviderFriendlyNameOutput) ToH2qposuproviderFriendlyNameOutputWithContext(ctx context.Context) H2qposuproviderFriendlyNameOutput {
	return o
}

// OSU provider friendly name.
func (o H2qposuproviderFriendlyNameOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qposuproviderFriendlyName) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// OSU provider friendly name index.
func (o H2qposuproviderFriendlyNameOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v H2qposuproviderFriendlyName) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// Language code.
func (o H2qposuproviderFriendlyNameOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qposuproviderFriendlyName) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

type H2qposuproviderFriendlyNameArrayOutput struct{ *pulumi.OutputState }

func (H2qposuproviderFriendlyNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qposuproviderFriendlyName)(nil)).Elem()
}

func (o H2qposuproviderFriendlyNameArrayOutput) ToH2qposuproviderFriendlyNameArrayOutput() H2qposuproviderFriendlyNameArrayOutput {
	return o
}

func (o H2qposuproviderFriendlyNameArrayOutput) ToH2qposuproviderFriendlyNameArrayOutputWithContext(ctx context.Context) H2qposuproviderFriendlyNameArrayOutput {
	return o
}

func (o H2qposuproviderFriendlyNameArrayOutput) Index(i pulumi.IntInput) H2qposuproviderFriendlyNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) H2qposuproviderFriendlyName {
		return vs[0].([]H2qposuproviderFriendlyName)[vs[1].(int)]
	}).(H2qposuproviderFriendlyNameOutput)
}

type H2qposuproviderServiceDescription struct {
	// Language code.
	Lang *string `pulumi:"lang"`
	// Service description.
	ServiceDescription *string `pulumi:"serviceDescription"`
	// OSU service ID.
	ServiceId *int `pulumi:"serviceId"`
}

// H2qposuproviderServiceDescriptionInput is an input type that accepts H2qposuproviderServiceDescriptionArgs and H2qposuproviderServiceDescriptionOutput values.
// You can construct a concrete instance of `H2qposuproviderServiceDescriptionInput` via:
//
//	H2qposuproviderServiceDescriptionArgs{...}
type H2qposuproviderServiceDescriptionInput interface {
	pulumi.Input

	ToH2qposuproviderServiceDescriptionOutput() H2qposuproviderServiceDescriptionOutput
	ToH2qposuproviderServiceDescriptionOutputWithContext(context.Context) H2qposuproviderServiceDescriptionOutput
}

type H2qposuproviderServiceDescriptionArgs struct {
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Service description.
	ServiceDescription pulumi.StringPtrInput `pulumi:"serviceDescription"`
	// OSU service ID.
	ServiceId pulumi.IntPtrInput `pulumi:"serviceId"`
}

func (H2qposuproviderServiceDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qposuproviderServiceDescription)(nil)).Elem()
}

func (i H2qposuproviderServiceDescriptionArgs) ToH2qposuproviderServiceDescriptionOutput() H2qposuproviderServiceDescriptionOutput {
	return i.ToH2qposuproviderServiceDescriptionOutputWithContext(context.Background())
}

func (i H2qposuproviderServiceDescriptionArgs) ToH2qposuproviderServiceDescriptionOutputWithContext(ctx context.Context) H2qposuproviderServiceDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qposuproviderServiceDescriptionOutput)
}

// H2qposuproviderServiceDescriptionArrayInput is an input type that accepts H2qposuproviderServiceDescriptionArray and H2qposuproviderServiceDescriptionArrayOutput values.
// You can construct a concrete instance of `H2qposuproviderServiceDescriptionArrayInput` via:
//
//	H2qposuproviderServiceDescriptionArray{ H2qposuproviderServiceDescriptionArgs{...} }
type H2qposuproviderServiceDescriptionArrayInput interface {
	pulumi.Input

	ToH2qposuproviderServiceDescriptionArrayOutput() H2qposuproviderServiceDescriptionArrayOutput
	ToH2qposuproviderServiceDescriptionArrayOutputWithContext(context.Context) H2qposuproviderServiceDescriptionArrayOutput
}

type H2qposuproviderServiceDescriptionArray []H2qposuproviderServiceDescriptionInput

func (H2qposuproviderServiceDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qposuproviderServiceDescription)(nil)).Elem()
}

func (i H2qposuproviderServiceDescriptionArray) ToH2qposuproviderServiceDescriptionArrayOutput() H2qposuproviderServiceDescriptionArrayOutput {
	return i.ToH2qposuproviderServiceDescriptionArrayOutputWithContext(context.Background())
}

func (i H2qposuproviderServiceDescriptionArray) ToH2qposuproviderServiceDescriptionArrayOutputWithContext(ctx context.Context) H2qposuproviderServiceDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qposuproviderServiceDescriptionArrayOutput)
}

type H2qposuproviderServiceDescriptionOutput struct{ *pulumi.OutputState }

func (H2qposuproviderServiceDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qposuproviderServiceDescription)(nil)).Elem()
}

func (o H2qposuproviderServiceDescriptionOutput) ToH2qposuproviderServiceDescriptionOutput() H2qposuproviderServiceDescriptionOutput {
	return o
}

func (o H2qposuproviderServiceDescriptionOutput) ToH2qposuproviderServiceDescriptionOutputWithContext(ctx context.Context) H2qposuproviderServiceDescriptionOutput {
	return o
}

// Language code.
func (o H2qposuproviderServiceDescriptionOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qposuproviderServiceDescription) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Service description.
func (o H2qposuproviderServiceDescriptionOutput) ServiceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qposuproviderServiceDescription) *string { return v.ServiceDescription }).(pulumi.StringPtrOutput)
}

// OSU service ID.
func (o H2qposuproviderServiceDescriptionOutput) ServiceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v H2qposuproviderServiceDescription) *int { return v.ServiceId }).(pulumi.IntPtrOutput)
}

type H2qposuproviderServiceDescriptionArrayOutput struct{ *pulumi.OutputState }

func (H2qposuproviderServiceDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qposuproviderServiceDescription)(nil)).Elem()
}

func (o H2qposuproviderServiceDescriptionArrayOutput) ToH2qposuproviderServiceDescriptionArrayOutput() H2qposuproviderServiceDescriptionArrayOutput {
	return o
}

func (o H2qposuproviderServiceDescriptionArrayOutput) ToH2qposuproviderServiceDescriptionArrayOutputWithContext(ctx context.Context) H2qposuproviderServiceDescriptionArrayOutput {
	return o
}

func (o H2qposuproviderServiceDescriptionArrayOutput) Index(i pulumi.IntInput) H2qposuproviderServiceDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) H2qposuproviderServiceDescription {
		return vs[0].([]H2qposuproviderServiceDescription)[vs[1].(int)]
	}).(H2qposuproviderServiceDescriptionOutput)
}

type H2qposuprovidernaiNaiList struct {
	// OSU NAI ID.
	Name *string `pulumi:"name"`
	// OSU NAI.
	OsuNai *string `pulumi:"osuNai"`
}

// H2qposuprovidernaiNaiListInput is an input type that accepts H2qposuprovidernaiNaiListArgs and H2qposuprovidernaiNaiListOutput values.
// You can construct a concrete instance of `H2qposuprovidernaiNaiListInput` via:
//
//	H2qposuprovidernaiNaiListArgs{...}
type H2qposuprovidernaiNaiListInput interface {
	pulumi.Input

	ToH2qposuprovidernaiNaiListOutput() H2qposuprovidernaiNaiListOutput
	ToH2qposuprovidernaiNaiListOutputWithContext(context.Context) H2qposuprovidernaiNaiListOutput
}

type H2qposuprovidernaiNaiListArgs struct {
	// OSU NAI ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// OSU NAI.
	OsuNai pulumi.StringPtrInput `pulumi:"osuNai"`
}

func (H2qposuprovidernaiNaiListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qposuprovidernaiNaiList)(nil)).Elem()
}

func (i H2qposuprovidernaiNaiListArgs) ToH2qposuprovidernaiNaiListOutput() H2qposuprovidernaiNaiListOutput {
	return i.ToH2qposuprovidernaiNaiListOutputWithContext(context.Background())
}

func (i H2qposuprovidernaiNaiListArgs) ToH2qposuprovidernaiNaiListOutputWithContext(ctx context.Context) H2qposuprovidernaiNaiListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qposuprovidernaiNaiListOutput)
}

// H2qposuprovidernaiNaiListArrayInput is an input type that accepts H2qposuprovidernaiNaiListArray and H2qposuprovidernaiNaiListArrayOutput values.
// You can construct a concrete instance of `H2qposuprovidernaiNaiListArrayInput` via:
//
//	H2qposuprovidernaiNaiListArray{ H2qposuprovidernaiNaiListArgs{...} }
type H2qposuprovidernaiNaiListArrayInput interface {
	pulumi.Input

	ToH2qposuprovidernaiNaiListArrayOutput() H2qposuprovidernaiNaiListArrayOutput
	ToH2qposuprovidernaiNaiListArrayOutputWithContext(context.Context) H2qposuprovidernaiNaiListArrayOutput
}

type H2qposuprovidernaiNaiListArray []H2qposuprovidernaiNaiListInput

func (H2qposuprovidernaiNaiListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qposuprovidernaiNaiList)(nil)).Elem()
}

func (i H2qposuprovidernaiNaiListArray) ToH2qposuprovidernaiNaiListArrayOutput() H2qposuprovidernaiNaiListArrayOutput {
	return i.ToH2qposuprovidernaiNaiListArrayOutputWithContext(context.Background())
}

func (i H2qposuprovidernaiNaiListArray) ToH2qposuprovidernaiNaiListArrayOutputWithContext(ctx context.Context) H2qposuprovidernaiNaiListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(H2qposuprovidernaiNaiListArrayOutput)
}

type H2qposuprovidernaiNaiListOutput struct{ *pulumi.OutputState }

func (H2qposuprovidernaiNaiListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*H2qposuprovidernaiNaiList)(nil)).Elem()
}

func (o H2qposuprovidernaiNaiListOutput) ToH2qposuprovidernaiNaiListOutput() H2qposuprovidernaiNaiListOutput {
	return o
}

func (o H2qposuprovidernaiNaiListOutput) ToH2qposuprovidernaiNaiListOutputWithContext(ctx context.Context) H2qposuprovidernaiNaiListOutput {
	return o
}

// OSU NAI ID.
func (o H2qposuprovidernaiNaiListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qposuprovidernaiNaiList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OSU NAI.
func (o H2qposuprovidernaiNaiListOutput) OsuNai() pulumi.StringPtrOutput {
	return o.ApplyT(func(v H2qposuprovidernaiNaiList) *string { return v.OsuNai }).(pulumi.StringPtrOutput)
}

type H2qposuprovidernaiNaiListArrayOutput struct{ *pulumi.OutputState }

func (H2qposuprovidernaiNaiListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]H2qposuprovidernaiNaiList)(nil)).Elem()
}

func (o H2qposuprovidernaiNaiListArrayOutput) ToH2qposuprovidernaiNaiListArrayOutput() H2qposuprovidernaiNaiListArrayOutput {
	return o
}

func (o H2qposuprovidernaiNaiListArrayOutput) ToH2qposuprovidernaiNaiListArrayOutputWithContext(ctx context.Context) H2qposuprovidernaiNaiListArrayOutput {
	return o
}

func (o H2qposuprovidernaiNaiListArrayOutput) Index(i pulumi.IntInput) H2qposuprovidernaiNaiListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) H2qposuprovidernaiNaiList {
		return vs[0].([]H2qposuprovidernaiNaiList)[vs[1].(int)]
	}).(H2qposuprovidernaiNaiListOutput)
}

type HsprofileOsuProvider struct {
	// OSU provider name.
	Name *string `pulumi:"name"`
}

// HsprofileOsuProviderInput is an input type that accepts HsprofileOsuProviderArgs and HsprofileOsuProviderOutput values.
// You can construct a concrete instance of `HsprofileOsuProviderInput` via:
//
//	HsprofileOsuProviderArgs{...}
type HsprofileOsuProviderInput interface {
	pulumi.Input

	ToHsprofileOsuProviderOutput() HsprofileOsuProviderOutput
	ToHsprofileOsuProviderOutputWithContext(context.Context) HsprofileOsuProviderOutput
}

type HsprofileOsuProviderArgs struct {
	// OSU provider name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (HsprofileOsuProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HsprofileOsuProvider)(nil)).Elem()
}

func (i HsprofileOsuProviderArgs) ToHsprofileOsuProviderOutput() HsprofileOsuProviderOutput {
	return i.ToHsprofileOsuProviderOutputWithContext(context.Background())
}

func (i HsprofileOsuProviderArgs) ToHsprofileOsuProviderOutputWithContext(ctx context.Context) HsprofileOsuProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HsprofileOsuProviderOutput)
}

// HsprofileOsuProviderArrayInput is an input type that accepts HsprofileOsuProviderArray and HsprofileOsuProviderArrayOutput values.
// You can construct a concrete instance of `HsprofileOsuProviderArrayInput` via:
//
//	HsprofileOsuProviderArray{ HsprofileOsuProviderArgs{...} }
type HsprofileOsuProviderArrayInput interface {
	pulumi.Input

	ToHsprofileOsuProviderArrayOutput() HsprofileOsuProviderArrayOutput
	ToHsprofileOsuProviderArrayOutputWithContext(context.Context) HsprofileOsuProviderArrayOutput
}

type HsprofileOsuProviderArray []HsprofileOsuProviderInput

func (HsprofileOsuProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HsprofileOsuProvider)(nil)).Elem()
}

func (i HsprofileOsuProviderArray) ToHsprofileOsuProviderArrayOutput() HsprofileOsuProviderArrayOutput {
	return i.ToHsprofileOsuProviderArrayOutputWithContext(context.Background())
}

func (i HsprofileOsuProviderArray) ToHsprofileOsuProviderArrayOutputWithContext(ctx context.Context) HsprofileOsuProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HsprofileOsuProviderArrayOutput)
}

type HsprofileOsuProviderOutput struct{ *pulumi.OutputState }

func (HsprofileOsuProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HsprofileOsuProvider)(nil)).Elem()
}

func (o HsprofileOsuProviderOutput) ToHsprofileOsuProviderOutput() HsprofileOsuProviderOutput {
	return o
}

func (o HsprofileOsuProviderOutput) ToHsprofileOsuProviderOutputWithContext(ctx context.Context) HsprofileOsuProviderOutput {
	return o
}

// OSU provider name.
func (o HsprofileOsuProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HsprofileOsuProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type HsprofileOsuProviderArrayOutput struct{ *pulumi.OutputState }

func (HsprofileOsuProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HsprofileOsuProvider)(nil)).Elem()
}

func (o HsprofileOsuProviderArrayOutput) ToHsprofileOsuProviderArrayOutput() HsprofileOsuProviderArrayOutput {
	return o
}

func (o HsprofileOsuProviderArrayOutput) ToHsprofileOsuProviderArrayOutputWithContext(ctx context.Context) HsprofileOsuProviderArrayOutput {
	return o
}

func (o HsprofileOsuProviderArrayOutput) Index(i pulumi.IntInput) HsprofileOsuProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HsprofileOsuProvider {
		return vs[0].([]HsprofileOsuProvider)[vs[1].(int)]
	}).(HsprofileOsuProviderOutput)
}

type IconIconList struct {
	// Icon file.
	File *string `pulumi:"file"`
	// Icon height.
	Height *int `pulumi:"height"`
	// Language code.
	Lang *string `pulumi:"lang"`
	// Icon name.
	Name *string `pulumi:"name"`
	// Icon type. Valid values: `bmp`, `gif`, `jpeg`, `png`, `tiff`.
	Type *string `pulumi:"type"`
	// Icon width.
	Width *int `pulumi:"width"`
}

// IconIconListInput is an input type that accepts IconIconListArgs and IconIconListOutput values.
// You can construct a concrete instance of `IconIconListInput` via:
//
//	IconIconListArgs{...}
type IconIconListInput interface {
	pulumi.Input

	ToIconIconListOutput() IconIconListOutput
	ToIconIconListOutputWithContext(context.Context) IconIconListOutput
}

type IconIconListArgs struct {
	// Icon file.
	File pulumi.StringPtrInput `pulumi:"file"`
	// Icon height.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Language code.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Icon name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Icon type. Valid values: `bmp`, `gif`, `jpeg`, `png`, `tiff`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Icon width.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (IconIconListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IconIconList)(nil)).Elem()
}

func (i IconIconListArgs) ToIconIconListOutput() IconIconListOutput {
	return i.ToIconIconListOutputWithContext(context.Background())
}

func (i IconIconListArgs) ToIconIconListOutputWithContext(ctx context.Context) IconIconListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconIconListOutput)
}

// IconIconListArrayInput is an input type that accepts IconIconListArray and IconIconListArrayOutput values.
// You can construct a concrete instance of `IconIconListArrayInput` via:
//
//	IconIconListArray{ IconIconListArgs{...} }
type IconIconListArrayInput interface {
	pulumi.Input

	ToIconIconListArrayOutput() IconIconListArrayOutput
	ToIconIconListArrayOutputWithContext(context.Context) IconIconListArrayOutput
}

type IconIconListArray []IconIconListInput

func (IconIconListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IconIconList)(nil)).Elem()
}

func (i IconIconListArray) ToIconIconListArrayOutput() IconIconListArrayOutput {
	return i.ToIconIconListArrayOutputWithContext(context.Background())
}

func (i IconIconListArray) ToIconIconListArrayOutputWithContext(ctx context.Context) IconIconListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IconIconListArrayOutput)
}

type IconIconListOutput struct{ *pulumi.OutputState }

func (IconIconListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IconIconList)(nil)).Elem()
}

func (o IconIconListOutput) ToIconIconListOutput() IconIconListOutput {
	return o
}

func (o IconIconListOutput) ToIconIconListOutputWithContext(ctx context.Context) IconIconListOutput {
	return o
}

// Icon file.
func (o IconIconListOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconIconList) *string { return v.File }).(pulumi.StringPtrOutput)
}

// Icon height.
func (o IconIconListOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IconIconList) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Language code.
func (o IconIconListOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconIconList) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Icon name.
func (o IconIconListOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconIconList) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Icon type. Valid values: `bmp`, `gif`, `jpeg`, `png`, `tiff`.
func (o IconIconListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IconIconList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Icon width.
func (o IconIconListOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IconIconList) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type IconIconListArrayOutput struct{ *pulumi.OutputState }

func (IconIconListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IconIconList)(nil)).Elem()
}

func (o IconIconListArrayOutput) ToIconIconListArrayOutput() IconIconListArrayOutput {
	return o
}

func (o IconIconListArrayOutput) ToIconIconListArrayOutputWithContext(ctx context.Context) IconIconListArrayOutput {
	return o
}

func (o IconIconListArrayOutput) Index(i pulumi.IntInput) IconIconListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IconIconList {
		return vs[0].([]IconIconList)[vs[1].(int)]
	}).(IconIconListOutput)
}

type QosmapDscpExcept struct {
	// DSCP value.
	Dscp *int `pulumi:"dscp"`
	// DSCP exception index.
	Index *int `pulumi:"index"`
	// User priority.
	Up *int `pulumi:"up"`
}

// QosmapDscpExceptInput is an input type that accepts QosmapDscpExceptArgs and QosmapDscpExceptOutput values.
// You can construct a concrete instance of `QosmapDscpExceptInput` via:
//
//	QosmapDscpExceptArgs{...}
type QosmapDscpExceptInput interface {
	pulumi.Input

	ToQosmapDscpExceptOutput() QosmapDscpExceptOutput
	ToQosmapDscpExceptOutputWithContext(context.Context) QosmapDscpExceptOutput
}

type QosmapDscpExceptArgs struct {
	// DSCP value.
	Dscp pulumi.IntPtrInput `pulumi:"dscp"`
	// DSCP exception index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// User priority.
	Up pulumi.IntPtrInput `pulumi:"up"`
}

func (QosmapDscpExceptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosmapDscpExcept)(nil)).Elem()
}

func (i QosmapDscpExceptArgs) ToQosmapDscpExceptOutput() QosmapDscpExceptOutput {
	return i.ToQosmapDscpExceptOutputWithContext(context.Background())
}

func (i QosmapDscpExceptArgs) ToQosmapDscpExceptOutputWithContext(ctx context.Context) QosmapDscpExceptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosmapDscpExceptOutput)
}

// QosmapDscpExceptArrayInput is an input type that accepts QosmapDscpExceptArray and QosmapDscpExceptArrayOutput values.
// You can construct a concrete instance of `QosmapDscpExceptArrayInput` via:
//
//	QosmapDscpExceptArray{ QosmapDscpExceptArgs{...} }
type QosmapDscpExceptArrayInput interface {
	pulumi.Input

	ToQosmapDscpExceptArrayOutput() QosmapDscpExceptArrayOutput
	ToQosmapDscpExceptArrayOutputWithContext(context.Context) QosmapDscpExceptArrayOutput
}

type QosmapDscpExceptArray []QosmapDscpExceptInput

func (QosmapDscpExceptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosmapDscpExcept)(nil)).Elem()
}

func (i QosmapDscpExceptArray) ToQosmapDscpExceptArrayOutput() QosmapDscpExceptArrayOutput {
	return i.ToQosmapDscpExceptArrayOutputWithContext(context.Background())
}

func (i QosmapDscpExceptArray) ToQosmapDscpExceptArrayOutputWithContext(ctx context.Context) QosmapDscpExceptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosmapDscpExceptArrayOutput)
}

type QosmapDscpExceptOutput struct{ *pulumi.OutputState }

func (QosmapDscpExceptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosmapDscpExcept)(nil)).Elem()
}

func (o QosmapDscpExceptOutput) ToQosmapDscpExceptOutput() QosmapDscpExceptOutput {
	return o
}

func (o QosmapDscpExceptOutput) ToQosmapDscpExceptOutputWithContext(ctx context.Context) QosmapDscpExceptOutput {
	return o
}

// DSCP value.
func (o QosmapDscpExceptOutput) Dscp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosmapDscpExcept) *int { return v.Dscp }).(pulumi.IntPtrOutput)
}

// DSCP exception index.
func (o QosmapDscpExceptOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosmapDscpExcept) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// User priority.
func (o QosmapDscpExceptOutput) Up() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosmapDscpExcept) *int { return v.Up }).(pulumi.IntPtrOutput)
}

type QosmapDscpExceptArrayOutput struct{ *pulumi.OutputState }

func (QosmapDscpExceptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosmapDscpExcept)(nil)).Elem()
}

func (o QosmapDscpExceptArrayOutput) ToQosmapDscpExceptArrayOutput() QosmapDscpExceptArrayOutput {
	return o
}

func (o QosmapDscpExceptArrayOutput) ToQosmapDscpExceptArrayOutputWithContext(ctx context.Context) QosmapDscpExceptArrayOutput {
	return o
}

func (o QosmapDscpExceptArrayOutput) Index(i pulumi.IntInput) QosmapDscpExceptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosmapDscpExcept {
		return vs[0].([]QosmapDscpExcept)[vs[1].(int)]
	}).(QosmapDscpExceptOutput)
}

type QosmapDscpRange struct {
	// DSCP high value.
	High *int `pulumi:"high"`
	// DSCP range index.
	Index *int `pulumi:"index"`
	// DSCP low value.
	Low *int `pulumi:"low"`
	// User priority.
	Up *int `pulumi:"up"`
}

// QosmapDscpRangeInput is an input type that accepts QosmapDscpRangeArgs and QosmapDscpRangeOutput values.
// You can construct a concrete instance of `QosmapDscpRangeInput` via:
//
//	QosmapDscpRangeArgs{...}
type QosmapDscpRangeInput interface {
	pulumi.Input

	ToQosmapDscpRangeOutput() QosmapDscpRangeOutput
	ToQosmapDscpRangeOutputWithContext(context.Context) QosmapDscpRangeOutput
}

type QosmapDscpRangeArgs struct {
	// DSCP high value.
	High pulumi.IntPtrInput `pulumi:"high"`
	// DSCP range index.
	Index pulumi.IntPtrInput `pulumi:"index"`
	// DSCP low value.
	Low pulumi.IntPtrInput `pulumi:"low"`
	// User priority.
	Up pulumi.IntPtrInput `pulumi:"up"`
}

func (QosmapDscpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosmapDscpRange)(nil)).Elem()
}

func (i QosmapDscpRangeArgs) ToQosmapDscpRangeOutput() QosmapDscpRangeOutput {
	return i.ToQosmapDscpRangeOutputWithContext(context.Background())
}

func (i QosmapDscpRangeArgs) ToQosmapDscpRangeOutputWithContext(ctx context.Context) QosmapDscpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosmapDscpRangeOutput)
}

// QosmapDscpRangeArrayInput is an input type that accepts QosmapDscpRangeArray and QosmapDscpRangeArrayOutput values.
// You can construct a concrete instance of `QosmapDscpRangeArrayInput` via:
//
//	QosmapDscpRangeArray{ QosmapDscpRangeArgs{...} }
type QosmapDscpRangeArrayInput interface {
	pulumi.Input

	ToQosmapDscpRangeArrayOutput() QosmapDscpRangeArrayOutput
	ToQosmapDscpRangeArrayOutputWithContext(context.Context) QosmapDscpRangeArrayOutput
}

type QosmapDscpRangeArray []QosmapDscpRangeInput

func (QosmapDscpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosmapDscpRange)(nil)).Elem()
}

func (i QosmapDscpRangeArray) ToQosmapDscpRangeArrayOutput() QosmapDscpRangeArrayOutput {
	return i.ToQosmapDscpRangeArrayOutputWithContext(context.Background())
}

func (i QosmapDscpRangeArray) ToQosmapDscpRangeArrayOutputWithContext(ctx context.Context) QosmapDscpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosmapDscpRangeArrayOutput)
}

type QosmapDscpRangeOutput struct{ *pulumi.OutputState }

func (QosmapDscpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosmapDscpRange)(nil)).Elem()
}

func (o QosmapDscpRangeOutput) ToQosmapDscpRangeOutput() QosmapDscpRangeOutput {
	return o
}

func (o QosmapDscpRangeOutput) ToQosmapDscpRangeOutputWithContext(ctx context.Context) QosmapDscpRangeOutput {
	return o
}

// DSCP high value.
func (o QosmapDscpRangeOutput) High() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosmapDscpRange) *int { return v.High }).(pulumi.IntPtrOutput)
}

// DSCP range index.
func (o QosmapDscpRangeOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosmapDscpRange) *int { return v.Index }).(pulumi.IntPtrOutput)
}

// DSCP low value.
func (o QosmapDscpRangeOutput) Low() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosmapDscpRange) *int { return v.Low }).(pulumi.IntPtrOutput)
}

// User priority.
func (o QosmapDscpRangeOutput) Up() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosmapDscpRange) *int { return v.Up }).(pulumi.IntPtrOutput)
}

type QosmapDscpRangeArrayOutput struct{ *pulumi.OutputState }

func (QosmapDscpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosmapDscpRange)(nil)).Elem()
}

func (o QosmapDscpRangeArrayOutput) ToQosmapDscpRangeArrayOutput() QosmapDscpRangeArrayOutput {
	return o
}

func (o QosmapDscpRangeArrayOutput) ToQosmapDscpRangeArrayOutputWithContext(ctx context.Context) QosmapDscpRangeArrayOutput {
	return o
}

func (o QosmapDscpRangeArrayOutput) Index(i pulumi.IntInput) QosmapDscpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosmapDscpRange {
		return vs[0].([]QosmapDscpRange)[vs[1].(int)]
	}).(QosmapDscpRangeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Anqp3gppcellularMccMncListInput)(nil)).Elem(), Anqp3gppcellularMccMncListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Anqp3gppcellularMccMncListArrayInput)(nil)).Elem(), Anqp3gppcellularMccMncListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmNaiListInput)(nil)).Elem(), AnqpnairealmNaiListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmNaiListArrayInput)(nil)).Elem(), AnqpnairealmNaiListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmNaiListEapMethodInput)(nil)).Elem(), AnqpnairealmNaiListEapMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmNaiListEapMethodArrayInput)(nil)).Elem(), AnqpnairealmNaiListEapMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmNaiListEapMethodAuthParamInput)(nil)).Elem(), AnqpnairealmNaiListEapMethodAuthParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpnairealmNaiListEapMethodAuthParamArrayInput)(nil)).Elem(), AnqpnairealmNaiListEapMethodAuthParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqproamingconsortiumOiListInput)(nil)).Elem(), AnqproamingconsortiumOiListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqproamingconsortiumOiListArrayInput)(nil)).Elem(), AnqproamingconsortiumOiListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpvenuenameValueListInput)(nil)).Elem(), AnqpvenuenameValueListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpvenuenameValueListArrayInput)(nil)).Elem(), AnqpvenuenameValueListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpvenueurlValueListInput)(nil)).Elem(), AnqpvenueurlValueListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnqpvenueurlValueListArrayInput)(nil)).Elem(), AnqpvenueurlValueListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpadviceofchargeAocListInput)(nil)).Elem(), H2qpadviceofchargeAocListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpadviceofchargeAocListArrayInput)(nil)).Elem(), H2qpadviceofchargeAocListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpadviceofchargeAocListPlanInfoInput)(nil)).Elem(), H2qpadviceofchargeAocListPlanInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpadviceofchargeAocListPlanInfoArrayInput)(nil)).Elem(), H2qpadviceofchargeAocListPlanInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpoperatornameValueListInput)(nil)).Elem(), H2qpoperatornameValueListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qpoperatornameValueListArrayInput)(nil)).Elem(), H2qpoperatornameValueListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qposuproviderFriendlyNameInput)(nil)).Elem(), H2qposuproviderFriendlyNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qposuproviderFriendlyNameArrayInput)(nil)).Elem(), H2qposuproviderFriendlyNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qposuproviderServiceDescriptionInput)(nil)).Elem(), H2qposuproviderServiceDescriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qposuproviderServiceDescriptionArrayInput)(nil)).Elem(), H2qposuproviderServiceDescriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qposuprovidernaiNaiListInput)(nil)).Elem(), H2qposuprovidernaiNaiListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*H2qposuprovidernaiNaiListArrayInput)(nil)).Elem(), H2qposuprovidernaiNaiListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HsprofileOsuProviderInput)(nil)).Elem(), HsprofileOsuProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HsprofileOsuProviderArrayInput)(nil)).Elem(), HsprofileOsuProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IconIconListInput)(nil)).Elem(), IconIconListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IconIconListArrayInput)(nil)).Elem(), IconIconListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QosmapDscpExceptInput)(nil)).Elem(), QosmapDscpExceptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QosmapDscpExceptArrayInput)(nil)).Elem(), QosmapDscpExceptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QosmapDscpRangeInput)(nil)).Elem(), QosmapDscpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QosmapDscpRangeArrayInput)(nil)).Elem(), QosmapDscpRangeArray{})
	pulumi.RegisterOutputType(Anqp3gppcellularMccMncListOutput{})
	pulumi.RegisterOutputType(Anqp3gppcellularMccMncListArrayOutput{})
	pulumi.RegisterOutputType(AnqpnairealmNaiListOutput{})
	pulumi.RegisterOutputType(AnqpnairealmNaiListArrayOutput{})
	pulumi.RegisterOutputType(AnqpnairealmNaiListEapMethodOutput{})
	pulumi.RegisterOutputType(AnqpnairealmNaiListEapMethodArrayOutput{})
	pulumi.RegisterOutputType(AnqpnairealmNaiListEapMethodAuthParamOutput{})
	pulumi.RegisterOutputType(AnqpnairealmNaiListEapMethodAuthParamArrayOutput{})
	pulumi.RegisterOutputType(AnqproamingconsortiumOiListOutput{})
	pulumi.RegisterOutputType(AnqproamingconsortiumOiListArrayOutput{})
	pulumi.RegisterOutputType(AnqpvenuenameValueListOutput{})
	pulumi.RegisterOutputType(AnqpvenuenameValueListArrayOutput{})
	pulumi.RegisterOutputType(AnqpvenueurlValueListOutput{})
	pulumi.RegisterOutputType(AnqpvenueurlValueListArrayOutput{})
	pulumi.RegisterOutputType(H2qpadviceofchargeAocListOutput{})
	pulumi.RegisterOutputType(H2qpadviceofchargeAocListArrayOutput{})
	pulumi.RegisterOutputType(H2qpadviceofchargeAocListPlanInfoOutput{})
	pulumi.RegisterOutputType(H2qpadviceofchargeAocListPlanInfoArrayOutput{})
	pulumi.RegisterOutputType(H2qpoperatornameValueListOutput{})
	pulumi.RegisterOutputType(H2qpoperatornameValueListArrayOutput{})
	pulumi.RegisterOutputType(H2qposuproviderFriendlyNameOutput{})
	pulumi.RegisterOutputType(H2qposuproviderFriendlyNameArrayOutput{})
	pulumi.RegisterOutputType(H2qposuproviderServiceDescriptionOutput{})
	pulumi.RegisterOutputType(H2qposuproviderServiceDescriptionArrayOutput{})
	pulumi.RegisterOutputType(H2qposuprovidernaiNaiListOutput{})
	pulumi.RegisterOutputType(H2qposuprovidernaiNaiListArrayOutput{})
	pulumi.RegisterOutputType(HsprofileOsuProviderOutput{})
	pulumi.RegisterOutputType(HsprofileOsuProviderArrayOutput{})
	pulumi.RegisterOutputType(IconIconListOutput{})
	pulumi.RegisterOutputType(IconIconListArrayOutput{})
	pulumi.RegisterOutputType(QosmapDscpExceptOutput{})
	pulumi.RegisterOutputType(QosmapDscpExceptArrayOutput{})
	pulumi.RegisterOutputType(QosmapDscpRangeOutput{})
	pulumi.RegisterOutputType(QosmapDscpRangeArrayOutput{})
}
