// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sctpfilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProfilePpidFilter struct {
	// Action taken when PPID is matched. Valid values: `pass`, `reset`, `replace`.
	Action *string `pulumi:"action"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// ID.
	Id *int `pulumi:"id"`
	// Payload protocol identifier.
	Ppid *int `pulumi:"ppid"`
}

// ProfilePpidFilterInput is an input type that accepts ProfilePpidFilterArgs and ProfilePpidFilterOutput values.
// You can construct a concrete instance of `ProfilePpidFilterInput` via:
//
//	ProfilePpidFilterArgs{...}
type ProfilePpidFilterInput interface {
	pulumi.Input

	ToProfilePpidFilterOutput() ProfilePpidFilterOutput
	ToProfilePpidFilterOutputWithContext(context.Context) ProfilePpidFilterOutput
}

type ProfilePpidFilterArgs struct {
	// Action taken when PPID is matched. Valid values: `pass`, `reset`, `replace`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Payload protocol identifier.
	Ppid pulumi.IntPtrInput `pulumi:"ppid"`
}

func (ProfilePpidFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfilePpidFilter)(nil)).Elem()
}

func (i ProfilePpidFilterArgs) ToProfilePpidFilterOutput() ProfilePpidFilterOutput {
	return i.ToProfilePpidFilterOutputWithContext(context.Background())
}

func (i ProfilePpidFilterArgs) ToProfilePpidFilterOutputWithContext(ctx context.Context) ProfilePpidFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePpidFilterOutput)
}

// ProfilePpidFilterArrayInput is an input type that accepts ProfilePpidFilterArray and ProfilePpidFilterArrayOutput values.
// You can construct a concrete instance of `ProfilePpidFilterArrayInput` via:
//
//	ProfilePpidFilterArray{ ProfilePpidFilterArgs{...} }
type ProfilePpidFilterArrayInput interface {
	pulumi.Input

	ToProfilePpidFilterArrayOutput() ProfilePpidFilterArrayOutput
	ToProfilePpidFilterArrayOutputWithContext(context.Context) ProfilePpidFilterArrayOutput
}

type ProfilePpidFilterArray []ProfilePpidFilterInput

func (ProfilePpidFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfilePpidFilter)(nil)).Elem()
}

func (i ProfilePpidFilterArray) ToProfilePpidFilterArrayOutput() ProfilePpidFilterArrayOutput {
	return i.ToProfilePpidFilterArrayOutputWithContext(context.Background())
}

func (i ProfilePpidFilterArray) ToProfilePpidFilterArrayOutputWithContext(ctx context.Context) ProfilePpidFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilePpidFilterArrayOutput)
}

type ProfilePpidFilterOutput struct{ *pulumi.OutputState }

func (ProfilePpidFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfilePpidFilter)(nil)).Elem()
}

func (o ProfilePpidFilterOutput) ToProfilePpidFilterOutput() ProfilePpidFilterOutput {
	return o
}

func (o ProfilePpidFilterOutput) ToProfilePpidFilterOutputWithContext(ctx context.Context) ProfilePpidFilterOutput {
	return o
}

// Action taken when PPID is matched. Valid values: `pass`, `reset`, `replace`.
func (o ProfilePpidFilterOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePpidFilter) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Comment.
func (o ProfilePpidFilterOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfilePpidFilter) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// ID.
func (o ProfilePpidFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfilePpidFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Payload protocol identifier.
func (o ProfilePpidFilterOutput) Ppid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProfilePpidFilter) *int { return v.Ppid }).(pulumi.IntPtrOutput)
}

type ProfilePpidFilterArrayOutput struct{ *pulumi.OutputState }

func (ProfilePpidFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfilePpidFilter)(nil)).Elem()
}

func (o ProfilePpidFilterArrayOutput) ToProfilePpidFilterArrayOutput() ProfilePpidFilterArrayOutput {
	return o
}

func (o ProfilePpidFilterArrayOutput) ToProfilePpidFilterArrayOutputWithContext(ctx context.Context) ProfilePpidFilterArrayOutput {
	return o
}

func (o ProfilePpidFilterArrayOutput) Index(i pulumi.IntInput) ProfilePpidFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfilePpidFilter {
		return vs[0].([]ProfilePpidFilter)[vs[1].(int)]
	}).(ProfilePpidFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfilePpidFilterInput)(nil)).Elem(), ProfilePpidFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfilePpidFilterArrayInput)(nil)).Elem(), ProfilePpidFilterArray{})
	pulumi.RegisterOutputType(ProfilePpidFilterOutput{})
	pulumi.RegisterOutputType(ProfilePpidFilterArrayOutput{})
}
