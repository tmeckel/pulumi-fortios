// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package routerospf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OspfinterfaceMd5Key struct {
	// Key ID (1 - 255).
	Id *int `pulumi:"id"`
	// Password for the key.
	KeyString *string `pulumi:"keyString"`
}

// OspfinterfaceMd5KeyInput is an input type that accepts OspfinterfaceMd5KeyArgs and OspfinterfaceMd5KeyOutput values.
// You can construct a concrete instance of `OspfinterfaceMd5KeyInput` via:
//
//	OspfinterfaceMd5KeyArgs{...}
type OspfinterfaceMd5KeyInput interface {
	pulumi.Input

	ToOspfinterfaceMd5KeyOutput() OspfinterfaceMd5KeyOutput
	ToOspfinterfaceMd5KeyOutputWithContext(context.Context) OspfinterfaceMd5KeyOutput
}

type OspfinterfaceMd5KeyArgs struct {
	// Key ID (1 - 255).
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Password for the key.
	KeyString pulumi.StringPtrInput `pulumi:"keyString"`
}

func (OspfinterfaceMd5KeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfinterfaceMd5Key)(nil)).Elem()
}

func (i OspfinterfaceMd5KeyArgs) ToOspfinterfaceMd5KeyOutput() OspfinterfaceMd5KeyOutput {
	return i.ToOspfinterfaceMd5KeyOutputWithContext(context.Background())
}

func (i OspfinterfaceMd5KeyArgs) ToOspfinterfaceMd5KeyOutputWithContext(ctx context.Context) OspfinterfaceMd5KeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfinterfaceMd5KeyOutput)
}

// OspfinterfaceMd5KeyArrayInput is an input type that accepts OspfinterfaceMd5KeyArray and OspfinterfaceMd5KeyArrayOutput values.
// You can construct a concrete instance of `OspfinterfaceMd5KeyArrayInput` via:
//
//	OspfinterfaceMd5KeyArray{ OspfinterfaceMd5KeyArgs{...} }
type OspfinterfaceMd5KeyArrayInput interface {
	pulumi.Input

	ToOspfinterfaceMd5KeyArrayOutput() OspfinterfaceMd5KeyArrayOutput
	ToOspfinterfaceMd5KeyArrayOutputWithContext(context.Context) OspfinterfaceMd5KeyArrayOutput
}

type OspfinterfaceMd5KeyArray []OspfinterfaceMd5KeyInput

func (OspfinterfaceMd5KeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfinterfaceMd5Key)(nil)).Elem()
}

func (i OspfinterfaceMd5KeyArray) ToOspfinterfaceMd5KeyArrayOutput() OspfinterfaceMd5KeyArrayOutput {
	return i.ToOspfinterfaceMd5KeyArrayOutputWithContext(context.Background())
}

func (i OspfinterfaceMd5KeyArray) ToOspfinterfaceMd5KeyArrayOutputWithContext(ctx context.Context) OspfinterfaceMd5KeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OspfinterfaceMd5KeyArrayOutput)
}

type OspfinterfaceMd5KeyOutput struct{ *pulumi.OutputState }

func (OspfinterfaceMd5KeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OspfinterfaceMd5Key)(nil)).Elem()
}

func (o OspfinterfaceMd5KeyOutput) ToOspfinterfaceMd5KeyOutput() OspfinterfaceMd5KeyOutput {
	return o
}

func (o OspfinterfaceMd5KeyOutput) ToOspfinterfaceMd5KeyOutputWithContext(ctx context.Context) OspfinterfaceMd5KeyOutput {
	return o
}

// Key ID (1 - 255).
func (o OspfinterfaceMd5KeyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OspfinterfaceMd5Key) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Password for the key.
func (o OspfinterfaceMd5KeyOutput) KeyString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OspfinterfaceMd5Key) *string { return v.KeyString }).(pulumi.StringPtrOutput)
}

type OspfinterfaceMd5KeyArrayOutput struct{ *pulumi.OutputState }

func (OspfinterfaceMd5KeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OspfinterfaceMd5Key)(nil)).Elem()
}

func (o OspfinterfaceMd5KeyArrayOutput) ToOspfinterfaceMd5KeyArrayOutput() OspfinterfaceMd5KeyArrayOutput {
	return o
}

func (o OspfinterfaceMd5KeyArrayOutput) ToOspfinterfaceMd5KeyArrayOutputWithContext(ctx context.Context) OspfinterfaceMd5KeyArrayOutput {
	return o
}

func (o OspfinterfaceMd5KeyArrayOutput) Index(i pulumi.IntInput) OspfinterfaceMd5KeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OspfinterfaceMd5Key {
		return vs[0].([]OspfinterfaceMd5Key)[vs[1].(int)]
	}).(OspfinterfaceMd5KeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OspfinterfaceMd5KeyInput)(nil)).Elem(), OspfinterfaceMd5KeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OspfinterfaceMd5KeyArrayInput)(nil)).Elem(), OspfinterfaceMd5KeyArray{})
	pulumi.RegisterOutputType(OspfinterfaceMd5KeyOutput{})
	pulumi.RegisterOutputType(OspfinterfaceMd5KeyArrayOutput{})
}
