// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package systemdhcp6

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerIpRange struct {
	// End of IP range.
	EndIp *string `pulumi:"endIp"`
	// ID.
	Id *int `pulumi:"id"`
	// Start of IP range.
	StartIp *string `pulumi:"startIp"`
}

// ServerIpRangeInput is an input type that accepts ServerIpRangeArgs and ServerIpRangeOutput values.
// You can construct a concrete instance of `ServerIpRangeInput` via:
//
//	ServerIpRangeArgs{...}
type ServerIpRangeInput interface {
	pulumi.Input

	ToServerIpRangeOutput() ServerIpRangeOutput
	ToServerIpRangeOutputWithContext(context.Context) ServerIpRangeOutput
}

type ServerIpRangeArgs struct {
	// End of IP range.
	EndIp pulumi.StringPtrInput `pulumi:"endIp"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Start of IP range.
	StartIp pulumi.StringPtrInput `pulumi:"startIp"`
}

func (ServerIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIpRange)(nil)).Elem()
}

func (i ServerIpRangeArgs) ToServerIpRangeOutput() ServerIpRangeOutput {
	return i.ToServerIpRangeOutputWithContext(context.Background())
}

func (i ServerIpRangeArgs) ToServerIpRangeOutputWithContext(ctx context.Context) ServerIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIpRangeOutput)
}

// ServerIpRangeArrayInput is an input type that accepts ServerIpRangeArray and ServerIpRangeArrayOutput values.
// You can construct a concrete instance of `ServerIpRangeArrayInput` via:
//
//	ServerIpRangeArray{ ServerIpRangeArgs{...} }
type ServerIpRangeArrayInput interface {
	pulumi.Input

	ToServerIpRangeArrayOutput() ServerIpRangeArrayOutput
	ToServerIpRangeArrayOutputWithContext(context.Context) ServerIpRangeArrayOutput
}

type ServerIpRangeArray []ServerIpRangeInput

func (ServerIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerIpRange)(nil)).Elem()
}

func (i ServerIpRangeArray) ToServerIpRangeArrayOutput() ServerIpRangeArrayOutput {
	return i.ToServerIpRangeArrayOutputWithContext(context.Background())
}

func (i ServerIpRangeArray) ToServerIpRangeArrayOutputWithContext(ctx context.Context) ServerIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIpRangeArrayOutput)
}

type ServerIpRangeOutput struct{ *pulumi.OutputState }

func (ServerIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIpRange)(nil)).Elem()
}

func (o ServerIpRangeOutput) ToServerIpRangeOutput() ServerIpRangeOutput {
	return o
}

func (o ServerIpRangeOutput) ToServerIpRangeOutputWithContext(ctx context.Context) ServerIpRangeOutput {
	return o
}

// End of IP range.
func (o ServerIpRangeOutput) EndIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIpRange) *string { return v.EndIp }).(pulumi.StringPtrOutput)
}

// ID.
func (o ServerIpRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerIpRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Start of IP range.
func (o ServerIpRangeOutput) StartIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIpRange) *string { return v.StartIp }).(pulumi.StringPtrOutput)
}

type ServerIpRangeArrayOutput struct{ *pulumi.OutputState }

func (ServerIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerIpRange)(nil)).Elem()
}

func (o ServerIpRangeArrayOutput) ToServerIpRangeArrayOutput() ServerIpRangeArrayOutput {
	return o
}

func (o ServerIpRangeArrayOutput) ToServerIpRangeArrayOutputWithContext(ctx context.Context) ServerIpRangeArrayOutput {
	return o
}

func (o ServerIpRangeArrayOutput) Index(i pulumi.IntInput) ServerIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerIpRange {
		return vs[0].([]ServerIpRange)[vs[1].(int)]
	}).(ServerIpRangeOutput)
}

type ServerPrefixRange struct {
	// End of prefix range.
	EndPrefix *string `pulumi:"endPrefix"`
	// ID.
	Id *int `pulumi:"id"`
	// Prefix length.
	PrefixLength *int `pulumi:"prefixLength"`
	// Start of prefix range.
	StartPrefix *string `pulumi:"startPrefix"`
}

// ServerPrefixRangeInput is an input type that accepts ServerPrefixRangeArgs and ServerPrefixRangeOutput values.
// You can construct a concrete instance of `ServerPrefixRangeInput` via:
//
//	ServerPrefixRangeArgs{...}
type ServerPrefixRangeInput interface {
	pulumi.Input

	ToServerPrefixRangeOutput() ServerPrefixRangeOutput
	ToServerPrefixRangeOutputWithContext(context.Context) ServerPrefixRangeOutput
}

type ServerPrefixRangeArgs struct {
	// End of prefix range.
	EndPrefix pulumi.StringPtrInput `pulumi:"endPrefix"`
	// ID.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Prefix length.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// Start of prefix range.
	StartPrefix pulumi.StringPtrInput `pulumi:"startPrefix"`
}

func (ServerPrefixRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPrefixRange)(nil)).Elem()
}

func (i ServerPrefixRangeArgs) ToServerPrefixRangeOutput() ServerPrefixRangeOutput {
	return i.ToServerPrefixRangeOutputWithContext(context.Background())
}

func (i ServerPrefixRangeArgs) ToServerPrefixRangeOutputWithContext(ctx context.Context) ServerPrefixRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPrefixRangeOutput)
}

// ServerPrefixRangeArrayInput is an input type that accepts ServerPrefixRangeArray and ServerPrefixRangeArrayOutput values.
// You can construct a concrete instance of `ServerPrefixRangeArrayInput` via:
//
//	ServerPrefixRangeArray{ ServerPrefixRangeArgs{...} }
type ServerPrefixRangeArrayInput interface {
	pulumi.Input

	ToServerPrefixRangeArrayOutput() ServerPrefixRangeArrayOutput
	ToServerPrefixRangeArrayOutputWithContext(context.Context) ServerPrefixRangeArrayOutput
}

type ServerPrefixRangeArray []ServerPrefixRangeInput

func (ServerPrefixRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPrefixRange)(nil)).Elem()
}

func (i ServerPrefixRangeArray) ToServerPrefixRangeArrayOutput() ServerPrefixRangeArrayOutput {
	return i.ToServerPrefixRangeArrayOutputWithContext(context.Background())
}

func (i ServerPrefixRangeArray) ToServerPrefixRangeArrayOutputWithContext(ctx context.Context) ServerPrefixRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPrefixRangeArrayOutput)
}

type ServerPrefixRangeOutput struct{ *pulumi.OutputState }

func (ServerPrefixRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPrefixRange)(nil)).Elem()
}

func (o ServerPrefixRangeOutput) ToServerPrefixRangeOutput() ServerPrefixRangeOutput {
	return o
}

func (o ServerPrefixRangeOutput) ToServerPrefixRangeOutputWithContext(ctx context.Context) ServerPrefixRangeOutput {
	return o
}

// End of prefix range.
func (o ServerPrefixRangeOutput) EndPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPrefixRange) *string { return v.EndPrefix }).(pulumi.StringPtrOutput)
}

// ID.
func (o ServerPrefixRangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerPrefixRange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Prefix length.
func (o ServerPrefixRangeOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerPrefixRange) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// Start of prefix range.
func (o ServerPrefixRangeOutput) StartPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPrefixRange) *string { return v.StartPrefix }).(pulumi.StringPtrOutput)
}

type ServerPrefixRangeArrayOutput struct{ *pulumi.OutputState }

func (ServerPrefixRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPrefixRange)(nil)).Elem()
}

func (o ServerPrefixRangeArrayOutput) ToServerPrefixRangeArrayOutput() ServerPrefixRangeArrayOutput {
	return o
}

func (o ServerPrefixRangeArrayOutput) ToServerPrefixRangeArrayOutputWithContext(ctx context.Context) ServerPrefixRangeArrayOutput {
	return o
}

func (o ServerPrefixRangeArrayOutput) Index(i pulumi.IntInput) ServerPrefixRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerPrefixRange {
		return vs[0].([]ServerPrefixRange)[vs[1].(int)]
	}).(ServerPrefixRangeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIpRangeInput)(nil)).Elem(), ServerIpRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIpRangeArrayInput)(nil)).Elem(), ServerIpRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPrefixRangeInput)(nil)).Elem(), ServerPrefixRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPrefixRangeArrayInput)(nil)).Elem(), ServerPrefixRangeArray{})
	pulumi.RegisterOutputType(ServerIpRangeOutput{})
	pulumi.RegisterOutputType(ServerIpRangeArrayOutput{})
	pulumi.RegisterOutputType(ServerPrefixRangeOutput{})
	pulumi.RegisterOutputType(ServerPrefixRangeArrayOutput{})
}
