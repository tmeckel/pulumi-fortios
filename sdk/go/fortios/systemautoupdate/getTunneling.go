// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package systemautoupdate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios systemautoupdate tunneling
func LookupTunneling(ctx *pulumi.Context, args *LookupTunnelingArgs, opts ...pulumi.InvokeOption) (*LookupTunnelingResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupTunnelingResult
	err := ctx.Invoke("fortios:systemautoupdate/getTunneling:getTunneling", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTunneling.
type LookupTunnelingArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getTunneling.
type LookupTunnelingResult struct {
	// Web proxy IP address or FQDN.
	Address string `pulumi:"address"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Web proxy password.
	Password string `pulumi:"password"`
	// Web proxy port.
	Port int `pulumi:"port"`
	// Enable/disable web proxy tunnelling.
	Status string `pulumi:"status"`
	// Web proxy username.
	Username  string  `pulumi:"username"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupTunnelingOutput(ctx *pulumi.Context, args LookupTunnelingOutputArgs, opts ...pulumi.InvokeOption) LookupTunnelingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTunnelingResult, error) {
			args := v.(LookupTunnelingArgs)
			r, err := LookupTunneling(ctx, &args, opts...)
			var s LookupTunnelingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTunnelingResultOutput)
}

// A collection of arguments for invoking getTunneling.
type LookupTunnelingOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupTunnelingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTunnelingArgs)(nil)).Elem()
}

// A collection of values returned by getTunneling.
type LookupTunnelingResultOutput struct{ *pulumi.OutputState }

func (LookupTunnelingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTunnelingResult)(nil)).Elem()
}

func (o LookupTunnelingResultOutput) ToLookupTunnelingResultOutput() LookupTunnelingResultOutput {
	return o
}

func (o LookupTunnelingResultOutput) ToLookupTunnelingResultOutputWithContext(ctx context.Context) LookupTunnelingResultOutput {
	return o
}

// Web proxy IP address or FQDN.
func (o LookupTunnelingResultOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelingResult) string { return v.Address }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTunnelingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Web proxy password.
func (o LookupTunnelingResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelingResult) string { return v.Password }).(pulumi.StringOutput)
}

// Web proxy port.
func (o LookupTunnelingResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTunnelingResult) int { return v.Port }).(pulumi.IntOutput)
}

// Enable/disable web proxy tunnelling.
func (o LookupTunnelingResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelingResult) string { return v.Status }).(pulumi.StringOutput)
}

// Web proxy username.
func (o LookupTunnelingResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTunnelingResult) string { return v.Username }).(pulumi.StringOutput)
}

func (o LookupTunnelingResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTunnelingResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTunnelingResultOutput{})
}
