// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system hamonitor
func LookupHamonitor(ctx *pulumi.Context, args *LookupHamonitorArgs, opts ...pulumi.InvokeOption) (*LookupHamonitorResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupHamonitorResult
	err := ctx.Invoke("fortios:sys/getHamonitor:getHamonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHamonitor.
type LookupHamonitorArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getHamonitor.
type LookupHamonitorResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Enable/disable monitor VLAN interfaces.
	MonitorVlan string  `pulumi:"monitorVlan"`
	Vdomparam   *string `pulumi:"vdomparam"`
	// Configure heartbeat interval (seconds).
	VlanHbInterval int `pulumi:"vlanHbInterval"`
	// VLAN lost heartbeat threshold (1 - 60).
	VlanHbLostThreshold int `pulumi:"vlanHbLostThreshold"`
}

func LookupHamonitorOutput(ctx *pulumi.Context, args LookupHamonitorOutputArgs, opts ...pulumi.InvokeOption) LookupHamonitorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupHamonitorResult, error) {
			args := v.(LookupHamonitorArgs)
			r, err := LookupHamonitor(ctx, &args, opts...)
			var s LookupHamonitorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupHamonitorResultOutput)
}

// A collection of arguments for invoking getHamonitor.
type LookupHamonitorOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupHamonitorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHamonitorArgs)(nil)).Elem()
}

// A collection of values returned by getHamonitor.
type LookupHamonitorResultOutput struct{ *pulumi.OutputState }

func (LookupHamonitorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHamonitorResult)(nil)).Elem()
}

func (o LookupHamonitorResultOutput) ToLookupHamonitorResultOutput() LookupHamonitorResultOutput {
	return o
}

func (o LookupHamonitorResultOutput) ToLookupHamonitorResultOutputWithContext(ctx context.Context) LookupHamonitorResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupHamonitorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHamonitorResult) string { return v.Id }).(pulumi.StringOutput)
}

// Enable/disable monitor VLAN interfaces.
func (o LookupHamonitorResultOutput) MonitorVlan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHamonitorResult) string { return v.MonitorVlan }).(pulumi.StringOutput)
}

func (o LookupHamonitorResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHamonitorResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

// Configure heartbeat interval (seconds).
func (o LookupHamonitorResultOutput) VlanHbInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupHamonitorResult) int { return v.VlanHbInterval }).(pulumi.IntOutput)
}

// VLAN lost heartbeat threshold (1 - 60).
func (o LookupHamonitorResultOutput) VlanHbLostThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v LookupHamonitorResult) int { return v.VlanHbLostThreshold }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHamonitorResultOutput{})
}
