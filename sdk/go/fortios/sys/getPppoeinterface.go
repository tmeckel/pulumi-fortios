// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios system pppoeinterface
func LookupPppoeinterface(ctx *pulumi.Context, args *LookupPppoeinterfaceArgs, opts ...pulumi.InvokeOption) (*LookupPppoeinterfaceResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupPppoeinterfaceResult
	err := ctx.Invoke("fortios:sys/getPppoeinterface:getPppoeinterface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPppoeinterface.
type LookupPppoeinterfaceArgs struct {
	// Specify the name of the desired system pppoeinterface.
	Name string `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getPppoeinterface.
type LookupPppoeinterfaceResult struct {
	// PPPoE AC name.
	AcName string `pulumi:"acName"`
	// PPP authentication type to use.
	AuthType string `pulumi:"authType"`
	// Name for the physical interface.
	Device string `pulumi:"device"`
	// Enable/disable dial on demand to dial the PPPoE interface when packets are routed to the PPPoE interface.
	DialOnDemand string `pulumi:"dialOnDemand"`
	// PPPoE discovery init timeout value in (0-4294967295 sec).
	DiscRetryTimeout int `pulumi:"discRetryTimeout"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// PPPoE auto disconnect after idle timeout (0-4294967295 sec).
	IdleTimeout int `pulumi:"idleTimeout"`
	// PPPoE unnumbered IP.
	Ipunnumbered string `pulumi:"ipunnumbered"`
	// Enable/disable IPv6 Control Protocol (IPv6CP).
	Ipv6 string `pulumi:"ipv6"`
	// PPPoE LCP echo interval in (0-4294967295 sec, default = 5).
	LcpEchoInterval int `pulumi:"lcpEchoInterval"`
	// Maximum missed LCP echo messages before disconnect (0-4294967295, default = 3).
	LcpMaxEchoFails int `pulumi:"lcpMaxEchoFails"`
	// Name of the PPPoE interface.
	Name string `pulumi:"name"`
	// PPPoE terminate timeout value in (0-4294967295 sec).
	PadtRetryTimeout int `pulumi:"padtRetryTimeout"`
	// Enter the password.
	Password string `pulumi:"password"`
	// Enable/disable PPPoE unnumbered negotiation.
	PppoeUnnumberedNegotiate string `pulumi:"pppoeUnnumberedNegotiate"`
	// PPPoE service name.
	ServiceName string `pulumi:"serviceName"`
	// User name.
	Username  string  `pulumi:"username"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupPppoeinterfaceOutput(ctx *pulumi.Context, args LookupPppoeinterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupPppoeinterfaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPppoeinterfaceResult, error) {
			args := v.(LookupPppoeinterfaceArgs)
			r, err := LookupPppoeinterface(ctx, &args, opts...)
			var s LookupPppoeinterfaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPppoeinterfaceResultOutput)
}

// A collection of arguments for invoking getPppoeinterface.
type LookupPppoeinterfaceOutputArgs struct {
	// Specify the name of the desired system pppoeinterface.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupPppoeinterfaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPppoeinterfaceArgs)(nil)).Elem()
}

// A collection of values returned by getPppoeinterface.
type LookupPppoeinterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupPppoeinterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPppoeinterfaceResult)(nil)).Elem()
}

func (o LookupPppoeinterfaceResultOutput) ToLookupPppoeinterfaceResultOutput() LookupPppoeinterfaceResultOutput {
	return o
}

func (o LookupPppoeinterfaceResultOutput) ToLookupPppoeinterfaceResultOutputWithContext(ctx context.Context) LookupPppoeinterfaceResultOutput {
	return o
}

// PPPoE AC name.
func (o LookupPppoeinterfaceResultOutput) AcName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.AcName }).(pulumi.StringOutput)
}

// PPP authentication type to use.
func (o LookupPppoeinterfaceResultOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.AuthType }).(pulumi.StringOutput)
}

// Name for the physical interface.
func (o LookupPppoeinterfaceResultOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.Device }).(pulumi.StringOutput)
}

// Enable/disable dial on demand to dial the PPPoE interface when packets are routed to the PPPoE interface.
func (o LookupPppoeinterfaceResultOutput) DialOnDemand() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.DialOnDemand }).(pulumi.StringOutput)
}

// PPPoE discovery init timeout value in (0-4294967295 sec).
func (o LookupPppoeinterfaceResultOutput) DiscRetryTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) int { return v.DiscRetryTimeout }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPppoeinterfaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// PPPoE auto disconnect after idle timeout (0-4294967295 sec).
func (o LookupPppoeinterfaceResultOutput) IdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) int { return v.IdleTimeout }).(pulumi.IntOutput)
}

// PPPoE unnumbered IP.
func (o LookupPppoeinterfaceResultOutput) Ipunnumbered() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.Ipunnumbered }).(pulumi.StringOutput)
}

// Enable/disable IPv6 Control Protocol (IPv6CP).
func (o LookupPppoeinterfaceResultOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.Ipv6 }).(pulumi.StringOutput)
}

// PPPoE LCP echo interval in (0-4294967295 sec, default = 5).
func (o LookupPppoeinterfaceResultOutput) LcpEchoInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) int { return v.LcpEchoInterval }).(pulumi.IntOutput)
}

// Maximum missed LCP echo messages before disconnect (0-4294967295, default = 3).
func (o LookupPppoeinterfaceResultOutput) LcpMaxEchoFails() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) int { return v.LcpMaxEchoFails }).(pulumi.IntOutput)
}

// Name of the PPPoE interface.
func (o LookupPppoeinterfaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.Name }).(pulumi.StringOutput)
}

// PPPoE terminate timeout value in (0-4294967295 sec).
func (o LookupPppoeinterfaceResultOutput) PadtRetryTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) int { return v.PadtRetryTimeout }).(pulumi.IntOutput)
}

// Enter the password.
func (o LookupPppoeinterfaceResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.Password }).(pulumi.StringOutput)
}

// Enable/disable PPPoE unnumbered negotiation.
func (o LookupPppoeinterfaceResultOutput) PppoeUnnumberedNegotiate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.PppoeUnnumberedNegotiate }).(pulumi.StringOutput)
}

// PPPoE service name.
func (o LookupPppoeinterfaceResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// User name.
func (o LookupPppoeinterfaceResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) string { return v.Username }).(pulumi.StringOutput)
}

func (o LookupPppoeinterfaceResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPppoeinterfaceResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPppoeinterfaceResultOutput{})
}
