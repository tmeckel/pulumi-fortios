// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system fipscc
func LookupFipscc(ctx *pulumi.Context, args *LookupFipsccArgs, opts ...pulumi.InvokeOption) (*LookupFipsccResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupFipsccResult
	err := ctx.Invoke("fortios:sys/getFipscc:getFipscc", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFipscc.
type LookupFipsccArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getFipscc.
type LookupFipsccResult struct {
	// Enable/disable/dynamic entropy token.
	EntropyToken string `pulumi:"entropyToken"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Enable/disable self tests after key generation.
	KeyGenerationSelfTest string `pulumi:"keyGenerationSelfTest"`
	// Self test period.
	SelfTestPeriod int `pulumi:"selfTestPeriod"`
	// Enable/disable FIPS-CC mode.
	Status    string  `pulumi:"status"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupFipsccOutput(ctx *pulumi.Context, args LookupFipsccOutputArgs, opts ...pulumi.InvokeOption) LookupFipsccResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFipsccResult, error) {
			args := v.(LookupFipsccArgs)
			r, err := LookupFipscc(ctx, &args, opts...)
			var s LookupFipsccResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFipsccResultOutput)
}

// A collection of arguments for invoking getFipscc.
type LookupFipsccOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupFipsccOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFipsccArgs)(nil)).Elem()
}

// A collection of values returned by getFipscc.
type LookupFipsccResultOutput struct{ *pulumi.OutputState }

func (LookupFipsccResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFipsccResult)(nil)).Elem()
}

func (o LookupFipsccResultOutput) ToLookupFipsccResultOutput() LookupFipsccResultOutput {
	return o
}

func (o LookupFipsccResultOutput) ToLookupFipsccResultOutputWithContext(ctx context.Context) LookupFipsccResultOutput {
	return o
}

// Enable/disable/dynamic entropy token.
func (o LookupFipsccResultOutput) EntropyToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFipsccResult) string { return v.EntropyToken }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFipsccResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFipsccResult) string { return v.Id }).(pulumi.StringOutput)
}

// Enable/disable self tests after key generation.
func (o LookupFipsccResultOutput) KeyGenerationSelfTest() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFipsccResult) string { return v.KeyGenerationSelfTest }).(pulumi.StringOutput)
}

// Self test period.
func (o LookupFipsccResultOutput) SelfTestPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFipsccResult) int { return v.SelfTestPeriod }).(pulumi.IntOutput)
}

// Enable/disable FIPS-CC mode.
func (o LookupFipsccResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFipsccResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupFipsccResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFipsccResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFipsccResultOutput{})
}
