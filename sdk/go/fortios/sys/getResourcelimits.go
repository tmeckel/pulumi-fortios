// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system resourcelimits
func LookupResourcelimits(ctx *pulumi.Context, args *LookupResourcelimitsArgs, opts ...pulumi.InvokeOption) (*LookupResourcelimitsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupResourcelimitsResult
	err := ctx.Invoke("fortios:sys/getResourcelimits:getResourcelimits", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourcelimits.
type LookupResourcelimitsArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getResourcelimits.
type LookupResourcelimitsResult struct {
	// Maximum number of firewall custom services.
	CustomService int `pulumi:"customService"`
	// Maximum number of dial-up tunnels.
	DialupTunnel int `pulumi:"dialupTunnel"`
	// Maximum number of firewall addresses (IPv4, IPv6, multicast).
	FirewallAddress int `pulumi:"firewallAddress"`
	// Maximum number of firewall address groups (IPv4, IPv6).
	FirewallAddrgrp int `pulumi:"firewallAddrgrp"`
	// Maximum number of firewall policies (IPv4, IPv6, policy46, policy64, DoS-policy4, DoS-policy6, multicast).
	FirewallPolicy int `pulumi:"firewallPolicy"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Maximum number of VPN IPsec phase1 tunnels.
	IpsecPhase1 int `pulumi:"ipsecPhase1"`
	// Maximum number of VPN IPsec phase1 interface tunnels.
	IpsecPhase1Interface int `pulumi:"ipsecPhase1Interface"`
	// Maximum number of VPN IPsec phase2 tunnels.
	IpsecPhase2 int `pulumi:"ipsecPhase2"`
	// Maximum number of VPN IPsec phase2 interface tunnels.
	IpsecPhase2Interface int `pulumi:"ipsecPhase2Interface"`
	// Log disk quota in MB.
	LogDiskQuota int `pulumi:"logDiskQuota"`
	// Maximum number of firewall one-time schedules.
	OnetimeSchedule int `pulumi:"onetimeSchedule"`
	// Maximum number of concurrent proxy users.
	Proxy int `pulumi:"proxy"`
	// Maximum number of firewall recurring schedules.
	RecurringSchedule int `pulumi:"recurringSchedule"`
	// Maximum number of firewall service groups.
	ServiceGroup int `pulumi:"serviceGroup"`
	// Maximum number of sessions.
	Session int `pulumi:"session"`
	// Maximum number of SSL-VPN.
	Sslvpn int `pulumi:"sslvpn"`
	// Maximum number of local users.
	User int `pulumi:"user"`
	// Maximum number of user groups.
	UserGroup int     `pulumi:"userGroup"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupResourcelimitsOutput(ctx *pulumi.Context, args LookupResourcelimitsOutputArgs, opts ...pulumi.InvokeOption) LookupResourcelimitsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResourcelimitsResult, error) {
			args := v.(LookupResourcelimitsArgs)
			r, err := LookupResourcelimits(ctx, &args, opts...)
			var s LookupResourcelimitsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResourcelimitsResultOutput)
}

// A collection of arguments for invoking getResourcelimits.
type LookupResourcelimitsOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupResourcelimitsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourcelimitsArgs)(nil)).Elem()
}

// A collection of values returned by getResourcelimits.
type LookupResourcelimitsResultOutput struct{ *pulumi.OutputState }

func (LookupResourcelimitsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourcelimitsResult)(nil)).Elem()
}

func (o LookupResourcelimitsResultOutput) ToLookupResourcelimitsResultOutput() LookupResourcelimitsResultOutput {
	return o
}

func (o LookupResourcelimitsResultOutput) ToLookupResourcelimitsResultOutputWithContext(ctx context.Context) LookupResourcelimitsResultOutput {
	return o
}

// Maximum number of firewall custom services.
func (o LookupResourcelimitsResultOutput) CustomService() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.CustomService }).(pulumi.IntOutput)
}

// Maximum number of dial-up tunnels.
func (o LookupResourcelimitsResultOutput) DialupTunnel() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.DialupTunnel }).(pulumi.IntOutput)
}

// Maximum number of firewall addresses (IPv4, IPv6, multicast).
func (o LookupResourcelimitsResultOutput) FirewallAddress() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.FirewallAddress }).(pulumi.IntOutput)
}

// Maximum number of firewall address groups (IPv4, IPv6).
func (o LookupResourcelimitsResultOutput) FirewallAddrgrp() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.FirewallAddrgrp }).(pulumi.IntOutput)
}

// Maximum number of firewall policies (IPv4, IPv6, policy46, policy64, DoS-policy4, DoS-policy6, multicast).
func (o LookupResourcelimitsResultOutput) FirewallPolicy() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.FirewallPolicy }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourcelimitsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Maximum number of VPN IPsec phase1 tunnels.
func (o LookupResourcelimitsResultOutput) IpsecPhase1() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.IpsecPhase1 }).(pulumi.IntOutput)
}

// Maximum number of VPN IPsec phase1 interface tunnels.
func (o LookupResourcelimitsResultOutput) IpsecPhase1Interface() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.IpsecPhase1Interface }).(pulumi.IntOutput)
}

// Maximum number of VPN IPsec phase2 tunnels.
func (o LookupResourcelimitsResultOutput) IpsecPhase2() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.IpsecPhase2 }).(pulumi.IntOutput)
}

// Maximum number of VPN IPsec phase2 interface tunnels.
func (o LookupResourcelimitsResultOutput) IpsecPhase2Interface() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.IpsecPhase2Interface }).(pulumi.IntOutput)
}

// Log disk quota in MB.
func (o LookupResourcelimitsResultOutput) LogDiskQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.LogDiskQuota }).(pulumi.IntOutput)
}

// Maximum number of firewall one-time schedules.
func (o LookupResourcelimitsResultOutput) OnetimeSchedule() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.OnetimeSchedule }).(pulumi.IntOutput)
}

// Maximum number of concurrent proxy users.
func (o LookupResourcelimitsResultOutput) Proxy() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.Proxy }).(pulumi.IntOutput)
}

// Maximum number of firewall recurring schedules.
func (o LookupResourcelimitsResultOutput) RecurringSchedule() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.RecurringSchedule }).(pulumi.IntOutput)
}

// Maximum number of firewall service groups.
func (o LookupResourcelimitsResultOutput) ServiceGroup() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.ServiceGroup }).(pulumi.IntOutput)
}

// Maximum number of sessions.
func (o LookupResourcelimitsResultOutput) Session() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.Session }).(pulumi.IntOutput)
}

// Maximum number of SSL-VPN.
func (o LookupResourcelimitsResultOutput) Sslvpn() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.Sslvpn }).(pulumi.IntOutput)
}

// Maximum number of local users.
func (o LookupResourcelimitsResultOutput) User() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.User }).(pulumi.IntOutput)
}

// Maximum number of user groups.
func (o LookupResourcelimitsResultOutput) UserGroup() pulumi.IntOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) int { return v.UserGroup }).(pulumi.IntOutput)
}

func (o LookupResourcelimitsResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourcelimitsResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourcelimitsResultOutput{})
}
