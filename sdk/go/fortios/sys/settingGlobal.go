// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SettingGlobal struct {
	pulumi.CustomResourceState

	// Enable SCP over SSH
	AdminScp pulumi.StringOutput `pulumi:"adminScp"`
	// Administrative access port for HTTPS.
	AdminSport pulumi.StringOutput `pulumi:"adminSport"`
	// Administrative access port for SSH.
	AdminSshPort pulumi.StringOutput `pulumi:"adminSshPort"`
	// Number of minutes before an idle administrator session time out.
	Admintimeout pulumi.StringOutput `pulumi:"admintimeout"`
	// FortiGate unit's hostname.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// Number corresponding to your time zone from 00 to 86.
	Timezone pulumi.StringOutput `pulumi:"timezone"`
}

// NewSettingGlobal registers a new resource with the given unique name, arguments, and options.
func NewSettingGlobal(ctx *pulumi.Context,
	name string, args *SettingGlobalArgs, opts ...pulumi.ResourceOption) (*SettingGlobal, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Hostname == nil {
		return nil, errors.New("invalid value for required argument 'Hostname'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SettingGlobal
	err := ctx.RegisterResource("fortios:sys/settingGlobal:SettingGlobal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSettingGlobal gets an existing SettingGlobal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSettingGlobal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SettingGlobalState, opts ...pulumi.ResourceOption) (*SettingGlobal, error) {
	var resource SettingGlobal
	err := ctx.ReadResource("fortios:sys/settingGlobal:SettingGlobal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SettingGlobal resources.
type settingGlobalState struct {
	// Enable SCP over SSH
	AdminScp *string `pulumi:"adminScp"`
	// Administrative access port for HTTPS.
	AdminSport *string `pulumi:"adminSport"`
	// Administrative access port for SSH.
	AdminSshPort *string `pulumi:"adminSshPort"`
	// Number of minutes before an idle administrator session time out.
	Admintimeout *string `pulumi:"admintimeout"`
	// FortiGate unit's hostname.
	Hostname *string `pulumi:"hostname"`
	// Number corresponding to your time zone from 00 to 86.
	Timezone *string `pulumi:"timezone"`
}

type SettingGlobalState struct {
	// Enable SCP over SSH
	AdminScp pulumi.StringPtrInput
	// Administrative access port for HTTPS.
	AdminSport pulumi.StringPtrInput
	// Administrative access port for SSH.
	AdminSshPort pulumi.StringPtrInput
	// Number of minutes before an idle administrator session time out.
	Admintimeout pulumi.StringPtrInput
	// FortiGate unit's hostname.
	Hostname pulumi.StringPtrInput
	// Number corresponding to your time zone from 00 to 86.
	Timezone pulumi.StringPtrInput
}

func (SettingGlobalState) ElementType() reflect.Type {
	return reflect.TypeOf((*settingGlobalState)(nil)).Elem()
}

type settingGlobalArgs struct {
	// Enable SCP over SSH
	AdminScp *string `pulumi:"adminScp"`
	// Administrative access port for HTTPS.
	AdminSport *string `pulumi:"adminSport"`
	// Administrative access port for SSH.
	AdminSshPort *string `pulumi:"adminSshPort"`
	// Number of minutes before an idle administrator session time out.
	Admintimeout *string `pulumi:"admintimeout"`
	// FortiGate unit's hostname.
	Hostname string `pulumi:"hostname"`
	// Number corresponding to your time zone from 00 to 86.
	Timezone *string `pulumi:"timezone"`
}

// The set of arguments for constructing a SettingGlobal resource.
type SettingGlobalArgs struct {
	// Enable SCP over SSH
	AdminScp pulumi.StringPtrInput
	// Administrative access port for HTTPS.
	AdminSport pulumi.StringPtrInput
	// Administrative access port for SSH.
	AdminSshPort pulumi.StringPtrInput
	// Number of minutes before an idle administrator session time out.
	Admintimeout pulumi.StringPtrInput
	// FortiGate unit's hostname.
	Hostname pulumi.StringInput
	// Number corresponding to your time zone from 00 to 86.
	Timezone pulumi.StringPtrInput
}

func (SettingGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*settingGlobalArgs)(nil)).Elem()
}

type SettingGlobalInput interface {
	pulumi.Input

	ToSettingGlobalOutput() SettingGlobalOutput
	ToSettingGlobalOutputWithContext(ctx context.Context) SettingGlobalOutput
}

func (*SettingGlobal) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingGlobal)(nil)).Elem()
}

func (i *SettingGlobal) ToSettingGlobalOutput() SettingGlobalOutput {
	return i.ToSettingGlobalOutputWithContext(context.Background())
}

func (i *SettingGlobal) ToSettingGlobalOutputWithContext(ctx context.Context) SettingGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingGlobalOutput)
}

// SettingGlobalArrayInput is an input type that accepts SettingGlobalArray and SettingGlobalArrayOutput values.
// You can construct a concrete instance of `SettingGlobalArrayInput` via:
//
//	SettingGlobalArray{ SettingGlobalArgs{...} }
type SettingGlobalArrayInput interface {
	pulumi.Input

	ToSettingGlobalArrayOutput() SettingGlobalArrayOutput
	ToSettingGlobalArrayOutputWithContext(context.Context) SettingGlobalArrayOutput
}

type SettingGlobalArray []SettingGlobalInput

func (SettingGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SettingGlobal)(nil)).Elem()
}

func (i SettingGlobalArray) ToSettingGlobalArrayOutput() SettingGlobalArrayOutput {
	return i.ToSettingGlobalArrayOutputWithContext(context.Background())
}

func (i SettingGlobalArray) ToSettingGlobalArrayOutputWithContext(ctx context.Context) SettingGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingGlobalArrayOutput)
}

// SettingGlobalMapInput is an input type that accepts SettingGlobalMap and SettingGlobalMapOutput values.
// You can construct a concrete instance of `SettingGlobalMapInput` via:
//
//	SettingGlobalMap{ "key": SettingGlobalArgs{...} }
type SettingGlobalMapInput interface {
	pulumi.Input

	ToSettingGlobalMapOutput() SettingGlobalMapOutput
	ToSettingGlobalMapOutputWithContext(context.Context) SettingGlobalMapOutput
}

type SettingGlobalMap map[string]SettingGlobalInput

func (SettingGlobalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SettingGlobal)(nil)).Elem()
}

func (i SettingGlobalMap) ToSettingGlobalMapOutput() SettingGlobalMapOutput {
	return i.ToSettingGlobalMapOutputWithContext(context.Background())
}

func (i SettingGlobalMap) ToSettingGlobalMapOutputWithContext(ctx context.Context) SettingGlobalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingGlobalMapOutput)
}

type SettingGlobalOutput struct{ *pulumi.OutputState }

func (SettingGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingGlobal)(nil)).Elem()
}

func (o SettingGlobalOutput) ToSettingGlobalOutput() SettingGlobalOutput {
	return o
}

func (o SettingGlobalOutput) ToSettingGlobalOutputWithContext(ctx context.Context) SettingGlobalOutput {
	return o
}

// Enable SCP over SSH
func (o SettingGlobalOutput) AdminScp() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingGlobal) pulumi.StringOutput { return v.AdminScp }).(pulumi.StringOutput)
}

// Administrative access port for HTTPS.
func (o SettingGlobalOutput) AdminSport() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingGlobal) pulumi.StringOutput { return v.AdminSport }).(pulumi.StringOutput)
}

// Administrative access port for SSH.
func (o SettingGlobalOutput) AdminSshPort() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingGlobal) pulumi.StringOutput { return v.AdminSshPort }).(pulumi.StringOutput)
}

// Number of minutes before an idle administrator session time out.
func (o SettingGlobalOutput) Admintimeout() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingGlobal) pulumi.StringOutput { return v.Admintimeout }).(pulumi.StringOutput)
}

// FortiGate unit's hostname.
func (o SettingGlobalOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingGlobal) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// Number corresponding to your time zone from 00 to 86.
func (o SettingGlobalOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingGlobal) pulumi.StringOutput { return v.Timezone }).(pulumi.StringOutput)
}

type SettingGlobalArrayOutput struct{ *pulumi.OutputState }

func (SettingGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SettingGlobal)(nil)).Elem()
}

func (o SettingGlobalArrayOutput) ToSettingGlobalArrayOutput() SettingGlobalArrayOutput {
	return o
}

func (o SettingGlobalArrayOutput) ToSettingGlobalArrayOutputWithContext(ctx context.Context) SettingGlobalArrayOutput {
	return o
}

func (o SettingGlobalArrayOutput) Index(i pulumi.IntInput) SettingGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SettingGlobal {
		return vs[0].([]*SettingGlobal)[vs[1].(int)]
	}).(SettingGlobalOutput)
}

type SettingGlobalMapOutput struct{ *pulumi.OutputState }

func (SettingGlobalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SettingGlobal)(nil)).Elem()
}

func (o SettingGlobalMapOutput) ToSettingGlobalMapOutput() SettingGlobalMapOutput {
	return o
}

func (o SettingGlobalMapOutput) ToSettingGlobalMapOutputWithContext(ctx context.Context) SettingGlobalMapOutput {
	return o
}

func (o SettingGlobalMapOutput) MapIndex(k pulumi.StringInput) SettingGlobalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SettingGlobal {
		return vs[0].(map[string]*SettingGlobal)[vs[1].(string)]
	}).(SettingGlobalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SettingGlobalInput)(nil)).Elem(), &SettingGlobal{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingGlobalArrayInput)(nil)).Elem(), SettingGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingGlobalMapInput)(nil)).Elem(), SettingGlobalMap{})
	pulumi.RegisterOutputType(SettingGlobalOutput{})
	pulumi.RegisterOutputType(SettingGlobalArrayOutput{})
	pulumi.RegisterOutputType(SettingGlobalMapOutput{})
}
