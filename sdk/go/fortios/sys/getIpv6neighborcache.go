// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios system ipv6neighborcache
func LookupIpv6neighborcache(ctx *pulumi.Context, args *LookupIpv6neighborcacheArgs, opts ...pulumi.InvokeOption) (*LookupIpv6neighborcacheResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupIpv6neighborcacheResult
	err := ctx.Invoke("fortios:sys/getIpv6neighborcache:getIpv6neighborcache", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv6neighborcache.
type LookupIpv6neighborcacheArgs struct {
	// Specify the fosid of the desired system ipv6neighborcache.
	Fosid int `pulumi:"fosid"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getIpv6neighborcache.
type LookupIpv6neighborcacheResult struct {
	// Unique integer ID of the entry.
	Fosid int `pulumi:"fosid"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Select the associated interface name from available options.
	Interface string `pulumi:"interface"`
	// IPv6 address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
	Ipv6 string `pulumi:"ipv6"`
	// MAC address (format: xx:xx:xx:xx:xx:xx).
	Mac       string  `pulumi:"mac"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupIpv6neighborcacheOutput(ctx *pulumi.Context, args LookupIpv6neighborcacheOutputArgs, opts ...pulumi.InvokeOption) LookupIpv6neighborcacheResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpv6neighborcacheResult, error) {
			args := v.(LookupIpv6neighborcacheArgs)
			r, err := LookupIpv6neighborcache(ctx, &args, opts...)
			var s LookupIpv6neighborcacheResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpv6neighborcacheResultOutput)
}

// A collection of arguments for invoking getIpv6neighborcache.
type LookupIpv6neighborcacheOutputArgs struct {
	// Specify the fosid of the desired system ipv6neighborcache.
	Fosid pulumi.IntInput `pulumi:"fosid"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupIpv6neighborcacheOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv6neighborcacheArgs)(nil)).Elem()
}

// A collection of values returned by getIpv6neighborcache.
type LookupIpv6neighborcacheResultOutput struct{ *pulumi.OutputState }

func (LookupIpv6neighborcacheResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpv6neighborcacheResult)(nil)).Elem()
}

func (o LookupIpv6neighborcacheResultOutput) ToLookupIpv6neighborcacheResultOutput() LookupIpv6neighborcacheResultOutput {
	return o
}

func (o LookupIpv6neighborcacheResultOutput) ToLookupIpv6neighborcacheResultOutputWithContext(ctx context.Context) LookupIpv6neighborcacheResultOutput {
	return o
}

// Unique integer ID of the entry.
func (o LookupIpv6neighborcacheResultOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIpv6neighborcacheResult) int { return v.Fosid }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIpv6neighborcacheResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv6neighborcacheResult) string { return v.Id }).(pulumi.StringOutput)
}

// Select the associated interface name from available options.
func (o LookupIpv6neighborcacheResultOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv6neighborcacheResult) string { return v.Interface }).(pulumi.StringOutput)
}

// IPv6 address (format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx).
func (o LookupIpv6neighborcacheResultOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv6neighborcacheResult) string { return v.Ipv6 }).(pulumi.StringOutput)
}

// MAC address (format: xx:xx:xx:xx:xx:xx).
func (o LookupIpv6neighborcacheResultOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpv6neighborcacheResult) string { return v.Mac }).(pulumi.StringOutput)
}

func (o LookupIpv6neighborcacheResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpv6neighborcacheResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpv6neighborcacheResultOutput{})
}
