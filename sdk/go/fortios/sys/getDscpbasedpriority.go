// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on an fortios system dscpbasedpriority
func LookupDscpbasedpriority(ctx *pulumi.Context, args *LookupDscpbasedpriorityArgs, opts ...pulumi.InvokeOption) (*LookupDscpbasedpriorityResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupDscpbasedpriorityResult
	err := ctx.Invoke("fortios:sys/getDscpbasedpriority:getDscpbasedpriority", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDscpbasedpriority.
type LookupDscpbasedpriorityArgs struct {
	// Specify the fosid of the desired system dscpbasedpriority.
	Fosid int `pulumi:"fosid"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getDscpbasedpriority.
type LookupDscpbasedpriorityResult struct {
	// DSCP(DiffServ) DS value (0 - 63).
	Ds int `pulumi:"ds"`
	// Item ID.
	Fosid int `pulumi:"fosid"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// DSCP based priority level.
	Priority  string  `pulumi:"priority"`
	Vdomparam *string `pulumi:"vdomparam"`
}

func LookupDscpbasedpriorityOutput(ctx *pulumi.Context, args LookupDscpbasedpriorityOutputArgs, opts ...pulumi.InvokeOption) LookupDscpbasedpriorityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDscpbasedpriorityResult, error) {
			args := v.(LookupDscpbasedpriorityArgs)
			r, err := LookupDscpbasedpriority(ctx, &args, opts...)
			var s LookupDscpbasedpriorityResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDscpbasedpriorityResultOutput)
}

// A collection of arguments for invoking getDscpbasedpriority.
type LookupDscpbasedpriorityOutputArgs struct {
	// Specify the fosid of the desired system dscpbasedpriority.
	Fosid pulumi.IntInput `pulumi:"fosid"`
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupDscpbasedpriorityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDscpbasedpriorityArgs)(nil)).Elem()
}

// A collection of values returned by getDscpbasedpriority.
type LookupDscpbasedpriorityResultOutput struct{ *pulumi.OutputState }

func (LookupDscpbasedpriorityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDscpbasedpriorityResult)(nil)).Elem()
}

func (o LookupDscpbasedpriorityResultOutput) ToLookupDscpbasedpriorityResultOutput() LookupDscpbasedpriorityResultOutput {
	return o
}

func (o LookupDscpbasedpriorityResultOutput) ToLookupDscpbasedpriorityResultOutputWithContext(ctx context.Context) LookupDscpbasedpriorityResultOutput {
	return o
}

// DSCP(DiffServ) DS value (0 - 63).
func (o LookupDscpbasedpriorityResultOutput) Ds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDscpbasedpriorityResult) int { return v.Ds }).(pulumi.IntOutput)
}

// Item ID.
func (o LookupDscpbasedpriorityResultOutput) Fosid() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDscpbasedpriorityResult) int { return v.Fosid }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDscpbasedpriorityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDscpbasedpriorityResult) string { return v.Id }).(pulumi.StringOutput)
}

// DSCP based priority level.
func (o LookupDscpbasedpriorityResultOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDscpbasedpriorityResult) string { return v.Priority }).(pulumi.StringOutput)
}

func (o LookupDscpbasedpriorityResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDscpbasedpriorityResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDscpbasedpriorityResultOutput{})
}
