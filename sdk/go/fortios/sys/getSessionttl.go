// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information on fortios system sessionttl
func LookupSessionttl(ctx *pulumi.Context, args *LookupSessionttlArgs, opts ...pulumi.InvokeOption) (*LookupSessionttlResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSessionttlResult
	err := ctx.Invoke("fortios:sys/getSessionttl:getSessionttl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSessionttl.
type LookupSessionttlArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam *string `pulumi:"vdomparam"`
}

// A collection of values returned by getSessionttl.
type LookupSessionttlResult struct {
	// Default timeout.
	Default string `pulumi:"default"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Session TTL port. The structure of `port` block is documented below.
	Ports     []GetSessionttlPort `pulumi:"ports"`
	Vdomparam *string             `pulumi:"vdomparam"`
}

func LookupSessionttlOutput(ctx *pulumi.Context, args LookupSessionttlOutputArgs, opts ...pulumi.InvokeOption) LookupSessionttlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSessionttlResult, error) {
			args := v.(LookupSessionttlArgs)
			r, err := LookupSessionttl(ctx, &args, opts...)
			var s LookupSessionttlResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSessionttlResultOutput)
}

// A collection of arguments for invoking getSessionttl.
type LookupSessionttlOutputArgs struct {
	// Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
	Vdomparam pulumi.StringPtrInput `pulumi:"vdomparam"`
}

func (LookupSessionttlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionttlArgs)(nil)).Elem()
}

// A collection of values returned by getSessionttl.
type LookupSessionttlResultOutput struct{ *pulumi.OutputState }

func (LookupSessionttlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionttlResult)(nil)).Elem()
}

func (o LookupSessionttlResultOutput) ToLookupSessionttlResultOutput() LookupSessionttlResultOutput {
	return o
}

func (o LookupSessionttlResultOutput) ToLookupSessionttlResultOutputWithContext(ctx context.Context) LookupSessionttlResultOutput {
	return o
}

// Default timeout.
func (o LookupSessionttlResultOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionttlResult) string { return v.Default }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSessionttlResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionttlResult) string { return v.Id }).(pulumi.StringOutput)
}

// Session TTL port. The structure of `port` block is documented below.
func (o LookupSessionttlResultOutput) Ports() GetSessionttlPortArrayOutput {
	return o.ApplyT(func(v LookupSessionttlResult) []GetSessionttlPort { return v.Ports }).(GetSessionttlPortArrayOutput)
}

func (o LookupSessionttlResultOutput) Vdomparam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSessionttlResult) *string { return v.Vdomparam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSessionttlResultOutput{})
}
